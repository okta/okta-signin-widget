/* eslint complexity: 0, max-statements: 0 */
var exec    = require('./exec'),
    logger  = require('winston');

// Normalize by removing version number if it exists
function getName(packageToInstall) {
  var re = /^((@[^/]+\/)?([^@]+))(@.*)?$/i,
      matches = packageToInstall.match(re);
  return matches[1];
}

function isPresent(deps, pkgName) {
  return !!(deps && deps[pkgName]);
}

module.exports = function (targetDir, targetPkg, packageToInstall, save, saveDev) {
  var pkgName = getName(packageToInstall),
      inDevDeps = isPresent(targetPkg.devDependencies, pkgName),
      inDeps = isPresent(targetPkg.dependencies, pkgName),
      installFlag;

  logger.cli();
  logger.info(`${pkgName} exists in dependencies? ${inDeps}`);
  logger.info(`${pkgName} exists in devDependencies? ${inDevDeps}`);

  if (inDevDeps && inDeps) {
    throw new Error(`"${pkgName}" is in devDependencies and dependencies`);
  }

  if (!inDevDeps && !inDeps && !save && !saveDev) {
    throw new Error('Must specify a --save-dev or --save flag');
  }

  if ((inDevDeps || inDeps) && (save || saveDev)) {
    throw new Error(`${pkgName} is already in package.json - do not pass in --save or --save-dev flag`);
  }

  installFlag = inDeps || save ? 'save' : 'save-dev';
  exec(`npm install -E ${packageToInstall} --${installFlag}`, targetDir);
};
