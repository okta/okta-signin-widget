/* eslint max-statements: 0 */
var jsonfile  = require('jsonfile'),
    path      = require('path'),
    _         = require('lodash'),
    logger    = require('winston'),
    fs        = require('fs');

function check(filePath, json) {
  _.each(json.dependencies, function (dependency) {
    if (dependency.resolved) {
      throw new Error(
        `${filePath} is invalid - use install-with-shrinkwrap when installing modules`
      );
    }
    if (dependency.dependencies) {
      check(filePath, dependency);
    }
  });
}

function writeCheckStyle(shrinkwrapFile, reporterFile, msg) {
  var err, xml;

  if (msg) {
    err = `<error line="1" column="1" severity="error" message="${msg}" source="" />`;
  } else {
    err = '';
  }

  xml = `
<?xml version="1.0" encoding="utf-8"?>
<checkstyle version="4.3">
  <file name="${shrinkwrapFile}">${err}</file>
</checkstyle>\n`;

  logger.info(`Writing to reporterFile '${reporterFile}'`);
  logger.info(xml);
  fs.writeFileSync(reporterFile, xml);
}

module.exports = function (targetDir, reporterOutput, force) {
  var filePath = path.join(targetDir, 'npm-shrinkwrap.json');

  logger.info(`Checking shrinkwrap: ${filePath}`);

  try {
    check(filePath, jsonfile.readFileSync(filePath));
    logger.info('Shrinkwrap is valid');
    if (reporterOutput) {
      writeCheckStyle(filePath, reporterOutput);
    }
  } catch (e) {
    logger.error(e.message);
    if (reporterOutput) {
      writeCheckStyle(filePath, reporterOutput, e.message);
    }
    if (!force) {
      throw e;
    }
  }

};
