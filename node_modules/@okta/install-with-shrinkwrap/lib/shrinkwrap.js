/* eslint max-statements:0 */
var exec      = require('./exec'),
    path      = require('path'),
    jsonfile  = require('jsonfile'),
    logger    = require('winston'),
    rimraf    = require('rimraf');

// This is necessary because shrinkwrap will write our internal registry urls
// to the npm-shrinkwrap.json file, which will cause builds outside of our vpn
// to fail. By removing the resolved fields, we only enforce module and
// version numbers (but not the registry a specific package was downloaded from)
//
// A happy side effect is that this speeds up the npm install - the resolved
// fields generate too many calls to artifactory. Removing them defaults to
// looking up modules from the local .npm cache.
//
// See more discussion here:
// https://github.com/npm/npm/issues/6444
// https://github.com/npm/npm/issues/3581#issuecomment-58516251
// https://github.com/npm/npm/issues/6445
function resolvedReplacer(key, val) {
  if (key === 'resolved' || key === 'from') {
    return undefined;
  }
  return val;
}

function removeResolved(targetDir) {
  var filePath = path.join(targetDir, 'npm-shrinkwrap.json'),
      shrinkwrap = jsonfile.readFileSync(filePath);
  jsonfile.writeFileSync(filePath, shrinkwrap, {
    spaces: 2,
    replacer: resolvedReplacer
  });
}

module.exports = function (srcDir, targetDir) {
  logger.cli();

  // 1. Remove existing node_modules to start with a clean slate
  var nodeModules = path.join(targetDir, 'node_modules');
  logger.info(`Removing ${nodeModules} to get rid of any excess packages`);
  rimraf.sync(nodeModules);

  // 2. Run npm install
  logger.info('Running npm install');
  exec('npm install', targetDir);

  // 3. Run an npm dedupe to remove duplicated packages
  logger.info('Running an npm dedupe to remove duplicated packages');
  exec('npm dedupe', targetDir);

  // 4. Run an npm-shrinkwrap --dev
  logger.info('Writing changes to shrinkwrap');
  exec('npm shrinkwrap --dev', targetDir);

  // 5. Remove resolved
  logger.info('Removing resolved and from in shrinkwrap');
  removeResolved(targetDir);
};
