define([
  'underscore',
  'shared/models/Model',
  'shared/models/BaseCollection'
], function (
  _,
  Model,
  BaseCollection
) {

  var SessionAuthMode = Model.extend({
    props: {
      type: ['string', true, 'OAUTH'],
      signatureType: ['string', true, 'HMACSHA1'],
      refreshTokenAuthenticationType: ['string', true, 'NONE'],
      authModeType: ['string', true, 'OAuthSessionAuthModeMediated'],
      accessTokenEndpoint: ['string', true],
      authorizeEndpoint: ['string', true],
      consumerKey: ['string', true],
      consumerSecret: ['string', true],
      customHelpText: 'string',
      customLabel: 'string',
      definedAsBeta: 'boolean',
      instructionsPage: 'boolean',
      id: 'string'
    }
  });

  var SessionAuthModes = BaseCollection.extend({
    getMissingSessionAuthModeTypes: function () {
      var supportedTypes = ['OAUTH'];
      var existingTypes = [];
      this.each(function (model) {
        existingTypes.push(model.get('type'));
      });
      return _.difference(supportedTypes, existingTypes);
    },

    toJSON: function () {
      var json = {};
      this.each(function (model) {
        json[model.get('type')] = model.toJSON();
      });
      return json;
    }
  });

  return {
    Model: SessionAuthMode,
    Collection: SessionAuthModes
  };
});
