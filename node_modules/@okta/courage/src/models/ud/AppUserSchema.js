define([
  'underscore',
  'shared/util/TemplateUtil',
  'shared/models/BaseSchema'
], function (_, TemplateUtil, BaseSchema) {

  var tmpl = TemplateUtil.tpl('/api/v1/apps/user/types/{{objTypeId}}/schemas');

  var AppUserSchema = BaseSchema.Model.extend({

    urlRoot: function () {
      return tmpl(this);
    },

    initialize: function (attrs, options) {
      options || (options = {});
      options.collection || (options.collection = {});
      this.objTypeId = options.objTypeId || options.collection.objTypeId;
    },

    trimProperty: function (property) {
      property = BaseSchema.Model.prototype.trimProperty.apply(this, arguments);
      return _.omit(property, 'settings');
    },

    clone: function () {
      var schema = new this.constructor(this.attributes, {objTypeId: this.objTypeId});
      schema.getProperties().set(this.getProperties().toJSON({verbose: true}));
      return schema;
    }
  });

  var AppUserSchemas = BaseSchema.Collection.extend({
    model: AppUserSchema,
    url: AppUserSchema.prototype.urlRoot,
    initialize: AppUserSchema.prototype.initialize
  });

  return {
    Model: AppUserSchema,
    Collection: AppUserSchemas
  };

});
