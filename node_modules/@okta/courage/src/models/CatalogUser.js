define([
  'jquery',
  'underscore',
  'shared/util/TemplateUtil',
  './BaseModel',
  './BaseCollection'
], function ($, _, TemplateUtil, BaseModel, BaseCollection) {

  var url = TemplateUtil.tpl('/api/v1/apps/{{__instanceId__}}/catalog/users');

  var CatalogOktaUser = BaseModel.extend({
    defaults: {
      '__isAssigned__': false,
      '__displayName__': BaseModel.ComputedProperty(['profile'], function (profile) {
        return $.trim((profile.firstName || '') + ' ' + (profile.lastName || ''));
      }),
      '__email__': BaseModel.ComputedProperty(['profile'], function (profile) {
        return profile.email || '';
      })
    },

    initialize: function (attrs) {
      BaseModel.prototype.initialize.apply(this, arguments);
      attrs || (attrs = {});
      if (!this.get('__instanceId__')) {
        throw 'Cannot initialize CatalogUser without an instance id';
      }
    },

    urlRoot: function () {
      return url({'__instanceId__': this.get('__instanceId__')});
    }
  });

  var CatalogOktaUsers = BaseCollection.extend({
    model: CatalogOktaUser,

    url: function () {
      return url({'__instanceId__': this['__instanceId__']});
    },

    initialize: function (models, options) {
      BaseCollection.prototype.initialize.apply(this, arguments);
      options || (options = {});
      this['__instanceId__'] = options['__instanceId__'];
      if (!this['__instanceId__']) {
        throw 'Cannot initialize CatalogUsers without an instance id';
      }
    },

    parse: function (resp) {
      _.each(resp, _.bind(function (catalogUserObj, index) {
        resp[index]['__instanceId__'] = this['__instanceId__'];
      }, this)
      );
      return resp;
    }
  });

  /**
  * @class CatalogUser
  *
  * Catalog(unassigned) user(s) for a specific app instance
  */
  return {
    Model: CatalogOktaUser,
    Collection: CatalogOktaUsers
  };
});
