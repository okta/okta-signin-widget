define([
  'shared/models/Model',
  'shared/models/BaseCollection'
],
function (Model, BaseCollection) {

  var Agent = Model.extend({

    props: {
      agentType: 'string',
      agentVersion: 'string',
      appInstanceMappings: 'array',
      appName: 'string',
      connectionStatus: 'string',
      health: 'string',
      id: 'string',
      instanceId: 'string',
      lastConnect: 'string',
      name: 'string',
      orgId: 'string',
      status: 'string',
      tokenId: 'string'
    },

    local: {
      '__expand__': 'boolean'
    },

    url: function () {
      return '/api/internal/connector/agent-status/' + this.escape('id') + '?status=' + this.escape('status');
    },

    parse: function (payload) {
      return payload || {};
    },

    sync: function (method, model, options) {
      if (method == 'update' || method == 'delete') {
        method = 'create'; // force 'POST'
      }
      return Model.prototype.sync.call(this, method, model, options);
    }
  });

  var Agents = BaseCollection.extend({
    model: Agent,
    url: '/api/internal/connector/agents/type/OPP'
  });

  return {
    Model: Agent,
    Collection: Agents
  };

});
