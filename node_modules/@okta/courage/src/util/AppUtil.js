define([
  'underscore'
], function (_) {

  return {
    getVerificationStatuses: function (options) {
      var statuses = options && options.any ? ['ANY'] : [];
      statuses.push('NEW', 'UNVERIFIED', 'COMMUNITY_VERIFIED', 'OKTA_VERIFIED');
      return statuses;
    },
    getVerificationStatus: function (status) {
      switch (status) {
      case 'ANY':
        return 'Any';
      case 'NEW':
        return 'Private';
      case 'UNVERIFIED':
        return 'Community Created';
      case 'COMMUNITY_VERIFIED':
        return 'Community Verified';
      case 'OKTA_VERIFIED':
        return 'Okta Verified';
      }
      return '';
    },
    getEvaluationStatuses: function (arg) {
      var options;
      var status;
      if (typeof arg === 'object') {
        options = arg;
      } else {
        status = arg;
      }
      var statuses = options && options.any ? ['ANY', 'NEW'] : [];
      if (status === 'NEW') {
        statuses.push('NEW');
      }
      statuses.push('UNDER_REVIEW', 'PROMOTING', 'PROMOTED', 'DISCARDED');
      return statuses;
    },
    getEvaluationStatus: function (status) {
      var statuses = {
        'ANY': 'Any',
        'NEW': 'New',
        'UNDER_REVIEW': 'Under review',
        'PROMOTING': 'Promoting',
        'PROMOTED': 'Promoted',
        'DISCARDED': 'Discarded'
      };
      if (_.has(statuses, status)) {
        return statuses[status];
      } else {
        return '';
      }
    },
    getCustomerTypes: function () {
      var customerTypes = ['ANY', 'CUSTOMER', 'PARTNER', 'PARTNER_COMPLETED'];
      return customerTypes;
    }
  };

});

