define(['underscore', 'jquery', 'shared/util/Keys'], function (_, $, Keys) {

  function attachKeyboardEvent(target, eventtype, key, fn, unreg) {
    var event = eventtype + '.OKTA_GENERIC_KEY_BINDINGS.' + Math.random();
    target || (target = document);

    $(target).on(event, function (e) {
      e.preventDefault();
      e.stopPropagation();
      var keyCode = e.which || e.keyCode;
      if (keyCode === key) {
        fn();

        _.isFunction(unreg) && (unreg = unreg());
        unreg !== false && $(document).off(event);
      }
    });

    return event;
  }

  return {

    escapeKeyHandler: function (target, fn, unreg) {
      return attachKeyboardEvent.call(this, target, 'keyup', Keys.ESC, fn, unreg);
    },

    enterKeyHandler: function (target, fn, unreg) {
      return attachKeyboardEvent.call(this, target, 'keyup', Keys.RETURN, fn, unreg);
    }

  };

});
