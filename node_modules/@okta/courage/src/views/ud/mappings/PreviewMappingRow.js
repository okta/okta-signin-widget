/* eslint max-params: [2, 7] */
define([
  'jquery',
  'shared/views/BaseView',
  'shared/util/TemplateUtil',
  'shared/util/SchemaUtil',
  'shared/util/ProfileMappingPushStatus',
  './UsernameDefaultView',
  './PreviewResult'
], function ($, BaseView, TemplateUtil, SchemaUtil, ProfileMappingPushStatus, UsernameDefaultView, PreviewResult) {

  var nonUsernameSourceTemplate = TemplateUtil.tpl('\
    <div class="o-form-input">\
      <div class="source-name">{{sourceExpression}}</div><div class="source-type">{{__displaySourceTypeLabel__}}</div>\
    </div>\
  ');

  var pushStatusTemplate = '<span class="icon"></span>';

  return BaseView.extend({
    tagName: 'tr',

    template: '\
      <td class="source-property"></td>\
      <td class="push-status"></td>\
      <td class="target-output"></td>\
    ',

    initialize: function () {
      this.mappingData = this.options.mappingData;
      this.attributeUsernameType = SchemaUtil.getSourceUsernameType(
        this.state.get('tabId'), this.mappingData.targetField, this.options.appModel.get('name')
      );
      this.add(PreviewResult, {
        selector: '.target-output',
        options: {
          mappingData: this.mappingData
        }
      });
    },

    render: function () {
      BaseView.prototype.render.apply(this, arguments);
      !this.mappingData.sourceExpression && this.$el.addClass('no-mapping');
      if (this.attributeUsernameType == 'non-username') {
        this.$('.source-property').append(
          nonUsernameSourceTemplate(this.mappingData)
        );
        this.$('.push-status').append(
          $(pushStatusTemplate).addClass(ProfileMappingPushStatus.getIconClass(this.mappingData.pushStatus))
        );
      } else {
        var usernameDefaultView = new UsernameDefaultView({
          settings: this.settings,
          state: this.state,
          model: this.options.appModel,
          previewModel: this.options.previewModel
        });
        this.$('.source-property').append(usernameDefaultView.render().$el);
      }
      return this;
    }
  });
});
