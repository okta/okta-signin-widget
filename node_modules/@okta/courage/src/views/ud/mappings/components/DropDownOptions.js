define([
  'underscore', 'jquery', 'shared/util/ProfileMappingPushStatus'
], function (_, $, ProfileMappingPushStatus) {
  var applyOnCreateAndUpdateOption = {
    icon: 'mapping-rule-icon mapping-rule-create-update',
    className: 'mapping-rule mapping-rule-create-update-option',
    title: 'Apply mapping on user create and update',
    action: function () {
      if (this.model.get('sourceExpression') !== '') {
        this.model.set('pushStatus', ProfileMappingPushStatus.PUSH);
      }
      $('#ud-attribute-mapping-modal .dropdown .options').hide();
    }
  };

  var applyOnCreateOnlyOption = {
    icon: 'mapping-rule-icon mapping-rule-create-only',
    className: 'mapping-rule mapping-rule-create-only-option',
    title: 'Apply mapping on user create only',
    action: function () {
      if (this.model.get('sourceExpression') !== '') {
        this.model.set('pushStatus', ProfileMappingPushStatus.DONT_PUSH);
      }
      $('#ud-attribute-mapping-modal .dropdown .options').hide();
    }
  };

  var doNotMapOption = {
    icon: 'mapping-rule-icon mapping-rule-not-mapped',
    className: 'mapping-rule mapping-rule-not-mapped-option',
    title: 'Do not map',
    action: function () {
      this.model.set('sourceExpression', '');
      this.model.set('pushStatus', null);
      $('#ud-attribute-mapping-modal .dropdown .options').hide();
    }
  };

  return {
    getData: function (tabId, features) {
      var data = {};

      if (tabId == 'appToOkta') {
        data = this.getAppToOktaData(features);
      }
      else {
        data = this.getOktaToAppData(features);
      }

      return data;
    },

    getAppToOktaData: function (features) {
      var data = {};

      if (_.contains(features, 'PROFILE_MASTERING')) {
        data = [applyOnCreateAndUpdateOption, doNotMapOption];
      }
      else {
        data = [applyOnCreateOnlyOption, doNotMapOption];
      }

      return data;
    },

    getOktaToAppData: function (features) {
      var data = {};

      // The applyOnCreateAndUpdate option is applicable if one of the following is satisfied:
      //    - PUSH_PROFILE_UPDATES feature is present
      //    - Current app is a SWA app, determined by the lack of features in the app model
      //    - Provisioning is disabled, since IMPORT_NEW_USERS is not present
      if (_.contains(features, 'PUSH_PROFILE_UPDATES') ||
          features.length === 0 ||
          !_.contains(features, 'IMPORT_NEW_USERS'))
      {
        data = [applyOnCreateAndUpdateOption, applyOnCreateOnlyOption, doNotMapOption];
      }
      else
      {
        data = [applyOnCreateOnlyOption, doNotMapOption];
      }

      return data;
    }
  };

});
