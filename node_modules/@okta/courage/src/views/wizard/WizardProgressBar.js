define([
  'underscore',
  'shared/views/BaseView'
],
function (_, BaseView) {

  var ProgressBarStep = BaseView.extend({
    tagName: 'li',
    className: 'o-wizard-step',
    wizardStateEvents: {
      'change:step change:error wizard:done wizard:sync wizard:error': 'render'
    },

    template: '<span class="icon icon-16 icon-only"></span>',

    postRender: function () {
      var stateStep = this.options.wizardState.get('step'),
          myStep = this.options.counter,
          isDone = myStep < stateStep,
          isCurrent =  myStep === stateStep && !this.options.wizardState.get('error'),
          isError =  myStep === stateStep && this.options.wizardState.get('error');

      this.$el
        .toggleClass('o-wizard-active', isCurrent)
        .toggleClass('o-wizard-complete', isDone)
        .toggleClass('o-wizard-error', isError);

      this.$('span')
        .toggleClass('confirm-16-green', isDone || isCurrent)
        .toggleClass('confirm-16-red', isError);
    }
  });

  return BaseView.extend({
    tagName: 'ul',
    className: 'o-wizard-progressbar',
    initialize: function () {
      _.each(this.options.wizardState.getSteps(), function (step) {
        this.addStep(step);
      }, this);
    },
    addStep: function (step) {
      this.add(ProgressBarStep, {
        options: {
          counter: this.size(),
          substep: !!step.substep
        }
      });
    }
  }, {
    ProgressBarStep: ProgressBarStep
  });

});
