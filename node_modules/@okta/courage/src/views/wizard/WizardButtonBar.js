define([
  'shared/views/BaseView',
  'shared/util/ButtonFactory'
],
function (BaseView, ButtonFactory) {


  return BaseView.extend({
    className: 'o-form-button-bar float-l',
    attributes: {
      'style': 'width: 95%;'
    },

    initialize: function () {
      var state = this.options.wizardState;

      this.add(ButtonFactory.create({
        className: 'link-button-big back',
        title: 'Previous',
        click: function () {
          state.trigger('wizard:prev');
        },
        postRender: function () {
          this.$el.toggle(state.hasPrevStep());
        },
        wizardStateEvents: {
          'wizard:next wizard:prev': 'disable',
          'wizard:sync wizard:error change:step change:error': 'postRender enable'
        },
        attributes: {
          'style': 'min-width: 100px'
        }
      }));

      this.add(ButtonFactory.create({
        className: 'link-button-big cancel',
        title: 'Cancel',
        click: function () {
          state.trigger('wizard:cancel');
        },
        wizardStateEvents: {
          'wizard:sync wizard:error change:step change:error': 'enable',
          'wizard:next wizard:prev': 'disable'
        },
        attributes: {
          'style': 'min-width: 100px'
        }
      }));

      this.add(ButtonFactory.create({
        title: function () {
          return state.hasNextStep() ? 'Next' : this.options.save || 'Done';
        },
        className: 'button-primary button link-button-big next',
        click: function () {
          state.trigger('wizard:next');
        },
        postRender: function () {
          this.enable();
        },
        wizardStateEvents: {
          'wizard:sync wizard:error change:step change:error': 'render',
          'wizard:next wizard:prev': 'disable'
        },
        modelEvents: {
          'invalid error': 'enable'
        },
        attributes: {
          'style': 'min-width: 100px; float: right'
        }
      }));

    }
  });

});
