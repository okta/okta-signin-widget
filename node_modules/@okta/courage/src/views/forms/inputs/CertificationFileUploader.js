define([
  'underscore',
  'moment',
  './BaseFileUploader'
], function (_, moment, BaseFileUploader) {

  return BaseFileUploader.extend({

    className: 'cert-file-upload',

    parse: function (src) {
      var target = _.clone(src || {});
      if (target.notAfter) {
        var diff = moment.utc(target.notAfter).diff(moment.utc(), 'days');
        if (diff > 0) {
          _.defaults(target, {
            expiresInDays: diff
          });
        }
        if (diff < 14) {
          target.expireClass = 'cert-expired';
        }
      }
      return target;
    },

    previewTemplate: '\
      <div class="cert-thumbnail"><span class="icon icon-32 icon-only file-cert-32"></span></div>\
      <ul class="cert-details">\
        {{#if certName}}<li class="cert-name">{{certName}}</li>{{/if}}\
        {{#if issuer}}<li class="cert-issuer">{{issuer}}</li>{{/if}}\
        {{#if uploadedBy}}{{#if uploadedOn}}\
        <li class="cert-upload-info">\
          {{i18n code="oform.certificate.uploaded" bundle="messages" arguments="uploadedBy;uploadedOn"}} \
        </li>\
        {{/if}}{{/if}}\
        {{#if notBefore}}{{#if notAfter}}\
        <li class="cert-valid-date">\
          {{i18n code="oform.certificate.valid" bundle="messages" arguments="notBefore;notAfter"}}\
        </li>\
        {{/if}}{{/if}}\
        <li class="cert-expiration {{expireClass}}">\
          {{#if expiresInDays}}\
          {{i18n code="oform.certificate.expires" bundle="messages" arguments="expiresInDays"}}\
          {{else}}\
          {{i18n code="oform.certificate.expired" bundle="messages"}}\
          {{/if}}\
        </li>\
      </ul>',

    fileTypes: ['.crt', '.pem']

  });

});
