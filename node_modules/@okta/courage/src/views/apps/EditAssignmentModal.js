define([
  'underscore',
  'jquery',
  'shared/views/components/BaseModalDialog'
], function (_, $, BaseModalDialog) {
  var CONTAINER_ID = 'edit-assignment-modal';

  /**
   * The edit assignment modal super class
   * which shows a form to edit the assignment
   * See more details and related links from
   * https://oktawiki.atlassian.net/wiki/display/PM/Assignments+Design
   *
   * If not already, the following edit assignment modals should extend from this
   * in order to follow the same pattern/design:
   * - profile/apps/views/AppUserModal (AA-App, AA-User)
   * - group/views/EditAssignmentModal (GAA-Group)
   * - [TO_BE_ADDED] (GAA-App)
   * - [TO_BE_ADDED] (UGA-User)
   * - [TO_BE_ADDED] (UGA-Group)
   *
   * TODOs:
   * This super class needs more abstraction/improvement.
   * We can address all those in the future gradually.
   */
  return BaseModalDialog.extend({

    params: {
      containerId: CONTAINER_ID,
      position: ['50%'],
      minWidth: 620,
      maxWidth: 688,
      autoResize: true
    },

    // This modal is only initialized when the user clicks a edit button
    // The list page only displays an edit button when an assignment can be modified
    // so there is no need to check again
    initialize: function () {
      this.form && this.form.remove();
      this.setForm();
      if (this.form) {
        this.add(this.form);
        this._addFormListeners();
      }
    },

    render: function () {
      BaseModalDialog.prototype.render.apply(this, arguments);
      var self = this;
      _.defer(function () {
        self.resizeModal();
        $(window).resize(_.debounce(function () {
          self.resizeModal();
        }, 100));
      });
      return this;
    },

    setForm: function () {
      throw new Error('setForm() is an abstract method');
    },

    /**
    * @Override
    */
    resizeModal: function () {
      // jquery simplemodal wrap an additional div around this.$el
      var m = $('#' + CONTAINER_ID),
          f = this.form;
      // the function is to make sure:
      // 1. the modal is centered within the viewport
      // 2. the whole modal is within the viewport (the header and form buttons),
      //    only the form content is scrollable (overflow: auto is defined in css)
      // there's no good solution to totally fix the width issue yet for tiny window,
      // leave it for jquery simplemodal autoResize to do its best
      var mHeight = m.height(),
          wHeight = $(window).height();
      if (mHeight > wHeight) {
        f.contentHeight(f.contentHeight() - (mHeight - wHeight));
      } else {
        f.contentHeight(f.contentHeight() + (wHeight - mHeight));
      }
      m.css('margin-top', -(m.height() / 2));
    },

    _addFormListeners: function () {
      this.listenTo(this.form, 'resize', function () {
        this.resize();
        $(window).trigger('resize');
      });
      this.listenTo(this.form, 'cancel', this.remove);
      this.listenTo(this.form.model, 'sync', this.remove);
    }
  });
});
