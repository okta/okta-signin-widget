#############################################################################################
#############################################################################################
##
##  DO NOT MANUALLY MODIFY - THIS IS AN AUTOMATICALLY GENERATED FILE.
##  REFER TO https://github.com/okta/npm/tree/master/i18n FOR MORE DETAILS
##
##  @okta/i18n, https://github.com/okta/npm/tree/master/i18n, 05/16/2016
##
#############################################################################################
#############################################################################################


# DO NOT MANUALLY MODIFY THIS SHA:
# Last translated sha - 51633c9129ad96f16f76f67b118ef0e1e5aacc39

# !!! KEYS TO BE TRANSLATED !!!
# Please put any enduser-facing messages that you would like translated in this section.
# The only enduser-facing messages that should be here are those also shared with admin;
# otherwise, please put them in enduser.properties
# If your string does not require translation, scroll down to "KEYS BELOW THIS LINE WILL NOT BE TRANSLATED"

# Security questions--these are defined in resources/spring/services/security.xml
security.disliked_food                         = What is the food you least liked as a child?
security.name_of_first_plush_toy               = What is the name of your first stuffed animal?
security.first_award                           = What did you earn your first medal or award for?
security.favorite_security_question            = What is your favorite security question?
security.favorite_toy                          = What is the toy/stuffed animal you liked the most as a kid?
security.first_computer_game                   = What was the first computer game you played?
security.favorite_movie_quote                  = What is your favorite movie quote?
security.first_sports_team_mascot              = What was the mascot of the first sports team you played on?
security.first_music_purchase                  = What music album or song did you first purchase?
security.favorite_art_piece                    = What is your favorite piece of art?
security.grandmother_favorite_desert           = What was your grandmother's favorite dessert?
security.first_thing_cooked                    = What was the first thing you learned to cook?
security.childhood_dream_job                   = What was your dream job as a child?
security.first_kiss_location                   = Where did you have your first kiss?
security.place_where_significant_other_was_met = Where did you meet your spouse/significant other?
security.favorite_vacation_location            = Where did you go for your favorite vacation?
security.new_years_two_thousand                = Where were you on New Year's Eve in the year 2000?
security.favorite_speaker_actor                = Who is your favorite speaker/orator?
security.favorite_book_movie_character         = Who is your favorite book/movie character?
security.favorite_sports_player                = Who is your favorite sports player?
# Custom security question option
security.custom                                = Create your own security question
# Deprecated security questions--these won't appear on profile page but may appear on the challenge page
security.father                                = Your father's middle name?
security.city                                  = City, town or village where you were born?
security.social                                = Last 4 digits of your social security number?
security.license                               = Last 4 digits or letters in your drivers licence number?
security.last_5_digits_of_first_phone_number   = Last 5 digits of your first phone number?
security.surname_of_doctor                     = Your doctor's last name?
security.street_name_after_first_leaving_home  = Street where you lived on after you first left home?
security.city_of_favourite_aunt_uncle          = City where your favourite aunt or uncle lives?
security.surname_of_first_childhood_friend     = Last name of your favourite childhood friend?
security.street_name_in_second_grade           = Street you lived on in second grade?
security.place_parents_met                     = Place where your mother and father met?
security.surname_of_third_grade_teacher        = Last name of your third grade teacher?
security.given_name_of_first_kissee            = First name of the first person you kissed?
security.maiden_name_of_maternal_grandmother   = Your maternal grandmother's maiden name?
security.place_of_first_job                    = City where your first job was located?

#Invalid security question reasons
securityQuestion.answer.tooShort = The security question answer must be at least 4 characters in length
securityQuestion.answer.tooShort.arg = The security question answer must be at least {0} characters in length
securityQuestion.answer.tooLong = The security question answer must be at most 100 characters in length
securityQuestion.question.tooLong = The security question must be at most 100 characters in length

# Invalid password reasons
password.valid            = Password is valid
password.requirementsNotMet = Passwords must have {0}
password.minlength        = Passwords must be at least {0} characters in length
password.containsUserName = Passwords cannot contain parts of the login username
password.charVariety      = Passwords must contain a mixture of uppercase, lowercase, digits, and symbols
password.inHistory        = Password has been used too recently
password.current          = Password cannot be your current password
password.recentPasswordChange=Password has been changed too recently
password.policyNotMet     = New Password does not meet the password policy
password.constraintViolation = A constraint violation occurred. Check the minimum password length, password complexity and password history requirements
password.oldPasswordIncorrect = Old Password is not correct
password.accessDenied  = Password could not be changed, please contact your administrator.
password.unexpectedError  = Unexpected error when changing password, please try again
password.passwordChangeAgentTimeout=Communication error occurred, please try again
password.tagsNotAllowed = Password must not contain HTML tags

# Password field placeholder in Edit User Assignment Modal for SWA option Administrator sets username and password
password.set = Password has been set
password.notSet = Password has not been set

# Password Policy Description
password_policy.description = Your password must have
password_policy.length = at least {0} characters
password_policy.lowercase = a lowercase letter
password_policy.uppercase = an uppercase letter
password_policy.number = a number
password_policy.symbol = a symbol
password_policy.no_username = no parts of your username

# User profile error
user.profile.verification_expired = Password or factor verification has expired.
user.signIn.error = Sign in failed!

# Error messages
# Contains error messages coming from object validation
tagsNotAllowed=The field must not contain HTML tags
blank=The field cannot be left blank
empty=The field must be set
RequirementsNotMet=Passwords must have {0}
MinLengthNotMet=Passwords must be at least {0} characters long
UserNameDetected=Password must not contain part of the user name
MinCharVarietyNotMet=Password must contain at least 1 uppercase letter, 1 lowercase letter and 1 number
inHistory= Password has been used too recently
recentPasswordChange=Password has been changed too recently
enableSaml.exceeded.maxLength=Please limit your description to 4000 characters
maxLength=The field is too long
minLength=The field is too short
malformed=The field is malformed
incorrectPassword=Password is incorrect
PolicyNotMet=New Password does not meet the password policy
ConstraintViolation=A constraint violation occurred. Check the minimum password length, password complexity and password history requirements
OldPasswordIncorrect=Old Password is not correct
PasswordChangeAgentTimeout=Communication error occurred, please try again
AccessDenied=Password could not be changed, please contact your administrator.
UnknownPasswordChangeError=Unexpected error when changing password, please try again
mustAgree=To continue, you must agree to the Services License Agreement by checking the box below.
notSame=Fields do not match
oneOf=Using a reserved value. Try again with a different value.
notOneOf=Not one of the allowed values.
invalidValueType=Invalid value type
invalidValueTypeForProperty=Invalid value data type for property ''{0}''
arrayItemsShouldBeUnique=Items in the array ''{0}'' should be unique
doesNotMatchPattern=Does not match required pattern
notInteger=Must be an integer value
notValidUrl=Is not a valid URL. Valid example: http://www.okta.com
notGloballyUnique=An object with this field already exists
notUniqueWithinObject=Fields must not match
notUniqueWithinObjectEmail=Field must not match primary email
atLeast=Field must be at least {0}
atMost=Field can be at most {0}
emptySameAs=Fields must both be empty, or both non-empty
notUniqueWithinActiveNamingContext=An active instance with the same naming context already exists.
object.not.found=Object not found.
invalidInstanceName=Invalid Instance name entered.  A valid value is required. Allowed characters are [A-Z, a-z, 0-9, -, _, <SPACE>].
invalidDomainName=Invalid Domain name entered.  A valid value is required. Allowed characters are [A-Z, a-z, 0-9, -, _].
domainContainsAdmin=Invalid Domain name entered, cannot use ''-admin'' within the domain
invalidLogin=Invalid Login entered.  A valid value is required. Allowed characters are [A-Z, a-z, 0-9, -, _, .].
doesNotHaveRequiredEmailField=Invalid email text.  The {0} {1} is required.
invalidElExpressionEmailBody=Invalid email body text, {0}, line {1}.
invalidElExpressionEmailSubject=Invalid email subject text, {0}.
notPassword=The field cannot be the same as your password
notUsername=The field cannot be your username
invalidExpression=The expression is invalid: {0}
unknownProperty=Property ''{0}'' not found
invalid.siteflow = Site flow text is not valid. {0}
invalid.signOnMode.customRequiredFeature = Sign on mode custom required feature is not valid: {0}
invalid.signOnMode.requiredPluginFeature = Sign on mode required plugin feature is not valid: {0}
invalid.sessionAuthMode.type = Invalid Session Auth Mode type : {0}
invalid.mobileApp.oktaMobileCallbackUri = Invalid okta callback URI : {0}
invalid.mobileApp.oktaMobileOpenUri = Invalid okta open URI : {0}
invalid.mobileApp.callbackUri = Invalid callback URI : {0}
invalidWebsite = Invalid website ''{0}'' provided.
invalidCategory = Invalid category ''{0}'' provided.
invalidAppName = Invalid app name '' {0} '' provided.
duplicateAppName = App name ''{0}'' already exists.
duplicateAppVersion= App version {0} already exists for app {1}.
invalidDisplayOrder = Display order must be greater than 0.
duplicateDisplayOrder = Display order values must be unique.
unsupportedType = The type {0} is not supported for this property.
nameShouldBeAlphaNumeric = Name should be alpha numeric.
invalidName = Name should only have alphanumeric characters and underscores. It should not start with a digit.
reservedName=Using a reserved keyword for name. Try again with a different value.
cvdOrgActionInvalid = Action is invalid
appNameInvalid = App name is invalid.
credentialRequired = This field is required when its parent is specified.
containsForbidden = Value contains forbidden string
policy.missingAction = Expecting an action but none were found.
importUsersNotEnabled= Cannot generate a diff report, import user feature is not enabled for this app instance.

custom.sms.message.default.with.org.name        = {1} - Your verification code is {0}
missing.code.variable.in.custom.sms.template    = Missing the required ${code} variable in the custom template.
too.many.custom.sms.templates                   = Too many custom sms templates. Only one per type is supported.

appVersion.umm.rumOrScimNotAllowed= No User Management Mode specified but found unexpected RUM/SCIM properties.
appVersion.scim.validate.unknownScimVersion = Unknown scim version {0}
appVersion.scim.validate.uniqueFieldName = Unsupported uniqueFieldName {0}
appVersion.scim.validate.unknownAuthMode = Unknown auth mode {0}
appVersion.scim.auth.header.missingProperty = Scim AuthType is HEADER, expecting AppInstanceProperty 'scim_auth_header_value'
appVersion.scim.auth.basic.missingProperty = Scim AuthType is BASIC, expecting AppInstanceProperties 'scim_auth_basic_username' and 'scim_auth_basic_password'
appVersion.scim.auth.oauth.missingSessionAuthMode = Scim AuthType is OAUTH2, expecting OAUTH SessionAuthModes
appVersion.scim.validate.profiles.noProfile = No profile template found.
appVersion.scim.validate.profiles.noSchema = No schemas found in profile template.
appVersion.scimValidate.profiles.unexpectedNamespace = Unexpected namespace in profiles. App is using scim verison {0} and found {1}
appVersion.scim.appFeature.missingScimProvisioning = User Management Mode is SCIM but no SCIM_PROVISIONING AppFeature found.
appVersion.helpText.validate.notScim = Help text is only supported for SCIM apps
appVersion.helpText.validate.invalidMarkdown = Invalid markdown for help text type {0}: {1}
appVersion.helpText.validate.oneHelpTextPerType = There should only be one help text for each help text type

# Error Pages
error = Error:
error.description = Description:
error.errorCode = Error Code:
error.request = Your request resulted in an error.
error.homepage = Go to Homepage

idp = Identity Provider:

# Generic Access Denied message
security.access_denied=You do not have permission to perform the requested action.
security.authentication_failed=Authentication failed.
security.mfa_required=Multifactor authentication is required.
security.access_denied_detailed=Access Denied: {0}({1})
security.invalid_session=Invalid Session.
security.invalid_token=Invalid Token.
apiEndpointDeprecated=The API endpoint has been deprecated.
tooManyRequests=Too many requests
notSame.form.passwordVerify=Password fields do not match

# WS-Trust errors
phonenumber.format.invalid=The phone number is invalid.
phonenumber.no_extension=The phone number is not allowed to have an extension.
phonenumber.number_already_verified=The phone number has already been verified by this user.

sms.update.existing_verified=A verified mobile number already exists.
sms.no_number=The text message cannot be sent because no phone number was found in the database.
sms.no_verified_number=There is no verified phone number on file.
sms.international_forbidden=Only numbers located in US and Canada are allowed.  Contact your administrator if this is a problem.
sms.message_sent_recently=A message was sent or a call was made to the phone in the past 30 seconds. Please try again when 30 secs have passed.
sms.service_error=The SMS service encountered an error.  Contact your admin if this problem persists.
sms.provider.not_found=The specified SMS provider, {0}, was not found.
sms.message.code=Your verification code is {0}.
sms.message.okta.verify.link=Click here to enroll Okta Verify : {0}

callfactor.invalid.code=Your token doesn't match our records. Please try again.

push.service_error=The Push service encountered an error. Contact your admin if this problem persists.

authfactor.setup.invalid_password=Password entered is invalid
authfactor.setup.factor_exists=A factor of this type is already set up.
authfactor.challenge.question_factor.answer_invalid=Your answer doesn't match our records. Please try again.
authfactor.challenge.nonexistent_factor=The factor being authenticated doesn't appear to be setup. Please contact \
  support if this problem persists.
authfactor.challenge.soft_token.invalid_passcode=Your passcode doesn't match our records. Please try again.
authfactor.challenge.soft_token.used_passcode=Each code can only be used once. Please wait for a new code and try again.
authfactor.challenge.sms.expired_token=The previously issued token has expired.  A new one must be sent.
authfactor.challenge.sms.invalid_token=Your token doesn't match our records. Please try again.
authfactor.sms.prompt=Enter the code sent to your phone.
authfactor.challenge.yubikey.invalid_otp= Yubikey is not recognized in the system. Try again or contact your administrator.
authfactor.challenge.yubikey.new_otp_invalid= Your old yubikey was reset but the new yubikey is not recognized in the system. Try again or contact your administrator.

authfactor.generic.error=An error occurred while processing the MFA request.
authfactor.generic.prompt=Enter the code for {0}.
authfactor.generic.account_locked=Your account was locked due to excessive MFA attempts.
authfactor.generic.exceeded_rate_limit=Excessive MFA attempts detected for this account. Please retry in a few seconds.

authfactor.securid_factor.error.rsa=An error occurred with RSA Authentication Manager. Please try again.
authfactor.securid_factor.error.invalid_code=Invalid code
authfactor.securid_factor.exception.multiple_instances=Found more than {0} instances of RsaSecurID, only one instance is allowed
authfactor.securid.factor.error.no_agents=No Active Agents found for RSA SecurId, install at least one agent first

authfactor.duo.error.empty=The fields cannot be empty.

#
# O-Form Defaults Properties
#
oform.save=Save
oform.cancel=Cancel
oform.edit=Edit
oform.previous=Previous
oform.errorbanner.title=We found some errors. Please review the form and make corrections.
oform.errormsg.title=Please review the form to correct the following errors:
oform.error.unexpected=There was an unexpected internal error. Please try again.
oform.add.another=Add Another

#
# Ajax Form
#
ajaxform.error.title=Please review the form to correct the following error(s):

#
# datalist
#
datalist.empty_title=Nothing to show
datalist.empty_subtitle=Try searching or filtering
datalist.error_title=Error
datalist.error_subtitle=Something went wrong
datalist.show_more=Show More
datalist.apply_filter=Apply Filter

# !!! KEYS BELOW THIS LINE WILL NOT BE TRANSLATED !!!
# This includes keys used only by logging/reporting services or the admin app.
# If you are adding an error message that will be seen by the enduser app,
# add it to the section above!

# General
okta=Okta
yes=Yes
no=No
ok=OK
create=Create
delete=Delete
finish=Finish
next=Next
previous=Previous
description=Description
documentation=Documentation
learnMore=Learn More
preview=Preview
searchResult.empty=No results found
any=Any
on=on
off=off
os.ios=iOS
os.osx=OS X
os.android=Android
os.windows=Windows

#
# Add App Wizard
#
# App catalog/add app strings
appwizard.general.title = 1 of 2: Enter basic info
app.add.step2.save = Save and Assign
appwizard.sso.title = 2 of 2: Configure sign on settings

appwizard.general.appLabel = Application label
appwizard.general.appLinksLabel = Display the following links
appwizard.general.errors.appLinks = You must specify at least one link to appear on users' home pages
appwizard.sso.signOnModeLabel = Choose your sign on mode
appwizard.sso.signOnMode.swa = SWA uses a password and the browser plugin to sign users into the app.
appwizard.sso.signOnMode.swa.label.explain = {0} uses a password and the browser plugin to sign users into the app.
appwizard.sso.signOnMode.saml = SAML emphasizes security and convenience by signing users into the app without a password.
appwizard.sso.signOnMode.saml.label.explain = {0} emphasizes security and convenience by signing users into the app without a password.
appwizard.sso.saml.viewSetupHelp = View Setup Instructions
appwizard.sso.saml.notConfigured = {0} needs extra configuration.
appwizard.sso.saml.metadataConfig = {0}Identity Provider metadata{1} is available if this application supports dynamic configuration.
appwizard.sso.creds = Who sets the credentials?
appwizard.sso.creds.userSetsAll = User sets username and password
appwizard.sso.creds.adminSetsAll = Administrator sets username and password
appwizard.sso.creds.adminSetsUser = Administrator sets username, user sets password
appwizard.sso.creds.oktaPassword = Administrator sets username, password is the same as user\'s Okta password
appwizard.sso.creds.shared = Users share a single username and password set by administrator
appwizard.sso.nameFormat = Default username
appwizard.sso.nameFormat.custom = Custom
appwizard.sso.nameFormat.email = Email
appwizard.sso.nameFormat.emailPrefix = Email prefix
appwizard.sso.nameFormat.oktaUsername = Okta username
appwizard.sso.nameFormat.oktaUsernamePrefix = Okta username prefix
appwizard.sso.nameFormat.explain = Format default usernames based on a custom expression
appwizard.sso.sharedUsername = Shared Username
appwizard.sso.sharedPassword = Shared Password

appwizard.nosignon.form.title.edit = Edit Mobile App Integration
appwizard.nosignon.form.title.clone = Clone Mobile App Integration
appwizard.nosignon.form.title.create = Create Mobile App Integration

appwizard.platformApp.create.title = Create a New Application Integration
appwizard.platformApp.create.platform.mobileOnly.explainText = You can attach a native mobile app to a web app.
appwizard.platformApp.create.platform.explainText = You can attach a native mobile app to a SWA or SAML web app.
appwizard.platformApp.create.platform.label = Platform
appwizard.platformApp.create.platform.option.web = Web
appwizard.platformApp.create.platform.option.nativeApp = Native app only
appwizard.platformApp.create.signOn.label = Sign on method
appwizard.platformApp.create.swa.title = Secure Web Authentication (SWA)
appwizard.platformApp.create.none.title = None
appwizard.platformApp.create.saml.title = SAML 2.0
appwizard.platformApp.create.swa.explainText = Users credentials to sign in. This integration works with most apps.
appwizard.platformApp.create.none.explainText = No credentials or sign on method associated with the app
appwizard.platformApp.create.saml.explainText = Uses the SAML protocol to log users into the app. This is a better option than SWA, if the app supports it.

app.sso.policy.reauthTooltip = Not applicable for inbound SAML configurations

# Default resource bundle for messages going onto the site

error.passthrough={0}

# Role assignment errors
role.require_role = At least one role must be selected.

# Locale
locale.org.error = Could not save your org's locale preference. Please try again.
locale.admin.subtitle = You can change your organization's language preference.

# User Create error
user.create_user_not_allowed=You do not have permission to create users.
user.create_into_group_not_allowed=You do not have permission to add the user to one of the groups.
user.create_requires_group=You must select at least one group that you administer.

# User profile error
user.profile.invalid = Could not create user due to invalid profile: {0}
user.profile.invalid_sort_column = Could not complete request due to illegal user profile sort column

# User status
user.status.label.pending        = Pending activation
user.status.description.pending  = Pending.  Click the Activate Person button to activate user.
user.status.label.activating     = Activating
user.status.description.activating = Activating
user.status.label.active         = Active
user.status.description.active   = Active
user.status.label.inactive       = Deactivated
user.status.description.inactive = Deactivated
user.status.label.expired_password = Expired password
user.status.description.expired_password = Expired password
user.status.label.suspended = Suspended
user.status.description.suspended = Suspended

group.all_users = Everyone
group.all_users.desc = All users in your organization
group.unknownType = Unknown group type: {0}
group.readOnly = Attempt to modify read-only group {0} type: {1}
group.unknown = Group "{0}" does not exist
group.inboundSAML.readOnly = Group "{0}" is read-only, and can't be used for just-in-time creation
group.inactiveUserAdd = Attempted to add inactive user {0} to group {1}

# Login message
login_page_messages.session_has_expired = You were signed out because your session timed out.

# Login status (used by InternalLoginHandler)
login.status.label.one_time_pass          = Password reset
login.status.description.one_time_pass    = Password reset. User is now in one-time password mode.
login.status.label.locked_out             = Locked out
login.status.description.locked_out       = User is locked out.
login.status.label.password_reset         = Password reset
login.status.description.password_reset   = Password reset. User is now in one-time password mode.
login.status.label.password_expired       = Password expired
login.status.description.password_expired = Password expired. User is now in one-time password mode.
login.status.label.no_password            = No password
login.status.description.no_password      = No password.  Click <strong>Reset Password</strong> to reset the user password.

radius_agent.login_failed=Login failed.
radius_agent.login_aborted=Login aborted.
radius_agent.login_denied=Login denied.
radius_agent.mfa_setup_required=Log in to Okta to set up MFA to proceed.
radius_agent.mfa_prompt=Please select your second authentication method [num]: {0}
radius_agent.abort_prompt={0}\nEnter '0' to abort.\n
radius_agent.auth.succeeded=User {0} successfully authenticated using Radius Agent. Client address:{1}; Client ID: {2}; OrgId: {3}; Radius Agent IP:{4}
radius_agent.auth.failed=Failed to authenticate user {0} using Radius Agent. Client address:{1}; Client ID: {2}; OrgId: {3}; Radius Agent IP:{4}

#
# Reporting exceptions
#
reports.stats.duplicate_stat_repos = There are multiple ReportStatRepository instances defined \
with the name {0}. Found {1} and {2}, expected only one defined per stat name.

# User provisioning message

# Messages for resource bundle tests
test.testMessage = This is test message {0} from {1}
test.testExpression = ${name} wants a ${value}
test.testLocale = This is in English

# User mail subjects (The key {orgName} is supported but currently not used)
# For site drop-down
view.EmailSubject.LOCKED_OUT        = Cannot log in
view.EmailSubject.SECURITY_ALERT    = Report a potential security issue
view.EmailSubject.REQUEST_APP       = Request access to an application
view.EmailSubject.REQUEST_HELP      = Request help with using the system
view.EmailSubject.SEND_FEEDBACK     = Send feedback about the system
view.EmailSubject.REPORT_BUG        = Report a bug in the system
view.EmailSubject.SUGGEST_FEATURE   = Suggest a new feature for the system
# Actual subjects for mail sent:
mail.EmailSubject.LOCKED_OUT        = A user cannot log in
mail.EmailSubject.SECURITY_ALERT    = A user has a security concern!
mail.EmailSubject.REQUEST_APP       = Application access request
mail.EmailSubject.REQUEST_HELP      = System help request
mail.EmailSubject.SEND_FEEDBACK     = Feedback
mail.EmailSubject.REPORT_BUG        = Bug report
mail.EmailSubject.SUGGEST_FEATURE   = Feature suggestion

# WebEx errors
app.webex.error.default = {0}
app.webex.error.rest = Error communicating with the WebEx API.  Please check that your domain is correct.


#
# Postini errors
#

# Event Names


# Internal GoToMeeting Errors
app.postini.error.MalformedURL= The URL for the Postini API is malformed






app.sign_in=Signing in to {0}...

# App authentication errors
app.auth_error.INVALID_CREDENTIALS = The credentials used to connect \
  to the API were invalid; please check your configuration
app.auth_error.OAUTH_ERROR = Failed to get OAuth token; \
  Please check your configuration
app.auth_error.LOCKED_OUT = The credentials used to connect to the \
  API were invalid; please check your configuration
app.auth_error.UNKNOWN_USER =The credentials used to connect to the \
  API were invalid; please check your configuration
app.auth_error.NOT_ACTIVATED = The credentials used to connect to the \
  API were invalid; please check your configuration
app.auth_error.NOT_VERIFIED = The credentials used to connect to the \
  API were invalid; please check your configuration
app.auth_error.SERVICE_NOT_AVAILABLE = Could not connect to the API; \
  service not available
app.auth_error.GENERAL_NONSUCCESS = The credentials used to connect to \
  the API were invalid; please check your configuration
app.auth_error.ADDITIONAL_CREDENTIALS_REQUIRED = Could not connect to the \
  API.  Please check the credentials in the application configuration
app.auth_error.TEMP_LOGIN = Logged in with temporary password
app.auth_error.PASSWORD_BASED_LOGIN_DISALLOWED = Password based login not allowed
app.auth_error.SUCCESS = Successfully logged in

app.generic.app_session_error = Error creating authenticated session to app {0}

# Outbound delauth errors
app.outbound.delauth.failed = Outbound Delegated Authentication Failure

# General SAML
saml.sp.issuer=SP Issuer

# App SAML errors
app.saml.marshal_error = Error marshalling SAML response
app.saml.signature_error = Error generating signature for SAML
app.saml.encryption_error = Error encrypting SAML assertion
app.saml.certificate_missing_error = Cannot find Service Provider's certificate
app.saml.certificate_error = Error validating certificate from Service Provider
app.saml.credential_error = Invalid Credentials
app.saml.bad_request = Bad SAML request
app.saml.unmarshall_error = Error unmarshalling SAML request
app.saml.xml_parse_error = Error parsing XML in SAML request
app.saml.reauth_failed = Sign in failed!
app.saml.1_1.grammar_error = Invalid Template SAML 1.1 Attribute grammar
app.saml.1_1.group_config_error = Invalid Template SAML 1.1 Group Configuration in group filter {0}
app.saml.1_1.group_config_error.invalid_adGroup = Invalid Template SAML 1.1 Group Configuration: AD Group missing value {0}.

# App WSFed errors
app.wsfed.marshall_error = Error marshalling WS-Fed response
app.wsfed.signature_error = Error generating signature for WS-Fed response

app.provision.UserNotFound=Matching user not found
app.provision.UserInactive=User account is inactive

upgrade.messageExplain=<strong>IMPORTANT:</strong> The system is currently in <strong>read-only mode</strong> while we upgrade \
  the system. You can still sign-in to your applications, but you can't make changes \
  to your profile &#8212; your password being an exception &#8212; until the upgrade is complete.

upgrade.messageExplainAdmin=<strong>IMPORTANT:</strong> The system is currently in <strong>read-only mode</strong> while we upgrade \
  the system. Administrator functionality will be limited while in read-only mode.

upgrade.messageExplainSuperUser=<strong>IMPORTANT:</strong> The system is currently in <strong>read-only mode</strong>. \
  Super User functionality will be limited while in read-only mode.

safeMode.messageExplain=<strong>IMPORTANT:</strong> Okta is experiencing an issue that we're working to resolve. \
  You can still sign-in to your applications, but you can't make changes to your profile until the issue is resolved.

safeMode.messageExplainAdmin=<strong>IMPORTANT:</strong> Okta is experiencing an issue that we're working to resolve. \
  Administrator functionality may be reduced during this time but end-user authentication should be unaffected.

safeMode.messageExplainSuperUser=<strong>IMPORTANT:</strong> The system is currently in <strong>safe mode</strong>. \
  Super User functionality will be limited while in safe mode.

upgrade.messageCompleteDate=<strong>The system upgrade will be complete by {0}.</strong>

app.confirmAssignToApiAccountTitle=Administrator Account Assignment Warning
app.confirmAssignToApiAccount=<p class="infobox-header">You are attempting to link {0} \
  with a {1} administrator account ({2}).  This account is currently being used to enable provisioning features \
  for {1}.</p><p>To make sure that Okta can continue to connect to \
  {1}, Okta will automatically change the administrator password in the application setup \
  to match <strong>{0}&#39;s</strong> password.</p> \
  <p><strong>IMPORTANT:</strong> Okta recommends using a dedicated administrator account to enable provisioning integration features.</p>

app.instance.notConfigured.delauth=Cannot delauth to an instance that is not configured.
app.instance.notConfigured.idProviderLoginUrl=Cannot construct SAML idProviderLoginUrl for an instance that is not configured.
app.instance.notConfigured.postBackUrl.RelayState=Please enter 'RelayState' in 'defaultRelayState' field and not in the 'postBackURL'
app.instance.notConfigured.attributeStatements=Could not parse this attribute statement: ''{0}''

# GenericAppImportService messages
generic.app.download.status=Importing Application Data...
generic.app.sync.objects.status=Processing Imported Objects...
generic.app.sync.users.status=Processing Imported Users...
generic.app.sync.batch.status=Processing {0} of {1} ...
generic.app.sync.users.autoconfirm=Automatically Confirming Matches...
generic.app.sync.users.autoconfirm.complete=Automatic Confirmations Complete

# GenericAppAdminService messages
app.generic.update_credentials.event = Updating Account Credentials
app.generic.update_credentials = Updating account credentials for {0}

app.generic.duplicateLabel = <strong>Could not activate:</strong> Another active <strong>{0}</strong> instance is already labeled <strong>{1}</strong>
app.generic.DIE.notAllowed = <strong>Could not activate:</strong> Your org is configured for Directory Integration Edition and is not allowed to use this Application
app.generic.maxAppCountReached = <strong>Could not activate:</strong> Your org has reached maximum number of active applications.
app.generic.error.create.group.duplicate = A group with the name {0} already exists.

app.generic.update.unavailable.serverstatus.readonly = The system is currently in read-only mode while we upgrade \
                                             the system. Administrator functionality will be limited during this time.
app.generic.update.unavailable.serverstatus.safemode = The system is currently performing system maintenance. Administrator \
                                              functionality will be limited during this time.

# active directory-related messages
app.ad.agent.ImportToClosedScan=Unexpected import to closed ADScan {0}
app.ad.agent.agentTimeout=Timed out waiting for agent.
app.ad.agent.UnexpectedMessageVersion=Unexpected agent message version: {0}
app.ad.agent.DuplicateActionRequest=Agent requested a new action without completing this action.
app.ad.agent.create=Agent Created
app.ad.import.started=Import from Active Directory started...
app.ad.import.waitingForAgent=Waiting for Agent...
app.ad.import.agentTimeout=Timed out waiting for agent.
app.ad.import.noActiveAgents=No active Agents found to perform import.
app.ad.generic.noActiveAgents=No active Agents found to perform operation.
app.ad.import.noConnectedAgents=No connected Agents found to perform import.
app.ad.import.retrieving=Retrieving data...
app.ad.import.completeNoObjects=Import complete - no objects imported.
app.ad.import.scanFailed=Error reading from Active Directory: {0}
app.ad.import.nonActiveServerFailure=Error processing scan data from Active Directory due to server not in ACTIVE mode.
app.ad.import.nonAgentActionFound=Error processing scan data from Active Directory due to missing agent action.
app.ad.settings.activeInstanceAlreadyExists=You can only have one instance of Active Directory active at a time.
app.ad.user-not-found=Your user is not connected to Active Directory.
app.ad.agent.unsupportedFeature=Your agent version does not support feature {0}.
app.ad.provision.createError=Error provisioning AD user: {0}
app.ad.provision.modifyError=Error updating AD user: {0}
app.ad.group.provision.createError=Error provisioning AD group: {0}
app.ad.group.provision.modifyError=Error updating AD group: {0}
app.ad.group.provision.deleteError=Error deleting AD group: {0}
app.ad.group.provision.updateMembershipError=Error ''{2}'' updating group membership for group={0} in directory {1}​.
app.ad.provision.unlockError=Error unlocking AD user: {0}
app.ad.password.pushError=Error updating AD user password: {0}
app.ad.provision.not.supported=User Provisioning is not supported for this Edition.
app.ad.delauth.password-push.config.error=Delegated Authentication and Password Push cannot both be enabled.
app.ad.outbound.delauth.no_connected_agent=Delegated authentication request for user: ${app_username} in app ${app_name} was not processed. No agents are connected to Okta.
app.ad.import.importTopologyTimeout=Attempt to import AD topology timed out.
app.ad.import.importTopologyFailed=Failed to import the topology from AD, message: {0} Error code: {1}
app.ad.import.importTopologyError=Error occurred during the import of topology from AD, exception: {0}
app.ad.import.importTopologyAgentFeatureNotSupported=Attempting to import AD topology when no active agents support this feature

app.ldap.agent.password_reset=LDAP agent ${agent_name} performed a password reset
system.LDAP_agent.reset_user_password=Perform reset user password by LDAP agent
app.ldap.agent.password_reset.error=LDAP agent ${agent_name} failed to performed a password reset
app.ldap.agent.password_reset.timeout=LDAP agent ${agent_name} password reset timed out
app.ldap.user-not-found=Your user is not connected to LDAP server.
app.ldap.provision.createError=Error provisioning {0} user: {1}
app.ldap.provision.modifyError=Error updating {0} user: {1}
app.ldap.password.pushError=Error updating {0} user password: {1}

app.ldap.agent.password_change.timeout= LDAP agent ${agent_name} password change timed out
app.ldap.agent.password_change=LDAP agent ${agent_name} performed a password change
app.agent.reactivate_failed_missing_token=Cannot reactivate the agent because the token has been removed. You must delete and re-install the agent.

# Other app-related messages
app.import.conflict=This choice creates a conflict
app.import.ConfirmError=Error confirming assignment for {0} user {1}: {2}
app.import.invalidConditionExpression=Condition is an invalid expression: {0}
app.import.noMatchFound=No user match found for user {0}

# App Roadblock
app.import.roadblock.error.userdelete.percentage=Detected a high number of potential app unassignments from user removals, ({0} out of {1}). {2} of all app assignments, which is above the threshold of {3}%.  Suspending all import jobs.
app.import.roadblock.error.groupdelete.percentage=Detected a high number of potential app unassignments from group removals, ({0} out of {1}). {2} of all app assignments, which is above the threshold of {3}%.  Suspending all import jobs.
app.import.roadblock.error.groupmembershipudpates.percentage=Detected a high number of potential app unassignments from group membership updates, ({0} out of {1}). {2} of all app assignments, which is above the threshold of {3}%.  Suspending all import jobs.

# CSV import messages
app.import.csv.parseError=Unable to parse CSV file for import

# schema enum values import messages
app.import.schema.enum.values.missing.schema.property=The schema property {0} is missing. Cannot apply enum constraints.
app.import.schema.enum.values.missing.values=The enum values for the schema property {0} are missing. Cannot apply enum constraints.
app.import.schema.enum.values.invalid.values=The enum values {0} for the schema property {1} are invalid. Errors={2}. Cannot apply enum constraints.
app.import.schema.enum.values.delete.failed=The enum values for the schema property {0} cannot be deleted. Errors={1}. Cannot apply enum constraints.

# Matching engine messages
matchengine.status=Matching imported users...
matchengine.complete=Computing summaries...

# Licence agreemenet messages
licenceAgreement.signed=Thanks for signing up with Okta!
licenceAgreement.emailed=This license agreement text has been emailed to {0}.

# SSO protocol related messages
sso.protocol.CUSTOM.label               = Custom Single-Sign On
sso.protocol.FORM_BASED.label           = Form Based
sso.protocol.SECURE_PASSWORD_STORE.label= Secure Web Authentication
sso.protocol.SAML_2_0.label             = SAML 2.0
sso.protocol.SAML_1_1.label             = SAML 1.1
sso.protocol.BOOKMARK.label             = Bookmark-only
sso.protocol.BROWSER_PLUGIN.label       = Secure Web Authentication
sso.protocol.BASIC_AUTH.label           = Secure Web Authentication
sso.protocol.WS_FEDERATION.label        = WS-Federation
sso.protocol.AUTO_LOGIN.label           = Secure Web Authentication
sso.protocol.MOBILE_NO_SIGNON.label     = No Sign On
sso.protocol.OPENID_CONNECT.label       = OpenID Connect

sso.protocol.CUSTOM.help                = Perform single-sign on through the application's proprietary SSO protocol.
sso.protocol.FORM_BASED.help            = <strong>Form Based</strong> allows users to edit the credentials used \
    for signing on to this application.  The Okta browser plugin is not required for sign on to this application.
sso.protocol.SECURE_PASSWORD_STORE.help = <strong>Secure Web Authentication</strong> allows users to edit the credentials used \
    for signing on to this application. The Okta browser plugin is not required for SWA sign on to this application.
sso.protocol.SAML_2_0.help              = <strong>SAML 2.0</strong> streamlines the end user experience by not requiring the user to know their credentials.  \
  Users cannot edit their credentials when SAML 2.0 is configured for this application. Additional configuration in the 3rd party application may be required \
  to complete the integration with Okta.
sso.protocol.SAML_1_1.help              = <strong>SAML 1.1</strong> streamlines the end user experience by not requiring the user to know their credentials.  \
  Users cannot edit their credentials when SAML 1.1 is configured for this application. Additional configuration in the 3rd party application may be required \
  to complete the integration with Okta.
sso.protocol.BOOKMARK.help              = <strong>Bookmark-only</strong> is the simplest mode for an app and does not \
  perform sign-on to an app.  This mode is the equivalent of adding a favorite or bookmark in your browser.  \
  There is no username or password associated with an application in Bookmark mode.
sso.protocol.BROWSER_PLUGIN.help        = <p><strong>Secure Web Authentication</strong> (SWA) allows users to edit the credentials used for signing on to this application.</p>  \
  <p class="infobox infobox-compact infobox-warning">The <strong> Okta browser plug-in is required</strong> for SWA sign on to this application.</p>
sso.protocol.BASIC_AUTH.help            = <p><strong>Secure Web Authentication</strong> (SWA) allows users to edit the credentials used \
    for signing on to this application.</p> \
    <p class="infobox infobox-compact infobox-warning"><strong>Secure Web Authentication</strong> \
    sign on to this application is not currently supported for Google Chrome.  Internet Explorer and Firefox are currently \
    the only supported browsers.</p>
sso.protocol.WS_FEDERATION.help         = <p><strong>WS-Federation</strong> streamlines the end user experience by not requiring the user to know their credentials.  \
  Users cannot edit their credentials when WS-Fed is configured for this application. Additional configuration in the 3rd party application may be required \
  to complete the integration with Okta.
sso.protocol.AUTO_LOGIN.help        = <p><strong>Secure Web Authentication</strong> (SWA) allows users to edit the credentials used for signing on to this application.</p>  \
  <p class="infobox infobox-compact infobox-warning">The <strong> Okta browser plug-in is required</strong> for SWA sign on to this application.</p>
sso.protocol.MOBILE_NO_SIGNON.help  = <p><strong>No Sign On</strong> Mobile-only template apps do not require sign-on information.</p>
sso.protocol.OPENID_CONNECT.help  = <p><strong>OpenID Connect</strong> allows users to sign-on to applications using the OpenID Connect protocol.</p>

# SSO Universal Directory related error mappings
sso.ud.MAPPING_IS_NOT_SUPPORTED=Profile mapping is not supported in SSO edition

app.feature.IMPORT_NEW_USERS.label = Import New Users
app.feature.IMPORT_PROFILE_UPDATES.label = Import Profile Updates
app.feature.PUSH_NEW_USERS.label = Push New Users
app.feature.PUSH_PROFILE_UPDATES.label = Push Profile Updates
app.feature.PUSH_PASSWORD_UPDATES.label = Push Password Updates
app.feature.PUSH_USER_DEACTIVATION.label = Push User Deactivation
app.feature.REACTIVATE_USERS.label = Reactivate Users
app.feature.PUSH_PENDING_USERS.label = Push Pending Users
app.feature.GROUP_PUSH.label = Push Groups
app.feature.PROFILE_MASTERING.label = Profile Mastering
app.feature.OUTBOUND_DEL_AUTH.label = Outbound Delegated Authentication
app.feature.DESKTOP_SSO.label = Desktop SSO
app.feature.IMPORT_USER_SCHEMA.label = Import User Schema
app.feature.EXCHANGE_ACTIVE_SYNC.label = Exchange Active Sync
app.feature.DEVICE_COMPLIANCE.label = Device Compliance
app.feature.EXCLUDE_USERNAME_UPDATE_ON_PROFILE_PUSH.label = Exclude Username update on profile push
app.feature.AUTO_CONFIRM_IMPORTS.label = Auto confirm Imports
app.feature.VPN_CONFIG.label = VPN Config
app.feature.IMPORT_SCHEMA_ENUM_VALUES.label = Import Schema Enum Values
app.feature.SCIM_PROVISIONING.label = SCIM Provisioning
app.feature.DEVICE_FILTER_IN_SIGN_ON_RULES.label = Client Type Filter In App Sign On Rules
app.feature.FEDERATED_PROFILE.label = Federated Profile
app.feature.SUPPRESS_ACTIVATION_EMAIL.label = Suppress Activation Email
app.feature.MFA.label = MFA
app.feature.UPDATE_EXISTING_USERNAME.label = Update Existing Username
app.feature.BATCH_IMPORTS.label = Batch Imports
app.feature.IMPORT_SYNC.label = Import Sync
app.feature.IMPORT_SYNC_CONTACTS.label = Import Sync Contacts

app.feature.IMPORT_NEW_USERS.help = New users created in the third party application will be downloaded into Okta
app.feature.IMPORT_PROFILE_UPDATES.help = Updates made to a user's profile in the third party application will be \
  downloaded and applies to the profile fields stored locally in Okta.
app.feature.PUSH_NEW_USERS.help = New users created in Okta will be pushed to the application
app.feature.PUSH_PROFILE_UPDATES.help = Changes made to a user's profile in Okta will be pushed to the application
app.feature.PUSH_PASSWORD_UPDATES.help = Changes made to the user's password will be automatically synchronized to \
  the application
app.feature.PUSH_USER_DEACTIVATION.help = Deactivating users in Okta will deactivate the user's account in the \
  application
app.feature.REACTIVATE_USERS.help = User accounts can be reactivated in the application
app.feature.OUTBOUND_DEL_AUTH.help = Lorem ipsum delegated auth
app.feature.IMPORT_USER_SCHEMA.help = User schema in the third party application will be downloaded into Okta
app.feature.EXCHANGE_ACTIVE_SYNC.help = Users will be able to connect to the application using Exchange Active Sync
app.feature.DEVICE_COMPLIANCE.help = Compliance rules can be enforced on devices connecting to this app
app.feature.VPN_CONFIG.help = Users will be able to install preconfigured vpn applications on their Mobile Devices
app.feature.IMPORT_SCHEMA_ENUM_VALUES.help = Schema enum values for the profile properties will be downloaded into Okta
app.feature.SCIM_PROVISIONING.help = App can leverage SCIM standard for provisioning and push custom attributes to the third party application
app.feature.DEVICE_FILTER_IN_SIGN_ON_RULES.help = App supports filtering by client type in app sign on rules
app.feature.DESKTOP_SSO.help = (AD-Specific) Okta  user authentication handled by  Desktop SSO negotiation
app.feature.AUTO_CONFIRM_IMPORTS.help = (Deprecated) Imported Users will be automatically confirmed based on AutoConfirmSettings
app.feature.PROFILE_MASTERING.help = AppUser profile for this App will overwrite the Okta user profile for Users if
app.feature.FEDERATED_PROFILE.help = (AD-Specific) AppUser Profiles will be synchronized at login and profile view time instead of via bulk import
app.feature.SUPPRESS_ACTIVATION_EMAIL.help = Users mastered by AD and orgs with del auth enabled will not be sent activation
app.feature.PUSH_PENDING_USERS.help =  Users are in PENDING state in Okta and are created but not active in the mastered AppUser
app.feature.GROUP_PUSH.help = Groups and their members can be pushed to remote systems
app.feature.MFA.help = App can do credential verification as a second factor
app.feature.UPDATE_EXISTING_USERNAME.help = App can update the user name for existing users.
app.feature.EXCLUDE_USERNAME_UPDATE_ON_PROFILE_PUSH.help = Exclude username update during profile push
app.feature.BATCH_IMPORTS.help = Use Batch imports for user imports
app.feature.IMPORT_SYNC.help = Sync import events
app.feature.IMPORT_SYNC_CONTACTS.help = Sync Contacts

app.feature.IMPORT_NEW_USERS.displayName = User Import
app.feature.IMPORT_PROFILE_UPDATES.displayName = Import Profile Updates
app.feature.PROFILE_MASTERING.displayName = Profile Master
app.feature.PUSH_NEW_USERS.displayName = Create Users
app.feature.PUSH_PROFILE_UPDATES.displayName = Update User Attributes
app.feature.PUSH_USER_DEACTIVATION.displayName = Deactivate Users
app.feature.REACTIVATE_USERS.displayName = Reactivate Users
app.feature.PUSH_PASSWORD_UPDATES.displayName = Sync Okta Password
app.feature.GROUP_PUSH.displayName = Push Groups
app.feature.IMPORT_USER_SCHEMA.displayName = User Schema Import
app.feature.EXCHANGE_ACTIVE_SYNC.displayName = Exchange Active Sync
app.feature.DEVICE_COMPLIANCE.displayName = Device Compliance
app.feature.VPN_CONFIG.displayName = VPN Configuration
app.feature.IMPORT_SCHEMA_ENUM_VALUES.displayName = Import Schema Enum Values
app.feature.SCIM_PROVISIONING.displayName = SCIM Provisioning
app.feature.DEVICE_FILTER_IN_SIGN_ON_RULES.displayName = Client Type Filter In App Sign On Rules


salesforce.setup.error=Error while validating Salesforce login=%s.

app.mock.user_creation_disallowed = User creation disallowed

deprov.task.resolution.auto = Auto Deprovisioned
deprov.task.resolution.disabled = Manually Deprovisioned
deprov.task.resolution.personal = Not Deprovisioned - Personal Account
deprov.task.resolution.shared = Not Deprovisioned - Shared Account
deprov.task.resolution.other = Not Deprovisioned - Other
provisioning.task.doesnt.exist = Task with id {0} does not exist.

deprov.task.error.auto_failed = Automatic Deprovisioning Failed

app.assignment.provisioning_failed = Automatic provisioning of user {0} to app {1} failed: {2}
app.assignment.activating_failed = Automatic activation of user {0} to app {1} failed: {2}
app.assignment.activating_failed_unknown = Automatic activation of user {0} to app {1} failed.
app.assignment.profilepush_failed = Automatic profile push of user {0} to app {1} failed: {2}
app.assignment.profilepush_failed_unknown = Automatic profile push of user {0} to app {1} failed.

# csv report field labels

ApplicationAccessReport.userName.label = User
ApplicationAccessReport.userLogin.label = Login
ApplicationAccessReport.appName.label = Application Name
ApplicationAccessReport.appInstanceName.label = Application Instance
ApplicationAccessReport.appUserLogin.label = Application Login
ApplicationAccessReport.assignedDate.label = Assigned On
ApplicationAccessReport.unassignedDate.label = Unassigned On
ApplicationAccessReport.lastLoginDate.label = Last Login
ApplicationAccessReport.passwordChangedDate.label = Last Password Change

ApplicationUsageReport.userDisplayName.label = Person
ApplicationUsageReport.userLogin.label = Login
ApplicationUsageReport.appUserLogin.label = Application username
ApplicationUsageReport.numberOfLogins.label = Logins
ApplicationUsageReport.lastLogin.label = Last Login Date

DeprovisionDetailsReport.completedAt.label = Date
DeprovisionDetailsReport.reportUser.displayName.label = Person
DeprovisionDetailsReport.reportUser.login.label = Login
DeprovisionDetailsReport.reportAppInstance.appDisplayName.label = Application
DeprovisionDetailsReport.reportAppInstance.instanceName.label = Application Instance
DeprovisionDetailsReport.appUserLogin.label = Application username
DeprovisionDetailsReport.resolution.label = Resolution
DeprovisionDetailsReport.initiatedBy.displayName.label = Initiated By Name
DeprovisionDetailsReport.initiatedBy.login.label = Initiated By Login
DeprovisionDetailsReport.completedBy.displayName.label = Completed By Name
DeprovisionDetailsReport.completedBy.login.label = Completed By Login
DeprovisionDetailsReport.comment.label = Comment

OktaUsageReport.userName.label = Person
OktaUsageReport.userLogin.label = Login
OktaUsageReport.loginSuccessCount.label = Number of Logins
OktaUsageReport.lastLoginDate.label = Last Login
OktaUsageReport.userStatus.label = User Status

MFAEnrollmentReport.userName.label = User
MFAEnrollmentReport.userLogin.label = Login
MFAEnrollmentReport.mfaFactorType.label = MFA Factor
MFAEnrollmentReport.lastEnrolled.label = Last Enrolled
MFAEnrollmentReport.lastUsed.label = Last Used

SuspiciousActivityReport.timestamp.label = Time
SuspiciousActivityReport.login.label = Login
SuspiciousActivityReport.clientIP.label = Client IP
SuspiciousActivityReport.message.label = Event

SystemLogReport.eventId.label = Event Id
SystemLogReport.pk.timestamp.time.label = Timestamp
SystemLogReport.pk.timestamp.label = Date
SystemLogReport.performedForUser.displayName.label = Person
SystemLogReport.performedForUser.login.label = Login
SystemLogReport.appInstance.appDisplayName.label = Application
SystemLogReport.appInstance.instanceName.label = Application Instance
SystemLogReport.message.label = Message
SystemLogReport.performedByUser.displayName.label = Performed By Name
SystemLogReport.performedByUser.login.label = Performed By Login
SystemLogReport.clientIP.label = Client IP
SystemLogReport.requestURI.label = Request URI

SystemLogEntryRepo.eventId.label = Event Id
SystemLogEntryRepo.pk.timestamp.time.label = Timestamp
SystemLogEntryRepo.pk.timestamp.label = Date
SystemLogEntryRepo.performedForUser.displayName.label = Person
SystemLogEntryRepo.performedForUser.login.label = Login
SystemLogEntryRepo.appInstance.appDisplayName.label = Application
SystemLogEntryRepo.appInstance.instanceName.label = Application Instance
SystemLogEntryRepo.message.label = Message
SystemLogEntryRepo.performedByUser.displayName.label = Performed By Name
SystemLogEntryRepo.performedByUser.login.label = Performed By Login
SystemLogEntryRepo.clientIP.label = Client IP
SystemLogEntryRepo.requestURI.label = Request URI

reports.csv_report_truncated = Report truncated - CSV Max rows ({0}) reached.

###############################################################################
#
# Exception Codes - These are I18n strings used in exceptions. SystemException and it's subclasses prefer
#                   these keys over hardcoded strings in exceptions
#
# TODO: jtodd - some of these, like the *.api.error.* keys, are duplicated in reports-messages.properties, consider consolidating
#
################################################################################

#######################################
# Core
#######################################

core.invalid_user_session = Invalid user session
core.unsupported_mime_type = Unsupported MIME type {0}
core.invalid_password.RequirementsNotMet = Passwords must have {0}
core.invalid_password.MinLengthNotMet = Passwords must be at least {0} characters
core.invalid_password.MinCharVarietyNotMet = Passwords must contain a mixture of uppercase, lowercase, digits, and symbols
core.invalid_password.UserNameDetected = Passwords cannot contain parts of the login username
core.invalid_password.InHistory        = Password has been used too recently
core.system.resource_not_found = Resource not found: {0} ({1})
core.system.service_not_available = Service not available: {0} ({1})
core.unknown_login_handler = Unknown login handler type: {0}
core.reporting.unexpected_event_type=Event processor: {0} for report: {1} encountered an event type: {2} which it \
  doesn't know how to process.
core.event_presistence.method_unsupported=Unsupported method. {0}
core.expected_request_context_without_org=Expected the current request context for this thread to not be associated with an org
core.unsupportedFeature=Unsupported feature: {0}
core.memcacheCallableException = Exception thrown by memcache callable
core.messaging_error = Messaging exception

#
# Auth
#

# This is the name of the AuthPolicy enforced at Okta login time
core.auth.okta_login_policy_name=Okta Login

core.auth.factor.SECURITY_QUESTION=Security Question
core.auth.factor.SOFT_TOKEN=Google Authenticator
core.auth.factor.OKTA_SOFT_TOKEN=Okta Verify
core.auth.factor.VIP_FACTOR=Symantec VIP
core.auth.factor.SMS_FACTOR=SMS Authentication
core.auth.factor.CALL_FACTOR=Voice Call Authentication
core.auth.factor.SECURID_FACTOR=RSA SecurID
core.auth.factor.ON_PREM=On-Prem MFA
core.auth.factor.DUO_SECURITY=Duo Security
core.auth.factor.OKTA_VERIFY_PUSH=Okta Verify Push
core.auth.factor.YUBIKEY_OTP_FACTOR=Yubikey

# Defines
core.auth.factorLifetime.FOREVER=Only once
core.auth.factorLifetime.ONE_DAY=Once a day
core.auth.factorLifetime.ONE_WEEK=Once a week
core.auth.factorLifetime.ONE_MONTH=Once a month
core.auth.factorLifetime.SESSION=Once per session
core.auth.factorLifetime.ZERO=On every sign on

#
# System Task Runner
#
core.systemTaskRunner.failed_to_call_as_system_principal=Failed to make a call as the system principal {0}
core.systemTaskRunner.failed_to_call_as_preauthorized_internal=Failed to make a call as the preauthorized internal {0}
core.systemTaskRunner.callAsUserFailed=Error raised during running callable as logged in user: {0}. User id: {1}

#
# User Task Runner
#
core.systemTaskRunner.failed_to_call_as_user=Failed to make a call as the user {0}
core.systemTaskRunner.failed_on_same_user=Failed to make a call as the user {0} when already logged in as that user.

#
# Rate Limit Configuration
#
core.ratelimit.invalidthreshold=Invalid threshold
core.ratelimit.invalidurlpattern=Invalid URL pattern. The pattern should match URL template in code. Contact engineering for the right syntax.
core.ratelimit.invalidhttpoperation=conflict with existing http operation. {0} cannot coexist with other operations.
core.ratelimit.configalreadyexist=Rate limit configuration already exists
core.ratelimit.exceededmaxlength=The parameter cannot have more than {0} characters

#######################################
# Platform
#######################################

platform.metadata.read_only = Attempt to modify read-only metadata entity {0}
platform.metadata.unknown_type = Property {0} is annotated with @FullMetadataFor but has unsupported class {1}
platform.duplicate.userapps = Okta user {0} is already assigned to {1} user {2}
platform.duplicate.master.orgapps = User {0} is already assigned to master app instance {1}
platform.master.managed.user = User {0} is read-only due to master app instance {1}
platform.appassign.user.inactive = App assignment attempted for user {0} but user is in inactive status {1}
platform.metadata.unsupported_operation = This operation on app metadata is not yet supported: {0}
platform.metadata.metadata_exception = There was an error processing the app metadata: {0}
platform.read_only_entity = Entity is read only

enduser.profile.update_exception = Error in updating user profile

# AppVersion migration messages
platform.VersionPromotionError = "There was an error promoting version {1} to org {2} for app {0}.

# Platform SAML errors
platform.saml.error.no_assertions = SAML Response has no assertions
platform.saml.error.no_confirmations = SAML Response has no confirmations
platform.saml.no_recipient = SAML Response does not have a valid recipient

#group push errors
platform.grouppush.mapping.not.found = The existing Group Push mapping id {0} was not found
platform.grouppush.mappings.not.found = The existing Group Push mapping ids {0} were not found
platform.grouppush.usergroup.mapping.already.exists = There already is a group push mapping to the UserGroup {0}, another mapping cannot be created to that same UserGroup
platform.grouppush.appgroup.target_mapping_exists = There is already a group push mapping to the target AppGroup {0}, another mapping cannot be created to the same AppGroup
platform.grouppush.upsert_group.failed.reconfig = Unable to update Group Push mapping target App group {0}: {1}. Verify your configuration settings and if necessary delete this push group and reconfigure.
platform.grouppush.upsert_group.failed = Unable to update Group Push mapping target App group {0}: {1}
platform.grouppush.upsert_group.unsupported = Pushing groups that have the same name and AppInstance is unsupported: {0} contains two or more groups named {1}
platform.grouppush.delete_group.failed = Unable to delete Group Push mapping target App group {0}: {1}
platform.grouppush.upsert_group.failed_unknown = Unable to update Group Push mapping target App group {0}
platform.grouppush.delete_group.failed_unknown = Unable to delete Group Push mapping target App group {0}
platform.grouppush.mapping.usergroup.exists = The group {0} already exists in the target App. A mapping cannot be created to an existing group.
platform.grouppush.mapping.rule.not.found = The existing Group Push mapping rule id {0} was not found
platform.grouppush.rename.deactivate.failed = Unable to deactivate Group Push mapping to the source group {0}: {1}
platform.grouppush.rename.deactivate.failed_unknown = Unable to deactivate Group Push mapping to the source group {0}
platform.grouppush.appgroup.not.found = No appGroup found for the user group id: {0}
platform.grouppush.appgroup.oktamastered = Appgroup {0} is already Okta mastered
platform.grouppush.group.exists.with.samaccountname = A group exists in domain: {0} with SAMAccountName: {1} in another OU. Please choose a unique SAMAccountName.
platform.grouppush.group.exists.conflicting.scope = A group exists in domain: {0} with SAMAccountName: {1} and group scope {2}. Please choose a unique SAMAccountName or match group scope of the existing group.
platform.grouppush.rules.deletionjob.failure = Unknown failure during group push rule deletion job. The job will automatically be recheduled.

platform.grouppush.validation.samaccountname_missing = Validation failed because SamAccountName is missing.
platform.grouppush.validation.invalid_groupmapping_status = Validation failed because of invalid mapping status.
platform.grouppush.validation.samaccountname_invalid_characters = SamAccountName has invalid characters {0}
platform.grouppush.validation.samaccountname_length = SamAccountName cannot be longer than 20 characters {0}
platform.grouppush.validation.samaccountname_invalid_spacedot = SamAccountName cannot start or end with a space or a dot.
platform.grouppush.validation.targetdn_invalid = Invalid OU path.

platform.grouppush.validation.synced_automatically = Cannot push the group because this group will be synced automatically.

platform.grouppush.rule.validation.description_missing = Validation failed because description is missing.
platform.grouppush.rule.validation.descriptionSearchType_missing = Validation failed because description search type not specified.

platform.appUserProperty.personal = AppUserProperty {0} is personal, cannot add to GroupAppAssignment

platform.appAssignment.error.duplicate = Duplicate active AppAssignments found for User: {0} and AppInstance: {1}
platform.appAssignment.error.validation = AppUser validation error: {0}

platform.error.conflicting_org_login_type=Validation failed because the org login type is currently set to {0}

#cvd errors
platform.schema.error.more_than_one_default = There are more than one default.
platform.schema.error.operation_not_supported_on_this_resource = Operation not supported on this resource.
platform.schema.parse.invalid_json = Json format is invalid.
platform.schema.parse.type_information_missing = The type information is missing in the json schema : {0}
platform.schema.parse.properties_must_be_present = Schema node should have a properties tag.
platform.schema.unsupported_property_type = The property type : {0} is not supported
platform.schema.permission.parse.error = Error while parsing permission of property {0}.
platform.schema.unsupported.format = The format: {0} is not supported.
platform.schema.unsupported.format.for.property.type = The format: {0} is not supported for property type: {1}
platform.schema.generate.unknown_property_type = Cannot add a property of unknown type: {0}
platform.schema.min.greater.than.max = The minimum: {0} is greater than the maximum: {1}.
platform.schema.min.length.greater.than.max.length = The minLength: {0} is greater than the maxLength: {1}.
platform.schema.unsupported.type.with.min.max = The type: {0} is not supported with minimum and maximum.
platform.schema.unsupported.type.with.min.max.length = The type: {0} is not a string type and supported with minLength and maxLength.
platform.schema.unsupported.format.with.min.max.length = The format: {0} is not supported with minLength and maxLength.
platform.schema.unsupported.min.length = The minLength: {0} is less than zero.
platform.schema.unsupported.max.length = The maxLength: {0} is less than zero.
platform.schema.unsupported.enum.with.min.max.length = Enums cannot have a minLength or maxLength.
platform.schema.parse.reference.property.missing.object.name = Referenced object name is missing in definitions
platform.schema.default.already.exists = Default already exists
platform.schema.system.default.not.present = System default not present
platform.cvd.unsupported.expression.format = Expression format not supported.
platform.cvd.cannot.resolve.appuser.context = UserId not present, so cannot resolve AppUser context for expression.
platform.cvd.cannot.resolve.org.context = Cannot resolve org context for expression.
platform.cvd.cannot.resolve.appinstance.context = Cannot resolve appInstance context for expression.
platform.schema.parse.schema_validation_failed = Schema is invalid.
platform.schema.parse.schema_validation_failed_details = Schema validation failed on the property {0}: {1}
platform.schema.parse.schema_should_only_have_properties_key = Schema should only have properties key.
platform.schema.parse.property.title.not.present = Title not present for this property: {0}.
platform.schema.parse.property.type.not.present = Type not present for this property: {0}.
platform.schema.parse.array.property.items.not.present = Items not present for array property: {0}.
platform.schema.parse.invalid.property.name = Invalid property name: {0}. Property name should only have alphanumeric characters and underscores. It should not start with a digit.
platform.schema.parse.property.title.is.blank = Property title is blank.
platform.schema.parse.property.default.error = Error marshalling/unmarshalling default field.
platform.schema.validation.invalid.schema = {0}
platform.schema.validation.invalid.enumConstraints = {0}
platform.schema.validation.cannot.add.attribute.master.feature.not.enabled = Cannot add master override for attribute {0}, attribute master feature is not enabled.
platform.schema.validation.attribute.master.invalid = Master override invalid for attribute {0}, error: {1}
platform.schema.validation.property.invalid.union.status.for.scope = Invalid union status for attribute {0}, error: Self scoped attribute values cannot be unified.
platform.schema.validation.attribute.master.type.or.value.invalid = Master override type or value invalid
platform.schema.validation.attribute.master.type.null = Mastering type is null
platform.schema.validation.attribute.master.type.invalid = Mastering type {0} is invalid
platform.schema.validation.invalid.master.override = Masteroverride {0} doesn't exist.
platform.schema.validation.base.new.property.not.allowed = New property {0} can't be added to base schema.
platform.schema.validation.base.modify.property.not.allowed = Not allowed to modify property {0} from the base schema.
platform.schema.validation.attribute.master.list.cannot.be.empty = Attribute master list cannot be empty.
platform.schema.validation.attribute.master.appinstance.not.profile.mastered = App instance is not profile mastered
platform.cvd.sourceType.not.supported = sourceType not supported.
platform.cvd.invalid.operation.for.given.sourceType = invalid operation for given sourceType.
platform.cvd.trigger.conditions.cannot.be.empty = trigger conditions cannot be empty.
platform.cvd.one.action.supported.per.rule = A rule should have an action. Currently, we support only one action per rule.
platform.cvd.invalid.action.name = Action name is invalid.
platform.cvd.app.instance.not.active = App instance is not active.
platform.cvd.profiles.targetIdCannotBeSameAsSourceId=Target profile cannot be the same as source profile
platform.cvd.profiles.targetTypeCannotBeSameAsSourceType=Target profile type cannot be same as source profile type
platform.cvd.unsupported.type.for.enums = Unsupported type: {0} for enums.
platform.cvd.unsupported.enum.empty.array = The enum: {0} is empty.
platform.cvd.invalid.enum.for.type = The enum constraint {0} {1} is not valid for the given property type {2}.
platform.cvd.mapping.missing.api.get.params = Source and/or Target parameter is not provided. Following parameter combinations are accepted (source, target), (source), (target)
platform.cvd.mapping.autoSuggest.missing.api.get.params = Source and/or Target parameter is not provided. Following parameter combinations are accepted (source, target)
platform.cvd.profiles.mapping.targetIsInvalid=Invalid target field {0}
platform.cvd.profiles.mapping.profilePushDisabled=User Attributes update is disabled under provisioning.
platform.cvd.profiles.mapping.targetIsNonUpdatable=Target field {0} is excluded from profile update
platform.cvd.profiles.mapping.invalidImportMappingPushStatusNonProfileMasteringApps=Push status is allowed for profile mastering enabled apps only
platform.cvd.profiles.mapping.invalidImportMappingPushStatusProfileMasteringApps=Profile mastering enabled apps support push status only
platform.cvd.profiles.mapping.targetFieldSetByUser=Target field {0} is set by user. Please select a sign-on method where credentials are being set by the administrator <a target=''_blank'' href=''{1}''>here</a>
platform.cvd.profiles.mapping.readOnlyProperty=Target field {0} is read-only, and cannot be mapped
platform.cvd.profiles.mapping.cannotHaveEmptyLogin=Cannot have an empty login mapping
platform.cvd.profiles.mapping.mappingAlreadyExists=A mapping for target field {0} already exists
platform.cvd.profiles.mapping.mappingNotFoundForTarget=A mapping was not found for target field {0}
platform.cvd.profiles.categories.invalid = Invalid profiles category provided : {0}
platform.cvd.profiles.expression.writeOnlyProperty=Attribute {0} is write-only, and cannot be used in source expression
platform.cvd.profile.expression.unsupported.construct=Unsupported expression constructs are used in expression {0}
platform.cvd.profile.expression.method.param.count.mismatch=Parameter mismatch - expected {0} but found {1} args
platform.cvd.profile.expression.invalid.syntax=Invalid expression syntax {0}
platform.cvd.profile.expression.invalid.return.type=Expression {0} does not resolve to type {1}
platform.cvd.profile.expression.missingProfileInfo=Unable to resolve {0} in expression {1}
platform.cvd.profile.expression.propertyIsNotFound=Invalid property {0} in expression {1}
platform.cvd.profile.expression.mappingToSameProfileNotAllowed=Unable to resolve {0} in expression {1}. Attributes from the same profile cannot be mapped to each other.
platform.cvd.profile.expression.function.not.found=Invalid function name {0} in expression {1}
pltaform.cvd.profile.expression.uncategorized.error=Invalid expression {0}
pltaform.cvd.profile.expression.no.active.appinstance=Invalid expression {0}. {1} should not be used since there is no corresponding active app instance.
platform.cvd.profile.missing.for.appinstance=The appInstanceId={0} has no profile.  Has this appInstance been deleted?
platform.cvd.error.cloning.type = Unable to clone schema: {0} in type: {1}: {2}
platform.cvd.error.copying.profile.mapping = Unable to copy profile mapping {0}: {1}.
platform.cvd.error.in.creating.system.default.schema = Error in creating system default schema
platform.cvd.error.in.creating.system.default.appuser.schema = Error in creating system default AppUser schema from type metadata appId={0}
platform.cvd.error.creating.default.mappings = Error creating default mappings orgId={0}, appInstanceId={1}, error={2}.
platform.cvd.error.more_than_one_app_instance_type = There are more than one app instance types for appInstanceId={0}.
platform.cvd.system.default.app.instance.type.not.present = System default app instance type not present
platform.cvd.cannot.delete.property = Schema update failed. Property {0} cannot be deleted.
platform.cvd.cannot.change.property.type = Schema update failed. Property type for property {0} cannot be changed.
platform.cvd.error.upserting.app.user.schema = Error in upserting app user schema - {0}.
platform.cvd.app.default.user.type.not.present = Default user type not present.
platform.cvd.error.creating.mappings = Error in creating default mappings.
platform.cvd.error.upserting.system.default.type = Error in upserting system default AppUser and AppInstance type for appId={0}, errors={1}
platform.cvd.error.upserting.org.default.type = Error in upserting org default AppUser and AppInstance type for appInstanceId={0}, errors={1}
platform.cvd.error.upserting.org.default.user.type = Error in upserting org default User type, errors={0}
platform.cvd.error.profile.migration.failed.datatype.conflict = Profile property in Okta managed template has conflicts with custom property ''{0}''. Expected data type ''{1}'', found ''{2}''
platform.cvd.error.profile.migration.failed.mutability.conflict = Profile property in Okta managed template has conflicts with custom property ''{0}''. Expected mutability ''{1}'', found ''{2}''
platform.cvd.error.profile.migration.failed.scope.conflict = Profile property in Okta managed template has conflicts with custom property ''{0}''. Expected scope ''{1}'', found ''{2}''
platform.cvd.error.profile.migration.failed.permissions.conflict = Profile property in Okta managed template has conflicts with custom property ''{0}''. Permissions changed in an incompatible way
platform.cvd.error.profile.migration.failed.required.conflict = Profile property in Okta managed template has conflicts with custom property ''{0}''. Property changed from required to not required.
platform.cvd.error.profile.migration.failed.null.fromProfile = Profile migration failed, cannot migrate null profile
platform.cvd.error.profile.migration.failed.null.toProfile = Profile migration failed, cannot migrate to null profile
platform.cvd.error.profile.migration.failed.reservedField.conflict = Cannot add reserved property ''{0}'' to profile.
platform.cvd.error.in.generating.alias.name = Error in generating system AppUser Profile alias for appId={0}
platform.cvd.schema.error.creating.imported.second = Cannot create another imported schema for app instance {0}.
platform.cvd.schema.property.cannot.be.deleted = Property cannot be deleted.
platform.cvd.schema.property.cannot.change.type.format = Property {0} cannot change its propertyType from {1} to {2}.
platform.cvd.schema.property.used.in.mapping = Property {0} cannot be deleted. It is used to populate {1}.
platform.cvd.schema.duplicate.property = Property name must be unique within profile. Property {0} is already present.
platform.cvd.schema.illegal.property =  Property name ''{0}'' is reserved and cannot be used as an attribute name.
platform.cvd.schema.error.system.property = Attribute name ''{0}'' is a reserved keyword for this application.
platform.cvd.schema.property.not.found = Property name ''{0}'' is not defined in profile
platform.mapping.template.parse.invalid_json = Profile mapping template json is invalid
platform.cvd.base.schema.attribute.cannot.be.deleted = Base schema attribute ''{0}'' cannot be deleted.
platform.cvd.schema.duplicate.schema = Schema name must be unique within profile. Schema {0} is already present.
platform.cvd.schema.base.not.found = There must be a schema with the name 'base'.
platform.cvd.schema.property.groupAppAttribute = Attribute ''{0}'' is a group app attribute.
platform.cvd.mapping.preview.app.not.assigned = App ''{0}'' is not assigned to this user.
platform.schema.parse.invalid_property = The schema property ''{0}'' could not be converted to a JsonSchema property. {1}
platform.cvd.schema.jsonschema.generator.failed = Unable to convert the schema ''{0}'' into a JsonSchema. {1}
platform.cvd.error.unknown.publishing.method = The publishing method ''{0}'' is unknown.
platform.cvd.mapping.unable.to.generate.json = There was an error generating the mappings JSON. {0}
platform.cvd.error.profile.user.template.not.found = An appropriate profile template was not found for the Okta user.
platform.cvd.error.profile.template.not.found = An appropriate profile template was not found for the app instance.
platform.cvd.error.mappings.template.not.found = An appropriate profile mapping template was not found for the app instance.

platform.cvd.search.invalid.filter.syntax = Invalid filter syntax.

platform.features.dependencyFailure.enable = One or more feature dependency errors occurred attempting to enable features on Org {0}.
platform.features.dependencyFailure.disable = One or more feature dependency errors occurred attempting to disable features on Org {0}.
# Second parameter in following two messages may be a list.
platform.features.missing.dependency.enable = Feature {0} cannot be enabled because it requires {1}.
platform.features.missing.dependency.disable = Feature {0} cannot be disabled because it is required by {1}.
platform.org.creation.failure.feature.dependences = Org creation failed because of a feature dependency error.  Consult the event log for details.
platform.org.edition.update.validation.error = One or more errors occurred attempting to add edition {0} to, and remove edition {1} from, Org {2}.
# First two parameters in the following message may be lists, or empty.
platform.org.sku.update.validation.error.long = One or more errors occurred attempting to add SKUs {0} to, and remove SKUs {1} from, Org {2}.
platform.org.sku.update.validation.error.short = One or more errors occurred attempting to update SKUs:
platform.org.configuration.error = There is a problem with the Org configuration: {0}.
platform.edition.feature.update.error = One or more errors occurred attempting to update edition ''{0}'':
platform.sku.feature.update.error = One or more errors occurred attempting to update SKU ''{0}'':

# Resource request api validation messages
# Template
resource.request.json.parse.error = Resource-request : Json parsing error.
resource.request.invalid.status = Resource request template status ''{0}'' is invalid.
resource.request.approval.settings.missing = Resource request template approval settings are missing.
resource.request.invalid.resourceRequestType = Resource request type ''{0}'' is invalid.
resource.request.invalid.resourceType = Resource type ''{0}'' is invalid.
resource.request.invalid.step.sequence = Invalid sequence ''{0}'' in step {1}.
resource.request.more.group.approvers = Step {0} can have only one group approver. It cannot have multiple group approvers or a combination of group approver and user approver.
resource.request.step.has.no.approvers = Step ''{0}'' has no approvers.
resource.request.has.no.steps = At least one approval step is required.
resource.request.invalid.timeout.format=Request expiration ''{0}'' is not a valid number.
resource.request.timeout.has.months.years=TimeOut value ''{0}'' has months or years specified, please specify it in terms of weeks and days.
resource.request.timeout.invalid.timeout.value=Request expiration must be between 1 and 30 days.
resource.request.has.invalid.timeout.action=Time out action ''{0}'' is invalid.
resource.request.missing.timeout.action=Time out action is missing.
resource.request.has.more.than.limit.num.steps = Template should have less than or equal to {0} steps.
resource.request.invalid.approver.type = Invalid approver type ''{0}''.
resource.request.invalid.approver.action.type = Invalid approver action type ''{0}''.
resource.request.invalid.approver.appUser.permission = Invalid approver appUser permission ''{0}''.
resource.request.approver.everyone.group.disallowed = Everyone group cannot act as an approver.
resource.request.invalid.number.of.obligations = Invalid number of obligations in the template. Expected 4 or less.
resource.request.invalid.obligation = Invalid obligation ''{0}''.
resource.request.invalid.obligation.type = Invalid type ''{0}'' for obligation ''{1}''.
resource.request.invalid.obligation.method = Invalid method ''{0}'' for obligation ''{1}'' and type ''{2}''.
resource.request.invalid.target.type = Invalid target type ''{0}''.
resource.request.invalid.target.type.values = Invalid value(s) for target type ''{0}''.
resource.request.invalid.email = Invalid email ''{0}''.
resource.request.template.active = Template with id = {0} is already active.

# Approvalflow api messages
# Step
approvalflow.step.invalid.action = Invalid action for step ''{0}''.
approvalflow.request.no.active.template = Resource ''{0}'' does not have an active request template.
approvalflow.request.already.requested = There is already a pending request for resource ''{0}''.
approvalflow.step.invalid.reNotifyApprover = The step is not in pending status, can not resend notification to the approver.
# cvd profile object constraint violation errors
platform.cvd.profile.property.constraint.violation.minimum = For property ''{0}'', value {1} is less than configured minimum value {2}
platform.cvd.profile.property.constraint.violation.maximum = For property ''{0}'', value {1} is greater than configured maximum value {2}
platform.cvd.profile.property.constraint.violation.minLength = For property ''{0}'', string length of {1} is less than configured minimum length {2}
platform.cvd.profile.property.constraint.violation.maxLength = For property ''{0}'', string length of {1} is greater than configured maximum length {2}
platform.cvd.profile.property.constraint.violation.regex = For property ''{0}'', value {1} does not match pattern {2}
platform.cvd.profile.property.constraint.violation.required = Value for required property {0} is missing
platform.cvd.profile.property.constraint.violation.enum = Value ''{0}'' for property ''{1}'' is not allowed for enum {2}
platform.cvd.profile.property.constraint.violation.timezone = For property ''{0}'', string value of {1} is not a valid time zone
platform.cvd.profile.property.constraint.violation.schema = For property ''{0}'', value {1} does not match schema {2}

platform.cvd.profile.property.constraint.violation.beforeDate = For property ''{0}'', date {1} should be before configured maximum date {2}
platform.cvd.profile.property.constraint.violation.afterDate = For property ''{0}'', date {1} should be after configured minimum date {2}
platform.cvd.profile.property.constraint.violation.dateFormat = For property ''{0}'', format of value {1} is invalid. Date should be in ISO8601 format
platform.cvd.profile.property.constraint.violation.localeFormat = For property ''{0}'', format of value {1} is invalid. Valid values are concatenation of the ISO 639-1 two letter language code, an underscore, and the ISO 3166-1 2 letter country code
platform.cvd.profile.property.constraint.violation.read_only = Cannot modify the ''{0}'' attribute because it is read only
platform.cvd.profile.property.constraint.violation.immutable = Cannot modify the ''{0}'' attribute because it is immutable
platform.cvd.profile.property.constraint.violation.profile_push_mapped_attribute = Cannot modify the {0} attribute because it has a mapping and profile push is enabled

platform.cvd.profile.property.constraint.violation.unknown_property = Property ''{0}'' is not defined in the schema


platform.app.migration.sign_on_mode_dropped=Cannot migrate app={3} instance {0} to AppVersion {1}. Sign on mode {2} dropped with no suitable replacement.
platform.app.migration.custom_type_missing=Cannot migrate app={3} instance {0} to AppVersion {1}. Custom type {2} not in new app version.
platform.app.migration.unexpected_app_version=Cannot migrate app={1} in org {0} to (appVersion={2}). Org App Version is different than expected.

platform.agents_upgrade.missing_packagetype=Missing package type for Agent version {0}

#######################################
# Reports
#######################################

reports.mediation.invalid.from.time=Invalid From Time.
reports.mediation.from.time.after.to.time=From Time must be before To Time.
reports.mediation.invalid.to.time=Invalid To Time.
reports.mediation.invalid.category=Invalid Category

#######################################
# Policy
#######################################

policy.rule.invalid_policy = Cannot save rule into declared policy
policy.rule.invalid_rule_id = The rule id did not match the expected value
policy.rule.name_required = A name is required for policy rules
policy.name_already_exists = Policy name already in use
policy.rule.name_already_exists = Policy rule name already in use
policy.rule.invalid_rank = Policy rules should not be given a negative rank
policy.rule.group_conflict = A group cannot be listed as both included and excluded
policy.rule.excluded_group_without_included = Excluded groups cannot be specified without at least one included group
policy.rule.excluded_user_without_included = Excluded users cannot be specified without at least one included group
policy.rule.invalid_action_settings = The specified rule action does not use multifactor settings
policy.rule.invalid_factor_lifetime = A factor lifetime must be specified with this action
policy.rule.invalid_factor_types = At least one factor type must be specified with this action
policy.rule.user_conflict = A user cannot be listed as both included and excluded
policy.app.user_or_group.duplicate.id = Duplicate id in idMap while updating policy rule membership: {0}
policy.loader.user_or_group.unexpected_enum = Unknown user or group enum type encountered while evaluating policy rule: {0}
policy.rule.invalid_app_instance_id = The app instance id did not match the expected value
policy.rule.action.mfa.no_factor = Allowed with multifactor requires at least one factor type to be set
policy.rule.location.invalid = Public Gateway IPs must be set in order to use the {0} setting
policy.rule.max_session_age.invalid = The re-authentication setting is outside the allowed range (0-43200 minutes).
password.age.minAgeMinutes.invalid = minAgeMinutes cannot exceed maxAgeDays.
password.age.expireWarnDays.invalid = expireWarnDays cannot exceed maxAgeDays.
policy.rule.location.zones.both_include_exclude_present = You cannot include and exclude network zones at the same time when you use zones in the policy rule.
policy.rule.location.zones.include_and_exclude_not_present = You should either include or exclude network zones when you use zones in the policy rule.
policy.rule.location.zones.include_exclude_present_without_feature = You cannot include or exclude network zones when the feature: {0} is not enabled.
policy.rule.location.zones.location_present_without_feature = You cannot use the location type: {0} when the feature: {1} is not enabled.
policy.rule.location.zones.include_or_exclude_present_for_location_anywhere = You cannot include or exclude networks zones when you use the location type: {0}.
policy.rule.location.invalid_location_type = You cannot use the location type: {0} when the feature: {1} is enabled.
policy.rule.client.no_clients_selected =  At least one client type must be specified with this action.

location.ANYWHERE = Anywhere
location.ON_NETWORK = On network
location.OFF_NETWORK = Off network


### VPN Settings ###
vpn.settings.location.zones.both_include_exclude_present = You cannot include and exclude network zones at the same time when you use zones in the vpn settings.
vpn.settings.location.zones.include_and_exclude_not_present = You should either include or exclude network zones when you use zones in the vpn settings.
vpn.settings.location.zones.include_exclude_present_without_feature = You cannot include or exclude network zones when the feature: {0} is not enabled.
vpn.settings.location.invalid_location_type_when_feature_enabled = You cannot use the location type: {0} when the feature: {1} is enabled.
vpn.settings.location.invalid_location_type_when_feature_disabled = You cannot use the location type: {0} when the feature: {1} is not enabled.
vpn.settings.location.zones.include_or_exclude_present_for_location = You cannot include or exclude networks zones when you use the location type: {0}.
vpn.settings.location.zones.invalid_include = You can only include ALL_ZONES
vpn.settings.location.zones.invalid_exclude = You can only exclude ALL_ZONES
#####################


#######################################
# V2 Policy
#######################################

policy.yes = Yes
policy.no = No

policy.rule.api_extension = This rule has been extended via Okta's API. Some options may not be shown.

policy.rule.add = Add Rule
policy.rule.create = Create Rule
policy.rule.edit = Edit Rule
policy.rule.update = Update Rule

policy.rule.name = Rule Name
policy.rule.name.placeholder = TIP: Describe what this rule does

policy.rule.exclude_users = Exclude Users

policy.rule.excludes_users = Excludes Users
policy.rule.location = Location
policy.rule.auth_type = Login Type
policy.rule.mfa_enroll = Enroll Multi-factor
policy.rule.mfa.user_location = When a User is located
policy.rule.manage_network = Manage configuration for
policy.rule.network = Network

policy.default_name = Default Policy
policy.default_description = The default policy applies in all situations if no other policy applies.
policy.rule.default_name = Default Rule
policy.legacy_name = Legacy Policy
policy.legacy_description = The legacy policy contains any existing settings from the legacy Okta Sign On Policy
policy.ad_name = Active Directory Policy
policy.ad_description = The active directory policy contains settings that apply to users using delegated authentication from active directory integrations.

policy.rule.legacy_name = Legacy Rule
policy.rule.radius_name = Radius Rule

# Sign On Policy
policy.rule.sign_on.no_org_factors = Requiring multifactor authentication requires at least one factor type to be configured.
policy.sign_on.temp_name = {0} Temporary
policy.sign_on.temp_description = This policy was created by Okta Support to allow {0} to sign in. This policy will be \
  deleted when they next log in or by {1}, whichever is sooner.
policy.sign_on.rule.temp_name = {0} Temporary

policy.rule.sign_on.require_factor = Prompt For Factor
policy.rule.sign_on.factor_prompt = Prompt Mode
policy.rule.sign_on.factor_lifetime = Factor Lifetime
policy.rule.sign_on.unexpected_sessionPolicy_data = Session policy properties cannot be specified unless the OKTA_SESSION_POLICY feature is enabled
policy.rule.sign_on.invalid_sessionLifetime = Session policy property maxSessionIdleMinutes must be less than or equal to the maxSessionLifetimeMinutes property
policy.rule.sign_on.maxSessionIdleMinutes = Session Lifetime

# OMM Enrollment Policy
policy.rule.omm.android_name = Android
policy.rule.omm.ios_name = iOS
policy.rule.omm.osx_name = OS X

policy.rule.condition.device.mdm_framework.required = A supported MDM framework must be specified

# App Policies
policy.app.default_name = {0}
policy.app.default_description = Default policy for {0}

# Password Policies
policy.password_description.legacy_name = The legacy policy contains any existing settings from the legacy password policy.

# New Mobile policies
ommEnroll.policy.wizard.title.add=Add Device Policy
ommEnroll.policy.wizard.title.edit=Edit Device Policy
ommEnroll.policy.wizard.policy.form.button.save_add=Save and Add Rule
ommEnroll.policy.wizard.policy.ommEnroll.form.button.save_add=Save and Add Platform Rule
ommEnroll.policy.wizard.policy.form.button.save=Save
ommEnroll.policy.wizard.policy.name.label=Policy name
ommEnroll.policy.wizard.policy.name.placeholder=Tip: Describe what this policy does
ommEnroll.policy.wizard.policy.description.label=Description (Optional)
ommEnroll.policy.wizard.policy.people.label=Assign to groups
ommEnroll.policy.wizard.policy.agreement.tooltip=Enter user agreement here
ommEnroll.policy.wizard.policy.agreement.mainlabel=User agreement
ommEnroll.policy.wizard.policy.agreement.label=Show user agreement
ommEnroll.policy.wizard.rule.IOS=iOS
ommEnroll.policy.wizard.rule.OSX=OS X
ommEnroll.policy.wizard.rule.ANDROID=Android
ommEnroll.policy.wizard.rule.form.title=Add {0} Rule
ommEnroll.policy.wizard.rule.form.title.edit=Edit {0} Rule
ommEnroll.policy.wizard.rule.form.title.add.ommEnroll=Add Platform Rule
ommEnroll.policy.wizard.rule.form.title.add=Add Rule
ommEnroll.policy.wizard.rule.form.save=Save
ommEnroll.policy.wizard.rule.form.next=Next
ommEnroll.policy.wizard.rule.form.IOS.label=This policy already has an iOS rule
ommEnroll.policy.wizard.rule.form.OSX.label=This policy already has an OS X rule
ommEnroll.policy.wizard.rule.form.ANDROID.label=This policy already has an Android rule
ommEnroll.policy.wizard.rule.form.platform.label=Add a rule for...
ommEnroll.policy.wizard.rule.form.enroll.allow=Allow devices
ommEnroll.policy.wizard.rule.form.enroll.deny=Deny devices
ommEnroll.policy.wizard.rule.form.android.afw.label=Android for Work
ommEnroll.policy.wizard.rule.form.android.safe.label=Samsung SAFE
ommEnroll.policy.wizard.rule.form.android.native.label=Native Android
ommEnroll.policy.wizard.rule.form.enroll.label=Allow enrollment?
ommEnroll.policy.wizard.rule.form.custom=Support
ommEnroll.policy.wizard.rule.form.custom.text=The checkboxes are ordered by priority. If you checked all 3, Okta would first try to enroll a device using Android for Work. If it doesn't support Android for Work, then the next option is attempted.
ommEnroll.policy.wizard.rule.form.password.header=PASSCODE REQUIREMENTS
ommEnroll.policy.wizard.rule.form.required.label=Required or optional
ommEnroll.policy.wizard.rule.form.required.placeholder=Require a device passcode
ommEnroll.policy.wizard.rule.form.minLength.label=Minimum length
ommEnroll.policy.wizard.rule.form.complexity.label=Characters
ommEnroll.policy.wizard.rule.form.complexity.minAlpha.label=Require letter
ommEnroll.policy.wizard.rule.form.complexity.minSymbol.label=Require symbol
ommEnroll.policy.wizard.rule.form.expireWarnDays.label=Expiration
ommEnroll.policy.wizard.rule.form.expireWarnDays.placeholder=Passcode never expires
ommEnroll.policy.wizard.rule.form.maxAgeDays.label=Max age (days)
ommEnroll.policy.wizard.rule.form.historyCount.label=History limit
ommEnroll.policy.wizard.rule.form.historyCount.tooltip=The number of new passcodes a user must select before reusing a passcode. The number must be between 1 and 50. The default is one, which allows the maximum passcode reuse.
ommEnroll.policy.wizard.rule.form.maxAttempts.label=Maximum failed attempts
ommEnroll.policy.wizard.rule.form.maxAttempts.tooltip=The number of failed sign in attempts allowed before the device is erased. The number must be between 1 and 10.
ommEnroll.policy.wizard.rule.form.dataSeparation.header=DATA SEPARATION
ommEnroll.policy.wizard.rule.form.Android.label=Work profile to personal
ommEnroll.policy.wizard.rule.form.Android.tooltip=On Android for Work you can prevent a file in the work profile from being opened in the personal profile. You can also prevent copy and paste from the work profile to the personal profile.
ommEnroll.policy.wizard.rule.form.Android.placeholder=Work profile can transfer data to personal profile
ommEnroll.policy.wizard.rule.form.iOS.managedToPersonal.label=Managed to personal
ommEnroll.policy.wizard.rule.form.iOS.managedToPersonal.tooltip=On iOS you can prevent a file in a managed app from being opened in a personal app.
ommEnroll.policy.wizard.rule.form.iOS.managedToPersonal.placeholder=Managed apps can transfer data to personal apps
ommEnroll.policy.wizard.rule.form.iOS.personalToManaged.label=Personal to managed
ommEnroll.policy.wizard.rule.form.iOS.personalToManaged.tooltip=On iOS you can prevent a file in a personal app from being opened in a managed app.
ommEnroll.policy.wizard.rule.form.iOS.personalToManaged.placeholder=Personal apps can transfer data to managed apps
ommEnroll.policy.rules.table.header=Platforms
ommEnroll.policy.default.title.first=This is your default device policy.
ommEnroll.policy.default.title.second=It denies enrollment to all devices.
ommEnroll.policy.default.subtitle.first=To allow devices to enroll, add a new device policy.
ommEnroll.policy.default.subtitle.second.part1=This policy is a security catch-all. It denies enrollment to a
ommEnroll.policy.default.subtitle.second.part2=device if no other policy applies to it.
ommEnroll.policy.wizard.rule.form.displayLock.header=PASSCODE TIMING
ommEnroll.policy.wizard.rule.form.iOS.displayTimeout.label=Auto-lock
ommEnroll.policy.wizard.rule.form.iOS.displayTimeout.tooltip=This controls when to turn the device display off. It's the amount of time between the last user activity and the display getting turned off.
ommEnroll.policy.wizard.rule.form.iOS.displayTimeout.additionallabel=after last user activity
ommEnroll.policy.wizard.rule.form.iOS.passcodeGracePeriod.label=Require passcode
ommEnroll.policy.wizard.rule.form.iOS.passcodeGracePeriod.tooltip=This controls when to require the device passcode. It's the amount of time between the display getting turned off (via auto-lock or the user manually locking) and the passcode being required.
ommEnroll.policy.wizard.rule.form.iOS.passcodeGracePeriod.additionallabel=after lock
ommEnroll.policy.wizard.rule.form.option.oneMinute=1 minute
ommEnroll.policy.wizard.rule.form.option.twoMinutes=2 minutes
ommEnroll.policy.wizard.rule.form.option.threeMinutes=3 minutes
ommEnroll.policy.wizard.rule.form.option.fourMinutes=4 minutes
ommEnroll.policy.wizard.rule.form.option.fiveMinutes=5 minutes
ommEnroll.policy.wizard.rule.form.option.fifteenMinutes=15 minutes
ommEnroll.policy.wizard.rule.form.option.oneHour=1 hour
ommEnroll.policy.wizard.rule.form.option.fourHours=4 hours
ommEnroll.policy.wizard.rule.form.option.never=Never
ommEnroll.policy.wizard.rule.form.option.immediately=Immediately

policy.afw.setup=Set Up AfW
policy.apple.setup=Set Up iOS/OS X
policy.general.setup=Set Up
policy.rule.delete.title=Delete Rule
policy.rule.delete.subtitle=Are you sure you want to delete this rule?
policy.rule.delete.save=Delete Rule
policy.expand.yes=Yes
policy.expand.no=No
policy.expand.support=Support
policy.expand.require=Require passcode
policy.expand.length=Minimum length
policy.expand.letter=Require letter
policy.expand.symbol=Require symbol
policy.expand.expire=Expires
policy.expand.age=Max age
policy.expand.limit=History limit
policy.expand.attemps=Max failed attempts
policy.expand.mantoper=Data: Managed to personal
policy.expand.pertoman=Data: Personal to managed
policy.expand.wortoper=Data: Work profile to personal
policy.ios.message=Before you can edit this rule, you need to do a one-time setup to allow iOS devices.
policy.validation.blanlk=The field cannot be left blank.
policy.validation.maxAgeDays.not.in.range=Max age out of range. It should be 1 - 730 days
policy.validation.historyCount.not.in.range=History limit out of range. It should be 1 - 30
policy.validation.minLength.not.in.range=Minimum length out of range. It should be 4 - 30
policy.validation.maxAttempts.not.in.range=Max failed attempts out of range. It should be 1 - 10
policy.rule.row.header.platform=Platform
policy.rule.row.header.enrollment=Enrollment
policy.rule.row.header.status=Status
policy.rule.row.header.actions=Actions
policy.rule.row.enroll.allow=Allowed
policy.rule.row.enroll.deny=Denied
policy.rules.table.header=Okta Mobility Management Access

#Group Membership Rule
gmr.invalid.rule.id=Rule with id {0} does not exist.
gmr.invalid.rule.type.id=Rule with id {0} is not a group membership rule.
gmr.invalid.rule.type=Invalid rule type.
gmr.rule.active=Rule with id {0} is active. Rule cannot be modified/deleted while it is active.
gmr.missingAction = Expecting an action for group membership rule but none were found.
gmr.action.missing.groupIds=Expecting at least one group id in group membership rule action but none were found.
gmr.missingExpression=Group membership rule expression condition is required.
gmr.invalidExpression = Invalid expression
gmr.max.limit.rules.reached=Cannot create more than {0} rules.
gmr.cannot.modify.actions=Cannot modify actions.
gmr.org.policy.limit.exceeded=Could not process the api request.
gmr.max.user.exclusion.limit.violated=Cannot exclude more than {0} users.

#######################################
# Apps
#######################################
app.generic.user_management.error.add_manager_to_user="Failed to push {0} app user attribute for {1} to {2}

#
# Google
#

# API Mappings
app.google.api.error.DomainUserLimitExceeded=Maximum number of users permitted has been reached for this domain
app.google.api.error.InvalidEmailAddress=Invalid Email Address
app.google.api.error.InvalidFamilyName=Invald Family Name
app.google.api.error.InvalidGivenName=Invalid Given Name
app.google.api.error.UnknownError=Unknown error occurred while provisioning user
app.google.api.error.ServerBusy=Google Service is busy
app.google.api.error.InvalidValue=Invalid value while provisioning user
app.google.api.error.InvalidPassword=Password does not meet password policy
app.google.api.error.EntityExists=User already exists
app.google.api.error.InvalidUsername=Invalid User name
app.google.api.error.UserDeletedRecently=An account with this user name was recently deleted
app.google.api.error.InsufficientPermission=Permission not sufficient. New permissions might have been added that require your re-authentication. Please re-authenticate your provisioning settings.
app.google.api.error.default={0}

app.google.user_management.error.check_user_exists=Failed to verify that the user exists. {0}
app.google.user_management.error.check_user_exists.invalid_domain=The user's email domain does not match the domain specified in Google Apps
app.google.user_management.error.create_new_user=Failed to create new user. {0}
app.google.user_management.error.deactivate_user=Failed to deactivate user. {0}
app.google.user_management.error.reactivate_user=Failed to reactivate user. {0}
app.google.user_management.error.push_password_update=Failed to push password update. {0}
app.google.user_management.error.push_profile_update=Failed to push profile update. {0}
app.google.user_management.error.download_users=Failed to download users. {0}
app.google.user_management.error.import_user_profile=Failed to import user profile. {0}
app.google.user_management.error.download_custom_objects=Failed to download custom objects. {0}
app.google.user_management.error.create_group=Failed to create group {0}. {1}
app.google.user_management.error.create_group_duplicate=Failed to create group {0} because group already exists. {1}
app.google.user_management.error.update_group=Failed to update group {0}. {1}
app.google.user_management.error.delete_group=Failed to delete group {0}. {1}
app.google.user_management.error.download_group_members=Failed to retrieve members from group {0}. {1}
app.google.user_management.error.add_member_to_group=Failed to add user {0} to group {1}. {2}
app.google.user_management.error.remove_member_from_group=Failed to remove user {0} to group {1}. {2}
app.google.user_management.error.download_org_units=Failed to download organization units. {0}
app.google.user_management.error.rateLimit=Rate limit exceeded for Google. {0}
app.google.user_management.error.download_app_schema=Failed to download Google schema. {0}
app.google.user_management.error.invalid_orgunit_id=The OrgUnit specified is invalid. Please refresh the Application Data and retry again. {0}
app.google.user_management.error.invalid_manager=The manager {0} is invalid. The manager must be a valid email in the Google domain. {1}

app.google.license_management.error.remove_license=Failed to remove license {0}. {1}
app.google.license_management.error.assign_license=Failed to assign license {0}. {1}

googleOAuthVerifyFailed=Could not connect to Google API, please check your OAuth credentials again.
googleWrongDomain=OAuth account domain does not match Google Apps domain.


#
# Salesforce
#

app.salesforce.portal.user_management.setup.failure.invalid_imported_user_types=At least one user type to be imported have to be selected.
app.salesforce.update.failed.no_response=No response from Salesforce API
app.salesforce.user_management.failure.add_user_to_public_group=Failed to add user to public group: {0}
app.salesforce.user_management.failure.remove_user_from_public_group=Failed to remove user from public group: {0}
app.salesforce.user_management.failure.group_details=Group name: {0}, API message: {1}
app.salesforce.update.failed.details={0}

# API Mappings
app.salesforce.api.error.INVALID_OPERATION_WITH_EXPIRED_PASSWORD=The password used to connect to the Salesforce API has expired
app.salesforce.api.error.INVALID_LOGIN=The credentials used to log in to the Salesforce API were invalid; please check your Salesforce configuration
app.salesforce.api.error.INVALID_NEW_PASSWORD=The password being set does not meet the password requirements of your Salesforce configuration.
app.salesforce.api.error.default={0}
app.salesforce.api.error.download_user_schema=Unable to download User schema from Salesforce

#
# GoToMeeting
#

# Internal exceptions
app.gotomeeting.error.ImportFailureMissingEmail=  GoToMeeting Import Failure. Got bad import data from GoToMeeting. \
  Expected email to be given for user with id: {0}.

# API Mappings
app.gotomeeting.api.error.DefaultMessage=GoToMeeting API Error: [{0}] {1}
app.gotomeeting.api.error.InvalidLogin=This can occur for any of the following reasons: \
  1. The userid and/or password are invalid \
  2. The corporate account associated with the userid and password does not have the GoToMeeting API enabled \
  3. The userid/password is for a personal manager account.
app.gotomeeting.api.error.SoftLockout=Indicates that the account associated with the userid has been locked for \
  5 minutes due to 3 consecutive failed logon attempts
app.gotomeeting.api.error.HardLockout=Indicates that the account associated with the userid has been locked due to \
  10 consecutive failed logon attempts. Customer Care or Professional Services intervention is required to lift the \
  hard lockout
app.gotomeeting.api.error.InvalidEmailAddress=Email Address has incorrect syntax/format.
app.gotomeeting.api.error.EmailAlreadyInUseException=Email Address is already in use by another organizer in the same \
  account or is already invited to a different group.
app.gotomeeting.api.error.NoSuchConnection=The connection does not exist or has expired
app.gotomeeting.api.error.RateLimitExceeded=The rate limit for this call has been exceeded.
app.gotomeeting.api.error.InternalError=An unknown error occurred on the GoToMeeting Server. Please retry action. \
  If this message persists please contact GoToMeeting support.
app.gotomeeting.api.error.ServiceUnavailable=The GoToMeeting API is currently unable to process requests.
app.gotomeeting.api.error.NoSuchMember=No organizer exists for the supplied organizerEmail.

app.gotomeeting_rest.api.error.DefaultMessage=GoToMeeting API Error: [{0}]

#
# Postini
#

# API Fault Code Mappings
app.postini.api.error.Default=Postini API Error: [{0}] {1}
app.postini.api.error.AdminBlockException=Specified API license key blocked for Administrative Reasons.
app.postini.api.error.InternalException=Internal exceptions caused by server-side problems.
app.postini.api.error.InvalidValueException=One or more element values do not validate.
app.postini.api.error.MalformedKeyException=Malformed API license key.
app.postini.api.error.NoSuchKeyException=Specified API license key does not exist.
app.postini.api.error.UnknownInternalException=Exceptions caused by unhandled server-side problems.

#
# Zendesk
#

# SSO Error Mappings
app.zendesk.sso.error.validate = Failed to find Zendesk Username for given user.  Import user into Okta before proceeding.
app.zendesk.sso.error.HashFailure = Failed to create SSO Hash
app.zendesk.sso.error.EncodeFailure = Failed to encode URL parameters for SSO
app.zendesk.sso.error.XMLFailure = Failed to parse XML response from API

app.zendesk.api.error.role.restriction=Invalid Role / Ticket Restriction combination for Zendesk user

#
# Confluence
#
app.confluence.api.error.url=Confluence URL could not be parsed
app.confluence.api.error.login=Failed to login to Confluence
app.confluence.api.error.logout=Failed to logout from Confluence
app.confluence.api.error.parse.groups=Failed to parse group information from Confluence
app.confluence.api.error.deactivate.user=Failed to deactivate user from Confluence: {0}
app.confluence.api.error.reactivate.user=Failed to reactivate user from Confluence: {0}
app.confluence.api.error.check.user.exists=Failed to verify a user exists from Confluence: {0}
app.confluence.api.error.check.group.exists=Failed to verify a group exists from Confluence: {0}
app.confluence.api.error.get.user=Failed to download a user from Confluence: {0}
app.confluence.api.error.convert.remote.user.to.app.user=Failed to convert a remote user to an app user
app.confluence.api.error.convert.app.user.to.remote.user=Failed to convert an app user to a remote user
app.confluence.api.error.download.users=Failed to download all user from Confluence: {0}
app.confluence.api.error.create.new.user=Failed to create new a user: {0}
app.confluence.api.error.remove.user=Failed to remove a user from Confluence: {0}
app.confluence.api.error.create.new.group=Failed to create new a group: {0}
app.confluence.api.error.remove.group=Failed to remove a group from Confluence: {0}
app.confluence.api.error.add.user.to.group=Failed to assign a user to a group from Confluence: {0}
app.confluence.api.error.remove.user.to.group=Failed to remove a user from a group from Confluence: {0}
app.confluence.api.error.get.user.groups=Failed to download a user's groups from Confluence: {0}
app.confluence.api.error.push.password.update=Failed to push a new password to a user to Confluence: {0}
app.confluence.api.error.push.profile.update=Failed to push a profile to a user to Confluence: {0}
app.confluence.api.error.import.user.profile=Failed to download a user's profile from Confluence: {0}

#
# SugarCRM
#
app.sugarcrm.api.error.login=Failed to login to SugarCRM
app.sugarcrm.api.error.logout=Failed to logout from SugarCRM
app.sugarcrm.api.error.hash.password=Failed to hash password
app.sugarcrm.api.error.set.entry=Failed to set entry
app.sugarcrm.api.error.get.entry.list=Failed to get entry list
app.sugarcrm.api.error.download.server.set.values=Failed to download values from SugarCRM
app.sugarcrm.api.error.deactivate.user=Failed to deactivate user from SugarCRM
app.sugarcrm.api.error.reactivate.user=Failed to reactivate user from SugarCRM
app.sugarcrm.api.error.check.user.exists=Failed to verify a user exists from SugarCRM
app.sugarcrm.api.error.download.users=Failed to download all user from SugarCRM
app.sugarcrm.api.error.create.new.user=Failed to create a new user
app.sugarcrm.api.error.push.password.update=Failed to push a new password to a user to SugarCRM
app.sugarcrm.api.error.push.profile.update=Failed to push a profile to a user to SugarCRM
app.sugarcrm.api.error.import.user.profile=Failed to download a user's profile from SugarCRM

#
# Jira
#
app.jira.api.error.binding=Failed to bind with Jira. {0}
app.jira.api.error.login=Failed to login to Jira. {0}
app.jira.api.error.logout=Failed to logout from Jira.
app.jira.api.error.check.user.exists=Failed to verify a user exists from Jira. {0}
app.jira.api.error.get.user=Failed to download a user from Jira. {0}
app.jira.api.error.convert.remote.user.to.app.user=Failed to convert a remote user to an app user. {0}
app.jira.api.error.convert.app.user.to.remote.user=Failed to convert an app user to a remote user. {0}
app.jira.api.error.download.users=Failed to download all user from Jira. {0}
app.jira.api.error.create.new.user=Failed to create new a user. {0}
app.jira.api.error.push.password.update=Failed to push a new password to a user to Jira. {0}
app.jira.api.error.push.profile.update=Failed to push a profile to a user to Jira. {0}
app.jira.api.error.import.user.profile=Failed to download a user''s profile from Jira. {0}
app.jira.api.error.upsert.group=Failed to create a new user group: {1}. {0}
app.jira.api.error.delete.group=Failed to delete user group: {1}. {0}
app.jira.api.error.update.group.membership=Failed to update users in group: {1}. {0}
app.jira.api.error.download.server.set.values=Failed to download user groups list. {0}

#
# ServiceNow
#
servicenowLoginFailed=Could not verify the ServiceNow administrator login and password; please confirm that these are set correctly. {0}
app.servicenow.api.error.binding.user=Failed to bind with ServiceNow. {0}
app.servicenow.api.error.download.users=Failed to download all user from ServiceNow. {0}
app.servicenow.api.error.create.new.user=Failed to create new a user. {0}
app.servicenow.api.error.check.user.exists=Failed to verify a user exists from ServiceNow. {0}
app.servicenow.api.error.push.password.update=Failed to push a new password to a user to ServiceNow. {0}
app.servicenow.api.error.push.profile.update=Failed to push a profile to a user to ServiceNow. {0}
app.servicenow.api.error.import.user.profile=Failed to download a user profile from ServiceNow. {0}
app.servicenow.api.error.deactivate.user=Failed to deactivate user from ServiceNow. {0}
app.servicenow.api.error.reactivate.user=Failed to reactivate user from ServiceNow. {0}
app.servicenow.api.error.validation=Failed to validate your Admin credentials. {0}
app.servicenow.api.error.get.keys.by.user.id=Failed to fetch user. {0}
app.servicenow.api.error.get.departments=Failed to download departments list from ServiceNow. {0}
app.servicenow.api.error.get.locations=Failed to download locations list from ServiceNow. {0}
app.servicenow.api.error.get.costcenters=Failed to download cost centers list from ServiceNow. {0}

#
# ServiceNow App2
#
app.servicenow_app2.api.validation.failure=Could not verify the ServiceNow administrator login and password; please confirm that these are set correctly.

app.servicenow_app2.api.error.binding.user=Failed to bind with ServiceNow. {0}
app.servicenow_app2.api.error.download.users=Failed to download all user from ServiceNow. {0}
app.servicenow_app2.api.error.create.new.user=Failed to create new a user. {0}
app.servicenow_app2.api.error.check.user.exists=Failed to verify a user exists from ServiceNow. {0}
app.servicenow_app2.api.error.push.password.update=Failed to push a new password to a user to ServiceNow. {0}
app.servicenow_app2.api.error.push.profile.update=Failed to push a profile to a user to ServiceNow. {0}
app.servicenow_app2.api.error.import.user.profile=Failed to download a user profile from ServiceNow. {0}
app.servicenow_app2.api.error.deactivate.user=Failed to deactivate user from ServiceNow. {0}
app.servicenow_app2.api.error.reactivate.user=Failed to reactivate user from ServiceNow. {0}
app.servicenow_app2.api.error.validation=Failed to validate your Admin credentials. {0}
app.servicenow_app2.api.error.get.keys.by.user.id=Failed to fetch user. {0}
app.servicenow_app2.api.error.get.departments=Failed to download departments list from ServiceNow. {0}
app.servicenow_app2.api.error.get.locations=Failed to download locations list from ServiceNow. {0}
app.servicenow_app2.api.error.get.costcenters=Failed to download cost centers list from ServiceNow. {0}
app.servicenow_app2.api.error.download.groups=Failed to get user groups from ServiceNow. {0}
app.servicenow_app2.api.error.upsert.group=Failed to upsert group in ServiceNow. {0}
app.servicenow_app2.api.error.delete.group=Failed to delete group in ServiceNow. {0}
app.servicenow_app2.api.error.download.group.memberships=Failed to get group memberships from ServiceNow. {0}
app.servicenow_app2.api.error.add.group.memberships=Failed to add group membership in ServiceNow. {0}
app.servicenow_app2.api.error.delete.group.memberships=Failed to delete group membership in ServiceNow. {0}
app.servicenow_app2.api.error.import.manager.profile=Failed to find manager profile in AD {0}

#
# Enernoc
#
app.enernoc.sso.error.TokenFailure=Failed to receive a valid token from the Security Manager. {0}

#
# Codesion
#

#
# Workday
#
app.workday.api.error.validate = Unable to validate Workday API Credentials: {0}
app.workday.api.error.bind = Unable to bind to Workday API Endpoint: {0}
app.workday.api.error.get-workers = Unable to fetch Workday users: {0}
app.workday.api.error.get-worker-by-id = Unable to find Workday user by id: {0}
app.workday.api.error.get-worker-by-username = Unable to find Workday user by username: {0}
app.workday.api.error.parse-workers = Unable to parse Worker result from Workday: {0}
app.workday.api.error.parse-groups = Unable to parse Group result from Workday: {0}
app.workday.api.error.parse-group-assignments = Unable to parse Group Assignment result from Workday: {0}
app.workday.api.error.get-groups = Unable to fetch provisioning groups from Workday: {0}
app.workday.api.error.get-group-assignments = Unable to fetch provisioning group assignments from Workday: {0}
app.workday.api.error.get-tx-logs = Unable to fetch Workday transaction logs: {0}
app.workday.api.error.validation = Validation error: {0}
app.workday.api.error.apply-email-address = Unable to set email address: {0}
app.workday.api.error.apply-phone-numbers = Unable to set phone numbers: {0}
app.workday.api.error.apply-phone-numbers-find-contact-type = Unable to set phone number contact type: {0}
app.workday.api.error.apply-phone-numbers-get-device-type = Unable to set phone number device type: {0}
app.workday.api.error.connect-custom-report = Unable to establish connection to fetch custom report: {0}
app.workday.api.error.get-custom-report-xsd-parsing = Unable to parse the custom report: {0}
app.workday.api.error.parse-custom-report = Unable to parse the custom report: {0}
app.workday.api.error.universal-directory-setup-error = Unable to set up universal directory: {0}
app.workday.api.error.custom-report-unknown-failure = Unable to fetch custom report: {0}
app.workday.api.error.get-employee-personal-info = Unable to find personal info for Workday employee: {0}
app.workday.api.error.update-employee-personal-info = Unable to update personal info for Workday employee: {0}
app.workday.api.error.user-management-error-download-app-schema = Unable to download Workday schema: {0}
app.workday.api.error.user-management-error-push-profile-update = Unable to push profile update: {0}

# Legacy Workday messages
app.workday.api.error.default=Workday API Error
app.workday.api.error.search=Unable to perform search
app.workday.api.error.fetch=Unable to retrieve user
app.workday.api.error.update=Unable to update user
app.workday.api.error.builduser=Unable to build user

# SSO Error Mappings
app.codesion.sso.error.XmlRpcFailure = Failed to parse XmlRpc response from API

#
# DocuSign
#
app.docusign.api.error.auth=Failed to authenticate with DocuSign service - {0}
app.docusign.api.error.user_exists=Failed to check if user {0} exists on DocuSign - {1}
app.docusign.api.error.create_user=Failed to create user {0} in DocuSign - {1}
app.docusign.api.error.no.accounts=Provided admin user is not a member of any account
app.docusign.api.error.not.account.member=Provided admin user is not a member of account {0}
app.docusign.api.error.update.permission.profile=Failed to update user permission profile. {0}
app.docusign.api.error.import.permission.profile=Failed to import user permission profile. {0}
app.docusign.api.error.update.inactive.user=Failed to update user details - user is not active. {0}
app.docusign.api.error.import.inactive.user=Failed to get user details - user is not active. {0}

#
#EQ Analyzer
#
app.eqanalyzer.url.encoding=Failed to encode auth url for user {0} for EQ Analyzer for Quincy

#
# Send Word Now
#
app.sendwordnow.api.error.auth=Failed to authenticate with Send Word Now service - {0}
app.sendwordnow.api.error.user_exists=Failed to check if user {0} exists on Send Word Now - {1}
app.sendwordnow.api.error.create_user=Failed to create user {0} in Send Word Now - {1}
app.sendwordnow.api.error.import_user_profile=Failed to import user profile for user {0} in Send Word Now - {1}
app.sendwordnow.api.error.update_user_profile=Failed to update user profile for user {0} in Send Word Now - {1}
app.sendwordnow.api.error.get_user=Failed to get user for user {0} in Send Word Now - {1}
app.sendwordnow.api.error.service=There was a problem with the service {0}


#
# NetSuite
#
app.netsuite.api.error.auth=Failed to authenticate with NetSuite - {0}
app.netsuite.api.error.check_user_exists=Failed to check if user {0} exists on NetSuite - {1}
app.netsuite.api.error.create_new_user=Failed to create user {0} in NetSuite - {1}
app.netsuite.api.error.deactivate_user=Failed to deactivate user {0} in NetSuite - {1}
app.netsuite.api.error.reactivate_user=Failed to reactivate user {0} in NetSuite - {1}
app.netsuite.api.error.import_user_profile=Failed to import user {0} from NetSuite - {1}
app.netsuite.api.error.download_custom_objects=Failed to download roles from NetSuite - {0}
app.netsuite.api.error.download_users=Failed to download users from NetSuite - {0}
app.netsuite.api.error.push_profile_update=Failed to push profile update for user {0} to NetSuite - {1}
app.netsuite.api.error.push_password_update=Failed to push password update for user {0} in NetSuite - {1}

# concur messages
app.concur.api.error.auth=Error authenticating against Concur: {0}
app.concur.api.error.check_user_exists=Error while verifying if user {0} exists on Concur: {1}
app.concur.api.error.create_user=Error while creating Concur user {0}: {1}
app.concur.api.error.deactivate_user=Error while deactivating {0} (Concur): {1}
app.concur.api.error.reactivate_user=Error while reactivating {0} (Concur): {1}
app.concur.api.error.import_user_profile=Error while trying to import Concur user profile for {0}: {1}
app.concur.api.error.push_profile_update=Error while trying to push Concur profile update for {0}: {1}
app.concur.api.error.push_password_update=Error pushing Concur password for {0}: {1}
app.concur.api.error.generic=Concur API error for {0}: {1}

#
# Echosign
#
app.echosign.api.error.connection=Failed to connect to the Echosign API key: {0}
app.echosign.api.error.search.by.id=Error when searching Echosign for User Key {0}
app.echosign.api.error.search.by.login=Error when searching Echosign for Username {0}
app.echosign.api.error.download.users=Error when fetching all users in Echosign
app.echosign.api.error.import.profile=Error when importing profile information for user {0}
app.echosign.api.error.create=Error trying to create new user {0} in Echosign - {1}

#
# Halogen
#
app.halogen.sso.error.EncodeFailure = Couldn't encode username for usage in URL
app.halogen.sso.error.SessionFailure = Couldn't get a session ID from Halogen

#
# Jobvite
#
app.jobvite.sso.error.EncodeFailure = Couldn't encode login URL

#
# SuccessFactors
#
app.successfactors.api.exception = Failed to query SuccessFactors API: {0}
app.successfactors.api.error = Error parsing SuccessFactors API results: {0}

#
# Yammer
#
app.yammer.api.error.validation=Unable to validate Yammer API configuration
app.yammer.api.error.check.user=Unable to check for user on Yammer
app.yammer.api.error.download.users=Unable to download users from Yammer
app.yammer.api.error.import.profile=Unable to import user profile from Yammer
app.yammer.api.error.push.profile=Unable to push user profile to Yammer: {0}
app.yammer.api.error.deactivation=Unable to deactivate user within Yammer
app.yammer.api.error.create.user=Unable to create user within Yammer

#
# Coupa
#
app.coupa.api.error=Coupa API Error: {0}
app.coupa.api.connection.error=Failed to connect to Coupa API

#
# MSBPOS
#
app.msbpos.api.error.validate.creds=Failed to validate MSBPOS Credentials: {0}
app.msbpos.api.error.deactivate.user=Failed to deactivate user in MSBPOS: {0}
app.msbpos.api.error.check.user.exists=Failed while checking for user in MSBPOS: {0}
app.msbpos.api.error.activate.license=Failed to add license to user in MSBPOS
app.msbpos.api.error.get.subscription=Failed to find subscription id in MSBPOS: {0}
app.msbpos.api.error.push.password=Failed to push password to MSBPOS: {0}
app.msbpos.api.error.create.user=Failed to create user in MSBPOS: {0}

#
# BIG Machines
#

app.bigmachines.api.error.connection=Failed to connect to BigMachines
app.bigmachines.api.error.login=Failed to authenticate against BigMachines
app.bigmachines.api.error.logout=Failed to logout from BigMachines
app.bigmachines.api.error.check.user.exists=Failed to check if user exists in BigMachines
app.bigmachines.api.error.profile.update=Failed to update profile for {0} BigMachines: {1}
app.bigmachines.api.error.create=Failed to create {0} BigMachines: {1}
app.bigmachines.api.error.import=Failed to import {0} BigMachines: {1}
app.bigmachines.api.error.deactivate=Failed to deactivate {0} BigMachines: {1}

#
# Central Desktop
#
app.centraldesktop.api.error.connection=Failed to connect to CentralDesktop
app.centraldesktop.api.error.login=Failed to authenticate {0} against CentralDesktop: {1}
app.centraldesktop.api.error.logout=Failed to logout {0} from CentralDesktop: {1}
app.centraldesktop.api.error.check.user.exists=Failed to check if user exists in CentralDesktop
app.centraldesktop.api.error.profile.update=Failed to update profile for {0} CentralDesktop: {1}
app.centraldesktop.api.error.create=Failed to create {0} CentralDesktop: {1}
app.centraldesktop.api.error.import=Failed to import {0} CentralDesktop: {1}
app.centraldesktop.api.error.deactivate=Failed to deactivate {0} CentralDesktop: {1}
app.centraldesktop.api.error.password.update=Failed to update {0} password CentralDesktop: {1}

# Office365 Messages
app.office365.api.error.validate.creds = Could not validate your Office 365 credentials, received error: {0}
app.office365.api.error.validate.creds.unknown.exception = Could not communicate with Office 365 to validate your credentials, received error: {0}
app.office365.api.error.download.custom.objects = Could not download group/role/license data for your Office 365 instance, received error: {0}
app.office365.api.error.download.users = Could not download all users from your Office 365 instance, received error: {0}
app.office365.api.error.download.groups = Could not download all groups from your Office 365 instance, received error: {0}
app.office365.api.error.download.licenses = One or more downloaded licenses from Office 365 instance does not have associated service status
app.office365.api.error.deactivate.user = Could not deactivate Office 365 user {0}, received error: {1}
app.office365.api.error.reactivate.user = Could not reactivate Office 365 user {0}, received error: {1}
app.office365.api.error.check.user.exists = Could not determine status of Office 365 user {0}, received error: {1}
app.office365.api.error.push.password = Could not push password for Office 365 user {0}, received error: {1}
app.office365.api.error.create.user = Could not create user {0} in Office 365, received error: {1}
app.office365.api.error.push.profile = Could not push profile for Office 365 user {0}, received error: {1}
app.office365.api.error.import.profile = Could not import profile for Office 365 user {0}, received error: {1}
app.office365.api.error.ad.user = User is assigned to more than one instance of Active Directory, could not set Immutable ID
app.office365.api.error.no.endpoints.found = No Office 365 endpoint found to send our request.
app.office365.api.error.endpoint.unavailable = Unable to reach the Office 365 endpoint at {0}, received error: {1}
app.office365.api.error.group.create.failure = Could not create Office 365 group {0}, received error: {1}
app.office365.api.error.group.create.failure.name.in.use = Could not create Office 365 group {0} because the name is already in use, received error: {1}
app.office365.api.error.group.update.failure = Could not update Office 365 group {0}, received error: {1}
app.office365.api.error.group.update.failure.not.found = Could not update Office 365 group {0} because it was not found, received error: {1}
app.office365.api.error.group.delete.failure = Could not delete Office 365 group {0}, received error: {1}
app.office365.api.error.group.membership.update.failure = Could not update the Office 365 group membership for {0}, received error: {1}
app.office365.api.error.group.membership.update.removal.failure = Could not update the Office 365 group membership for {0} because of an error removing a user from the group, received error: {1}
app.office365.api.error.group.membership.update.assignment.failure = Could not update the Office 365 group membership for {0} because of an error assigning a user to the group, received error: {1}
app.office365.api.error.group.membership.update.group.not.found.failure = Could not update the Office 365 group membership for {0} because the group could not be found, received error: {1}
app.office365.api.error.set.company.dirsync.failure = Unable to enable Office 365 directory sync for the company, received error: {0}
app.office365.api.error.get.company.dirsync.failure = Unable to read Office 365 directory sync for the company, received error: {0}, user: {1}
app.office365.api.error.set.company.dirsync.status.failure = Unable to enable Office 365 directory sync for the company, because 'Directory Sync' value of {0} in Azure Active Directory is unsupported.  Please visit the Azure Active Directory portal and set 'Directory Sync' state to Activated.
app.office365.api.error.get.company.dirsync.status.failure = Unable to provision user {0} to Office 365, because 'Directory Sync' value of {1} in Azure Active Directory is unsupported.  Please visit the Azure Active Directory portal and set 'Directory Sync' state to Activated and retry.
app.office365.api.error.get.company.dirsync.status.pending = Unable to provision user {0} to Office 365, because 'Directory Sync' value of {1} in Azure Active Directory not yet in Activated state.  This may take up to 72 hours.   Please visit the Azure Active Directory portal and retry when in Activated state.
app.office365.api.error.set.domain.federation.failure = Unable to setup the domain federation, received error: {0}
app.office365.api.error.set.domain.federation.failure.domain.not.found =  Unable to setup the domain federation because the specified domain was not found: domain={0}.
app.office365.api.error.set.domain.federation.failure.domain.default =  Unable to setup the domain federation because the specified domain is the default domain: domain={0}.
app.office365.api.error.set.domain.federation.failure.access.denied = Unable to setup the domain federation because the admin user is not authorized to perform the task.
app.office365.api.error.remove.domain.federation.failure = Unable to remove the domain federation, received error: {0}
app.office365.api.error.remove.domain.federation.failure.domain.not.found =  Unable to remove the domain federation because the specified domain was not found: domain={0}.
app.office365.api.error.remove.domain.federation.failure.access.denied = Unable to remove the domain federation because the admin user is not authorized to perform the task.
app.office365.api.sync.complete = User sync completed. with total {0} processed ({1} deletion), of those processed {2} failed ({3} deletion)
app.office365.api.sync.job.complete = Sync job completed. with total {0} objects processed, of those processed objects {1} failed
app.office365.api.sync.job.complete.user = Sync job completed. with total {0} users processed ({1} deletion), of those processed users {2} failed ({3} deletion)
app.office365.api.sync.job.complete.group = Sync job completed. with total {0} groups processed ({1} deletion), of those processed groups {2} failed ({3} deletion)
app.office365.api.sync.job.complete.contact = Sync job completed. with total {0} contacts processed ({1} deletion), of those processed contacts {2} failed ({3} deletion)
app.office365.api.sync.heartbeat.sent = Heartbeat sent to Microsoft Azure Active Directory.
app.office365.api.error.sync = Failed to sync any object to Office 365, received error: {0}
app.office365.api.error.sync.finalize = Failed to finalize export to Office 365, received error: {0}
app.office365.api.error.sync.group = Failed to sync group, received error: {0}
app.office365.api.error.sync.user = Failed to sync user, received error: {0}
app.office365.api.error.sync.contact = Failed to sync contact, received error: {0}
app.office365.api.error.sync.set.attribute = Failed to set attribute, received error: {0}
app.office365.api.error.sync.not.activated = Sync could not execute because Office 365 directory sync for the company not yet Activated.  Sync will retry after a period of time.
app.office365.api.error.sync.activation.failed = Office 365 directory sync for the company could not be activated after multiple attempts.  Sync for the company will not run again.  Please visit the Azure Active Directory portal and set 'Directory Sync' state to Activated and retry.
app.office365.api.error.x-ms-forwarded-client-ip-header.absent = X-MS-Forwarded-Client-IP header either empty or not found in the request.
app.office365.api.error.no-license-found = No Office 365 license is specified for the user
app.office365.api.error.multiple-licenses-found = Multiple license types selected to be assigned to the user. Only one license type allowed to be selected
app.office365.api.error.validate.admin.creds = User ''{0}'' does not have the Company Administrator role. Please try again with a user which has this role.
app.office365.model.validation.adminusername.field.blank = The admin username field cannot be left blank
app.office365.model.validation.adminpassword.field.blank = The admin password field cannot be left blank
app.office365.model.validation.adminusername.field.format.invalid = The admin username must be in the form of an email address.
app.office365.model.validation.adminusername.field.invalid = Please provide credentials for an Office 365 administrator who belongs to a separate domain than you are about to federate. If you do not have such user, please create an Office 365 user 'admin@yourcompany.onmicrosoft.com' that has the role 'Company Administrator'
app.office365.ud.not.enabled = The Office 365 application requires Universal Directory to be enabled for your organization. Please contact Okta support.
app.office365.v1.flag.not.enabled = Your organization does not have the permission required to enable extended user provisioning for Office 365. Please contact Okta support.
app.office365.publish.app.profiles.and.mappings.failed=Failed to publish app profiles and mappings. Please contact Okta support.
app.office365.user.mgmt.update.settings.failed=Failed to update provisioning settings. Please contact support Okta support.
app.office365.api.error.no-licenses-available=Unable to assign licenses to the user. These licenses have no available seats: {0}. These licenses have only suspended (unassignable) seats left: {1}
app.office365.api.error.conflicting-licenses=Unable to assign licenses to the user due to license conflicts. Please remove one of the licenses and try again. Conflict details: {0}
app.office365.api.no.licenses.migration.ran=Unable to assign licenses to the user due to invalid licenses specified. Please contact Okta customer support to confirm that licenses migration job ran successfully after enhanced Office 365 user provisioning was enabled.
app.office365.sso.default.notallowed=Federating to the 'Default' domain is not allowed. Please change your Office 365 domain for this app. domain={0}
app.office365.provisioningType.change.notallowed=Provisioning Type downgrade to 'Default' not allowed.
app.office365.license.conversion.job.processing.app.instance = Begin processing license conversion for app instance.
app.office365.license.conversion.job.skipping.inactive.app.instance = Skipping app during Office 365 license conversion because of inactive app instance status.
app.office365.license.conversion.job.skipping.missing.creds.app.instance = Skipping app during Office 365 license conversion as it does not contain Office 365 admin user credentials.
app.office365.license.conversion.job.skipping.no.change.licenses.app.instance = Skipping app during Office 365 license conversion as it seem to have equivalent licenses, no migration is required.
app.office365.license.conversion.job.begin.downloading.custom.objects = Begin downloading licenses during Office 365 license conversion.
app.office365.license.conversion.job.end.downloading.custom.objects = End downloading licenses during Office 365 license conversion.
app.office365.license.conversion.job.no.custom.objects.downloaded = Skipping app during Office 365 license conversion as no custom objects were downloaded.
app.office365.license.conversion.job.download.or.migration.failed = Download of new or migration of existing licenses failed during Office 365 license conversion, received error: {0}
app.office365.license.conversion.job.begin.migration.users.v1.to.v0 = Begin migrating licenses from v1 to v0 for app users during Office 365 license conversion. Total App users to be migrated: {0}
app.office365.license.conversion.jo.begin.migration.gaas.v1.to.v0 = Begin migrating licenses from v1 to v0 for group app assignments during Office 365 license conversion. Total group app assignments to be migrated: {0}
app.office365.license.conversion.job.begin.migration.users.v0.to.v1 = Begin migrating licenses from v0 to v1 for app users during Office 365 license conversion. Total App users to be migrated: {0}
app.office365.license.conversion.job.begin.migration.gaas.v0.to.v1 = Begin migrating licenses from v0 to v1 for group app assignments during Office 365 license conversion. Total group app assignments to be migrated: {0}
app.office365.license.conversion.job.end.count.migration.users.v1.to.v0 = End migrating licenses from v1 to v0 for app users during Office 365 license conversion. App users migrated: {0}
app.office365.license.conversion.job.end.count.migration.gaas.v1.to.v0 = End migrating licenses from v1 to v0 for group app assignments during Office 365 license conversion. Group app assignments migrated: {0}
app.office365.license.conversion.job.end.count.migration.users.v0.to.v1 = End migrating licenses from v0 to v1 for app users during Office 365 license conversion. App users migrated: {0}
app.office365.license.conversion.job.end.count.migration.gaas.v0.to.v1 = End migrating licenses from v0 to v1 for group app assignments during Office 365 license conversion. Group app assignments migrated: {0}
app.office365.license.conversion.job.end.migration.users.v1.to.v0 = End migrating licenses from v1 to v0 for all app users during Office 365 license conversion. App users migrated: {0}
app.office365.license.conversion.job.end.migration.gaas.v1.to.v0 = End migrating licenses from v1 to v0 for all group app assignments during Office 365 license conversion. Group app assignments migrated: {0}
app.office365.license.conversion.job.end.migration.users.v0.to.v1 = End migrating licenses from v0 to v1 for all app users during Office 365 license conversion. App users migrated: {0}
app.office365.license.conversion.job.end.migration.gaas.v0.to.v1 = End migrating licenses from v0 to v1 for all group app assignments during Office 365 license conversion. Group app assignments migrated: {0}
app.office365.license.conversion.job.migration.users.v1.to.v0.failed = Migration of licenses from v1 to v0 for app users failed during Office 365 license conversion, received error: {0}
app.office365.license.conversion.job.migration.gaas.v1.to.v0.failed = Migration of licenses from v1 to v0 for group app assignments failed during Office 365 license conversion, received error: {0}
app.office365.license.conversion.job.migration.users.v0.to.v1.failed = Migration of licenses from v0 to v1 for app users failed during Office 365 license conversion, received error: {0}
app.office365.license.conversion.job.migration.gaas.v0.to.v1.failed = Migration of licenses from v0 to v1 for group app assignments failed during Office 365 license conversion, received error: {0}
app.office365.license.conversion.job.skipping.migration.user.v1.to.v0 = Skipping migration of licenses from v1 to v0 for app user during Office 365 license conversion, app user id: {0}
app.office365.license.conversion.job.skipping.migration.gaa.v1.to.v0 = Skipping migration of licenses from v1 to v0 for group app assignment during Office 365 license conversion, group app assignment id: {0}
app.office365.license.conversion.job.skipping.migration.user.v0.to.v1 = Skipping migration of licenses from v0 to v1 for app user during Office 365 license conversion, app user id: {0}
app.office365.license.conversion.job.skipping.migration.gaa.v0.to.v1 = Skipping migration of licenses from v0 to v1 for group app assignment during Office 365 license conversion, group app assignment id: {0}

# Office365 Success Messages
app.office365.api.set.domain.federation.success = Successfully set up the domain federation with new settings: {0}
app.office365.api.change.domain.federation.success = Successfully updated the domain federation from old settings to new settings, old settings: {0}, new settings: {1}
app.office365.api.remove.domain.federation.success = Successfully removed the domain federation, domain: {0}
app.office365.api.set.wsfed.configure.type.success = Successfully updated the domain WS-Federation configuration type to: {0}

# OPP
app.onprem_provisioning.failure.bad.returncode = The Provisioning Agent call to {0} returned an error code of {1}. Received error: {2}
app.onprem_provisioning.failure.timeout = The Provisioning Agent call to {0} failed with an agent timeout. Please check and ensure Provisioning Agent is running.
app.onprem_provisioning.failure = The Provisioning Agent call to {0} failed. Error code: {1}, error: {2}
app.onprem_provisioning.failure.download.users.parsing = Unable to parse the downloaded users returned results: {0}
app.onprem_provisioning.failure.download.groups.parsing = Unable to parse the downloaded groups returned results: {0}
app.onprem_provisioning.failure.cmm.parsing = Unable to parse ConfiguredUserManagementMode parameters: {0}
app.onprem_provisioning.failure.no.useridentification.name = Unable to find the user identification field name
app.onprem_provisioning.failure.no.useridentification.value = Unable to find the user identification value: {0}
app.onprem_provisioning.failure.build.scim.filter = Failed to build the SCIM filter for the AppUser {0} with the user identification field name {1}
app.onprem_provisioning.failure.partial.failure = The Provisioning Agent call to {0} failed. Partial results of {1} had the error: {2}
app.onprem_provisioning.failure.partial.results.missing.messages = The Provisioning Agent returned partial results for the import action that are missing the required messages field
app.onprem_provisioning.failure.partial.results.missing.message.type = The Provisioning Agent returned partial results for the import action that are missing the {0} message field
app.onprem_provisioning.failure.partial.results.invalid.count = The Provisioning Agent call to {0} failed. The number of users/groups messages downloaded does not match the number of users/groups messages sent by the Provisioning Agent in the final result. Expected user messages={1}, Received user messages={2}, Expected group messages={3}, Received group messages={4}
app.onprem_provisioning.progress.groups = Importing Groups...
app.onprem_provisioning.progress.users = Importing Users...

# RUM
app.rum.failure.bad.returncode = Remote User Management call to {0} returned an error code of {1}. Received error: {2}
app.rum.failure.timeout = Remote User Management call to {0} failed because a timeout happened while waiting for a worker
app.rum.failure.timeout.reschedule = Remote User Management call to {0} returned a timeout and will be automatically rescheduled
app.rum.failure = Remote User Management call to {0} failed. Error code: {1}, error: {2}
app.rum.failure.download.users.parsing = Unable to parse the downloaded users returned results: {0}
app.rum.failure.download.groups.parsing = Unable to parse the downloaded groups returned results: {0}
app.rum.failure.download.schema.enum.values.constraints.parsing = Unable to parse the downloaded schema enum values returned results: {0}
app.rum.failure.download.schemas.parsing = Unable to parse the downloaded schemas returned results: {0}
app.rum.failure.download.schema.property.parsing = Unable to convert JSON into a known SchemaProperty. name={0}, type={1}, node={2}
app.rum.failure.partial.failure = Remote User Management call to {0} failed. Partial results of {1} had the error: {2}
app.rum.failure.partial.results.missing.messages = Remote User Management returned partial results for the import action that are missing the required messages field
app.rum.failure.partial.results.missing.message.type = Remote User Management returned partial results for the import action that are missing the {0} message field
app.rum.failure.partial.results.invalid.user.count = Remote User Management call to {0} failed. The number of user messages downloaded does not match the number of user messages sent by the Remote User Management Script in the final result. Expected user messages={1}, Received user messages={2}, Expected users={3}, Received users={4}
app.rum.failure.partial.results.invalid.group.count = Remote User Management call to {0} failed. The number of group messages downloaded does not match the number of group messages sent by the Remote User Management Script in the final result. Expected group messages={1}, Received group messages={2}, Expected groups={3}, Received groups={4}
app.rum.failure.partial.results.invalid.schema.enum.values.count = Remote User Management call to {0} failed. The number of schema enum values messages downloaded does not match the number of schema enum values messages sent by the Remote User Management Script in the final result. Expected schema enum values messages={1}, Received schema enum values messages={2}, Expected schema enum values={3}, Received schema enum values={4}
app.rum.failure.partial.results.invalid.schema.count = Remote User Management call to {0} failed. The number of attribute messages downloaded does not match the number of attribute messages sent by the Remote User Management Script in the final result. Expected attribute messages={1}, Received attribute messages={2}, Expected attributes={3}, Received attributes={4}
app.rum.failure.partial.results.invalid.field.type = Remote User Management call to {0} failed. Expected the field {1} to be an integer but it was not.
app.rum.progress.groups = Importing Groups...
app.rum.progress.users = Importing Users...
app.rum.validation.error = Error during package validation: {0}
app.rum.validation.failure = Remote User Management package validation failed: {0}
app.rum.validation.failure.missing.file.content = Could not perform package validation because the validation record {0} was not found
app.rum.help.text.validation.failure = Help Text validation failed: {0}
app.rum.help.text.validation.failure.missing.file.content = Could not perform package help text validation because the help text validation record {0} was not found
app.rum.validation.failure.save.results = Remote User Management package validation was successful but failed to save the results: {0}
app.rum.validation.approve.source.status.failure = Cannot approve the source code for attempt id {0} when its status is {1}
app.rum.validation.delete.failure = Cannot delete the validation attempt id {0} when its status is {1}
app.rum.help.text.validation.delete.failure = Cannot delete the help text validation attempt id {0} when its status is {1}
app.rum.config.validation.error = Error validating instance configuration: {0}
app.rum.is.api.account.error = Error while making call to isApiAccount, the configured admin username is empty.
app.rum.failure.no.useridentification.name = Unable to find the user identification field name
app.rum.failure.no.useridentification.value = Unable to find the user identification value: {0}
app.rum.package.thrown.error = Errors during execution: {0}
app.rum.execution.security.exception = Security exception encountered: {0}
app.rum.execution.standard.attributes.exception = User object cannot have standard attributes in attributes map: {0}
app.rum.failure.download.schema.enum.values.missing.name = The schema enum value: {0} is missing the schemaAttributeName

# SCIM
app.scim.is.api.account.error = Error while making call to isApiAccount, the configured admin username is empty.

#
# User Assignment Help Text
#

# NetSuite
app.netsuite.user_assignment_help_text.title = Important!
app.netsuite.user_assignment_help_text.content = If no roles are selected, the user(s) will be created in Netsuite \
  but won't be able to log in. You will need to manually assign a role in Netsuite.

# GoodData
app.gooddata.user_assignment_help_text.title = User Roles
app.gooddata.user_assignment_help_text.content = User roles are project-specific. Only assign one user role per project.

# Test - User Management
app.test_app.user_assignment_help_text.title = How to enter a Test App username
app.test_app.user_assignment_help_text.content = Just do it!

#
# Partner related messages
#
core.partner.customer.company_name = {1} ({0})
core.partner.agent.internal_name = {0} agent in {1}
core.partner.agent.display_name=Agent for {0} in {1}

# Security errors
security.crypto.no_padding = Invalid padding for cipher
security.crypto.invalid_algo_param = Invalid algorithm parameters for cipher
security.crypto.no_such_algo = Invalid algorithm for cipher
security.crypto.illegal_block_size = Illegal block size
security.crypto.bad_padding = Invalid padding for decryption
security.crypto.no_such_provider = Provider not found for cipher
security.crypto.invalid_key = Invalid keys
security.crypto.message_too_large = Data is bigger than the block size
core.security.crypto.no_external_passphrase = No passphrase provided for external keystore secret
core.security.crypto.cipher_error = Could not generate cipher from keystore
core.security.crypto.no_symmetric_key = Could not get symmetric key from object
core.security.crypto.unknown_type = Unknown encryption type {1} for class {0}
core.security.crypto.encoding_error = Unsupported encoding exception
core.security.master_ks.key_not_found = Could not find master key {0} in master keystore
core.security.master_ks.no_active_master_keys = Requested encryption key, but no active master keys exists
core.security.master_ks.key_store_not_created = Master keystore does not exist
core.security.pki.new_ks_failed = Could not create new keystore
core.security.pki.new_cert_failed = Could not create new certificate
core.security.pki.new_csr_failed = Could not create new CSR
core.security.pki.new_secret_key_failed = Cannot initialize key generator (invalid algorithm)
core.security.pki.signature_failed = Signature attempt failed
core.security.pki.cert_encoding_failed = Encoding cert to base64 (PEM) failed
core.security.pki.key_store.load_failed = Could not load key store
core.security.pki.key_store.get_key_failed = Could not retrieve key {0}
core.security.pki.key_store.get_cert_failed = Could not retrieve certificate {0}
core.security.pki.key_store.get_cert_chain_failed = Could not retrieve certificate chain {0}
core.security.pki.key_store.rotate_key_pass_phrase_failed = Could not rotate key {0}
core.security.pki.cert_read_error = Could not read certificate
core.security.pki.cert_factory_error = Could not create certificate factory
core.security.pki.unsupported_keytype_validation = Cannot compare keys of this type

# Amazon AWS
app.amazon_aws.api.error.validate.creds = Could not verify the Amazon AWS IAM credentials; please make sure that the user has sufficient privileges.
app.amazon_aws.api.error.get.roles = Failed to get roles from Amazon AWS. {0}

# Moustache
moustache.error = Error processing template: {0}

# Server status stuff
framework.server.invalid_app_server_id = {0} is not a valid app server id for a {1} environment; did you forget \
  to set the APP_SERVER_ID environment variable?

# Human-friednly date format
date.format = EEE, MMM d ''at'' HH:mm z

# CPC properties validation
cpc.validation.properties.missing.properties = Missing the properties field
cpc.validation.properties.propertyName.duplicate = The property name {0} cannot be used more than once
cpc.validation.properties.propertyName.invalid = The property name {0} contains invalid characters
cpc.validation.properties.type.unsupported = The property {0} type value of {1} is unsupported
cpc.validation.properties.type.unknown = The property {0} type value of {1} is unknown
cpc.validation.properties.type.change = Cannot change the type of property {0} from {1} to {2}
cpc.validation.properties.mutability.unknown = The property {0} mutability value of {1} is unknown
cpc.validation.properties.minlength.invalid = The property {0} minLength value of {1} is invalid, it must be a positive integer
cpc.validation.properties.maxlength.invalid = The property {0} maxLength value of {1} is invalid, it must be a positive integer greater than 0
cpc.validation.properties.maxlength.incorrect = The property {0} maxLength value of {1} is incorrect, it must be a larger than the minLength value of {2}
cpc.validation.properties.length.invalid_type = The property {0} cannot have a minLength or maxLength value because it is not a string type
cpc.validation.properties.enum.no_values = The property {0} has no enum values
cpc.validation.properties.enum.values_wrong_type = The property {0} is not an enum type and cannot contain enum values
cpc.validation.properties.enum.dupe_values = The property {0} cannot contain duplicate enum values
cpc.validation.properties.pattern.invalid_type = The property {0} cannot have a pattern value because it is not a string type
cpc.validation.properties.pattern.invalid = The property {0} contains an invalid pattern
# CPC profiles validation
cpc.validation.profiles.missing.profile = Missing the profile field
cpc.validation.profiles.missing.schemas = Missing the schemas field
cpc.validation.profiles.schemas.not.array = Schemas field must be an array
cpc.validation.profiles.missing.schema = The profile contains a null schema
cpc.validation.profiles.missing.schema.name = Missing the profile schema name field
cpc.validation.profiles.missing.properties = The profile schema {0} is missing the properties field
cpc.validation.profiles.missing.schema.displayname = The profile schema {0} is missing the displayName field
cpc.validation.profiles.mappings.missing.mappings = Missing profile mappings
cpc.validation.profiles.mappings.unknown.type.name = The profile mappings contain {0} unknown mapping type names: {1}
cpc.validation.profiles.mappings.type.missing.properties = The profile mapping {0} does not contain any profile properties
cpc.validation.profiles.properties.duplicate.names = Profile schemas cannot include two properties with the name {0}
cpc.validation.profiles.properties.base.schema.invalid.attribute = The ''base'' schema cannot contain the attribute ''{0}''. The only valid ''base'' schema attributes are: {1}
cpc.validation.profiles.duplicate.schemas = Cannot include two schemas with the name {0}
cpc.validation.profiles.schemas.missing.base = Missing the required 'base' schema.
cpc.validation.profiles.properties.schema.invalid.attribute = The ''{0}'' schema cannot contain the attribute ''{1}''. The attributes that cannot be present in any schema are: {2}.
cpc.validation.profiles.properties.base.schema.missing.attribute = The ''base'' schema should contain the attribute ''{0}''. The attributes that are required for base schema are: {1}.
cpc.validation.auth.expression.evaluate.error = The expression ''{0}'' for field {1} could not be evaluated.

# Error messages
# Contains error messages coming from object validation
notUniqueWithinOrg=An object with this field already exists in the current organization
notUniqueWithinOrgAppId=An object with this field already assigned to this organization and application instance.
duplicateTokenName=That token name is already in use.
duplicateGaa=The app instance already exists in this group.
priorityNotUniqueWithinInstance=The app instance {0} already has a group assignment with priority {1}
invalidElExpressionInSignOnMode = Invalid EL expression ''{0}'' used in sign on mode definition
invalidVersionPromotion = Cannot create org overrides for a global default version.
missingOrUnknownReviewer = Must have a valid reviewer before making a version the global default across all orgs.
missingOrUnknownTicket = Must have a valid ticket before making a version the global default across all orgs.
promotionOfAppVersionNotBasedOnDefaultAppVersion = Can't promote app version because it's not based on the default app version.
mismatchedSignOnModeTypes = "The type of the sign on mode being edited {0} does not match the type of the sign on mode defintion {1}.
invalidFieldMappingRuleSubType = Incompatible subtype ''{0}'' for type ''{1}''
duplicateFieldMappingRuleName = Duplicate field mapping rule name. A rule already exists with the name ''{0}''
missingEnumValues = The Enum {0} does not have any values.
missingCustomTypeProperties = The Custom Type {0} does not have any properties.
missingEnumType = Referenced enum type name is not set in property {0}.
incompatibleEnumPropertyType = Referenced enum type name {0} can only be used with property type Enum.
unknownEnumType = Property refers to unknown enum {0}.
missingReferenceType = Referenced custom type name is not set in property {0}.
incompatibleReferencePropertyType = Referenced custom type name {0} can only be used with property type Reference.
unknownCustomType = Property refers to unknown custom type {0}.
limitedUDEditionsError = UD profile management is not allowed for {0} edition.
tooManyStringSetPropertyType = Only one property of {0} may have a type of String Set.
invalidCustomTypeReferenceDepth = Invalid custom type reference depth in Custom Type {0}. Depth of 1 allowed.
invalidPropertyMigration = Invalid property migration for property {0}: cannot change type from {1} to {2}
defaultTypeShouldBePresent=Cannot undefault this type. There should be one default type present.
orgNameInvalid = Org name is invalid.
appInstanceIdInvalid = App instance id is invalid.
invalidProfileId = Profile id is invalid.
cvdFeatureNotEnabled = CLOUD_DIRECTORY feature is not enabled.
almFeatureNotEnabled = CLOUD_DIRECTORY or ATTRIBUTE_LEVEL_MASTER feature is not enabled.
suspendedUserFeatureNotEnabled = SUSPENDED_USER_LIFECYCLE_STATE feature is not enabled.
invalid.saml.attribute.value.length = Invalid SAML attribute ''{0}'': value cannot be more than 100 characters.
invalid.saml.attribute.name.duplicate = Invalid SAML name ''{0}'': duplicate name
policy.mismatchedRule = Invalid rule type specified: {0}.
policy.mismatchedAction = Invalid action type specified: {0}.
policy.mismatchedCondition = Invalid condition type specified: {0}.
policy.readOnlyCondition = Condition {0} cannot be modified.
policy.mismatchedConditionProperty = Property not allowed on condition: {0} ({1}).
importMatchRule.noMatchRule.hasMatchConditions = Invalid import match rule: No match rule has match conditions.
importMatchRule.exactMatchRule.hasInvalidMatchConditions = Invalid import match rule: Exact match rule has invalid set of match conditions.
missingSignOnModeForGlobalDefault = Must have at least one sign on mode for a global default version.
missingSignOnMode = Must have at least one sign on mode
policy.readOnly.passwordHistory = "Enforce password history" cannot be enabled when the Authentication Provider is set to {0}.

# Error messages caused by utility method exceptions
HttpUtil.getStream=Upload error

# Generic Access Denied message
security.access_denied=You do not have permission to perform the requested action.
security.authentication_failed=Authentication failed.
security.mfa_required=Multifactor authentication is required.
security.access_denied_detailed=Access Denied: {0}({1})
security.invalid_session=Invalid Session.
security.invalid_token=Invalid Token.
apiEndpointDeprecated=The API endpoint has been deprecated.
tooManyRequests=Too many requests

# Errors specific to individual controllers (for now)
OrgSettingsController.validateLogoSize=Your selected image is {0}kB, which exceeds the {1}kB limit
OrgSettingsController.validateLogoDimensions.reading=Could not read image
OrgSettingsController.validateLogoDimensions.width=Your selected image is {0} pixels wide, which exceeds the {1} pixel limit
OrgSettingsController.validateLogoDimensions.height=Your selected image is {0} pixels high, which exceeds the {1} pixel limit
OrgSettingsController.invalidFilename=The filename is invalid or missing
OrgSettingsController.invalidFilenameLength=The filename length must be fewer than {0} characters
OrgSettingsController.missingExtension=The filename must include an extension
OrgSettingsController.invalidExtension=The filename extension {0} is not supported
LicenceAgreementController.alreadySigned=This agreement was already signed

api.files.certificate_missing=Certificate must be uploaded
api.files.certificate_upload=Upload Certificate
api.files.certificate_download=Download Certificate
api.files.invalid_filename=The filename is invalid or missing
api.files.invalid_target=The file target specified is invalid
api.files.invalid_type=The file type specified is invalid
api.files.error_saving_file=There was an error saving the file
api.files.x509Certificate=There was an error getting the x509 certificate
api.files.error_saving_file.unexpected=There was an unexpected error saving the file: {0}
api.files.error_retrieve_file=There was an error retrieving the file: {0}
api.files.certificate_error=There was an error reading the certificate file: {0}
api.files.certificate_uploaded=Certificate uploaded!
api.files.certificate_upload_failed=Certificate upload failed!
api.files.certificate_expires=Expires
api.files.certificate_issuer=Issuer

# Errors specific to individual fields
notGloballyUnique.form.orgName=An organization with this name already exists
notGloballyUnique.form.subDomain=An organization with this sub-domain already exists
notGloballyUnique.form.login=A user with this login already exists
notGloballyUnique.config.login=A user with this login already exists
doesNotMatchPattern.form.subDomain=Sub-domains can only contain letters, digits, '-', '_', and '.'
notSame.form.passwordVerify=Password fields do not match
invalidEmailAddress=This field must be in the form of an email address.
csvHeaderRowsDontMatch=The header row of your CSV must match the sample provided
csvTooManyRows=Your CSV exceeds the maximum number of allowed rows
csvParseError=Unable to parse your CSV file, please ensure that it is valid

# CVD bulk import csv errors
csv.validation.genericError=Failed to import CSV file: {0}
csv.validation.featureMissing=Please contact Okta customer support to enable bulk user import from CSV file
csv.validation.fileMissing=CSV file is missing. Please provide a CSV file
csv.validation.fileEmpty=CSV file is empty. Please provide a valid CSV file
csv.validation.maximumFileSizeExceeded=CSV file is too large. Make sure the file size does not exceed 10MB
job.bulk_user_import.rateLimit.exceeded={0} CSV user imports are already being processed. Please wait for one to finish before submitting another import.
csv.validation.template=Failed to download template
csv.validation.fileInvalid=Unable to parse ''{0}''. Please ensure that it is a valid CSV file
csv.validation.failedToRetrieveOktaUserSchema=Could not retrieve Okta user attributes
csv.validation.header.invalid=Invalid CSV header. Please ensure that the header is valid and contains valid Okta \
  user attributes
csv.validation.header.invalidAttribute=Invalid attribute in CSV header: {0}
csv.validation.header.emptyAttribute=Empty attribute found in header. Make sure the header does not contain redundant \
  commas
csv.validation.header.unsupportedAttributeType=Attribute ''{0}'' is of ''{1}'' type which is not supported
csv.validation.header.missingRequiredAttribute=Missing required attribute from CSV header: {0}
csv.validation.header.duplicateAttribute=Duplicate attribute found in CSV header: {0}
csv.validation.rows.missing=CSV file does not contain any users to update
csv.validation.rows.userLimitExceeded=CSV file should not contain more than 10,000 users
csv.validation.rows.failed=Failed to parse the rows in the CSV file
csv.validation.row.failedToUploadRow=Failed to upload row
csv.validation.row.unsupportedType={0}: type is not supported for bulk upload
csv.validation.row.invalidType={0}: value is not of type ''{1}''
csv.validation.row.invalidCountryCodeFormat=countryCode: must be two letters
csv.validation.row.missingAttribute=Row is missing the following attribute(s): {0}
csv.validation.row.missingRequiredAttributeValue=Row is missing a value for the following required attributes: {0}
csv.validation.row.extraAttributeValuesFound=Row contains extra attribute values: {0}
csv.validation.row.duplicate=Duplicate row encountered
csv.validation.row.noErrors=Success

# Group membership rules
groupMembershipRulesfeatureNotEnabled = GROUP_MEMBERSHIP_RULES is not enabled.
exprEvalOperationNotCondition = Expression evaluation operation is not a CONDITION.
exprEmpty = Expression to be evaluated is empty.
invalidExprType = Invalid expression type. Currently supported expression type is {0}.
errorEvaluatingExpr = Error in evaluating expression.
invalidTarget = Target with id {0} not found.

# Bulk import job messages
bulk.import.job.importError=Failed to bulk import users
bulk.import.job.status=Importing users...

# Org creation errors
noSelectedAppsForDirectoryIntegrationEdition=You must select at least one app for Directory Integration Edition

subdomainInvalid=The supplied subdomain is invalid. Allowed characters are A-Z, a-z, 0-9 and -

bigMachinesVerifyFailed= Could not verify the BigMachines administrator login and password; please confirm that these are set \
  correctly

centralDesktopVerifyFailed= Could not verify the CentralDesktop company API Key and Company GUID; please confirm that these are set \
  correctly

googleVerifyFailed=Could not verify the Google login and password or OAuth token; please confirm that these are set \
  correctly
gotomeetingVerifyFailed=Could not verify the GoToMeeting administrator login and password; please confirm that these are set \
  correctly
gotomeeting_restVerifyFailed=Could not verify the GoToMeeting session. Ensure you input correct credentials for OAuth token
msbposVerifyFailed=Oops, credentials check failed; please verify these are set correctly
sfdcVerifyFailed=Could not verify the Salesforce administrator login and password; please confirm that these are set \
  correctly
veevaVerifyFailed=Could not verify the Veeva administrator login and password; please confirm that these are set \
  correctly
postiniVerifyFailed=Could not verify the Postini administrator login, password, apiKey and system number; please confirm that these are set \
  correctly
zendeskVerifyFailed=Could not verify the Zendesk administrator login, password, and Auth Token; please confirm that these are set \
  correctly
jobscienceVerifyFailed=Could not verify the JobScience administrator login and password; please confirm that these are set \
  correctly
confluenceURLParsingFailed=Could not parse the Confluence URL; please confirm its format (e.g. https://acme.onconfluence.com)
confluenceLoginFailed=Could not verify the Confluence administrator login, password; please confirm that these are set correctly
jiraLoginFailed=Could not verify the Jira administrator login, password; please confirm that these are set correctly
sugarcrmLoginFailed=Could not verify the SugarCRM administrator login, password; please confirm that these are set correctly
office365VerifyFailed=Could not verify the Office 365 admin login and password; please confirm that these are set correctly
office365SetupFederationFailed=Could not setup the domain federation with Office 365; please retry setting up the federation for this domain after a few hours.
office365SetupFederationDomainNotFoundFailed=Could not setup the domain federation with Office 365; please specify a valid Office 365 domain.
office365SetupFederationAccessDeniedFailed=Could not setup the domain federation with Office 365; please confirm that the user has sufficient admin privileges and has been assigned a required role to perform the task.
office365RemoveFederationFailed=Could not remove the domain federation with Office 365; please retry removing the federation for this domain after a few hours.
office365RemoveFederationDomainNotFoundFailed=Could not remove the domain federation with Office 365; please specify a valid Office 365 domain.
office365RemoveFederationAccessDeniedFailed=Could not remove the domain federation with Office 365; please confirm that the user has sufficient admin privileges and has been assigned a required role to perform the task.
office365ConnectionFailure=Could not connect to the Office 365 servers. Please try again later.

workdayVerifyFailed=Could not verify the Workday api user, password, and endpoint; please confirm that these are set correctly.
workdayVerifyFailedEndpoint=Could not verify the Workday API endpoint.
workdayVerifyFailedCredentials=Incorrect username / password combination.
workdayVerifyFailedPermissions=User does not have the required permissions to use the API.
workdayCustomReportDefinitionUrlVerifyFailed=Failure getting valid data from custom report urls.
workdayCustomReportDefinitionBothUrl=Please fill in both "Custom Report Simple XML XSD URL" and "Custom Report JSON URL" to use custom attributes.

workdayCustomReportWorkdayIdNotFound=Need "Workday_ID" in custom reports.
workdayCustomReportNotXsdsUrl=Invalid value on Simple XML XSD URL.
workdayTerminationReasonValidationFailed=Termination Reasons is not a valid regex: {0}
workdayNoEmployeeIdPrompt=No Employee Id Prompt for WID found in custom reports.
workdayNullInResponse=Null in response from Workday.

app.api.verify.failed=Could not verify your credentials, please confirm they are correct and try again

app.boxnet.api.error.response=Could not connect to Box. {0}
app.boxnet.api.error.invalid_user_login=User login "{0}" is invalid. Must be in the form of "user@domain.com" and can not contain the characters / or \\
app.boxnet.api.error.check_user_exists_external=User {0} already exists on Box, but is not part of your Box Enterprise account. Contact Box to add this user to your Enterprise account.
app.boxnet.api.error.check_user_exists=Could not verify that the user exists. {0}
app.boxnet.api.error.transfer.files=Could not transfer files: {0}
app.boxnet.api.error.deactivate_user=Could not deactivate user. {0}
app.boxnet.api.error.reactivate_user=Could not reactivate user. {0}
app.boxnet.api.error.download.users=Could not download users. {0}
app.boxnet.api.error.create_new_user=Could not create new user. {0}
app.boxnet.api.error.push.profile.update=Could not push profile update. {0}
app.boxnet.api.error.import.user.profile=Could not import user profile. {0}
app.boxnet.api.error.download.groups=Could not download groups. {0}
app.boxnet.api.error.download.group_users=Could not download group users. {0}
app.boxnet.api.error.push.groups_set=Could not add user to specified groups. {0}
app.boxnet.api.error.push.remove_from_groups=Could not remove user from specified groups. {0}
app.boxnet.api.error.delete.group=Could not delete group. {0}
app.boxnet.api.error.create.group=Could not create group. {0}
app.boxnet.api.error.update.group=Could not update group. {0}
app.boxnet.api.error.validate_parent_folder=Could not validate parent folder "{0}". {1}
app.boxnet.api.error.create_personal_folder=In parent folder "{0}", could not create personal folder "{1}". {2}
app.boxnet.api.error.create_personal_folder.conflict=In parent folder "{0}", personal folder "{1}" already exists. Please manually assign folder permission to user. {2}
app.boxnet.api.error.assign_folder_permissions=In parent folder "{0}", could not assign folder permissions for personal folder "{1}". {2}
app.boxnet.api.error.personal_folder_name=Personal folder name "{0}" is invalid. Names must be 255 characters or less.  Names not supported by Box are those that contain non-printable ascii, / or \\, names with leading or trailing spaces and the special names "." and ".." (period or two periods)
app.boxnet.api.error.rate_limit_exceeded=Rate limit exceeded for Box. {0}

boxnetVerifyFailed=Could not verify Box's authentication token
boxnetVerifyFailedPermissions=User does not have the required permissions to use the API
boxnetVerifyFailedServiceUnavailable=Could not verify Box's authentication token. Please try again.
boxnetVerifyGeneral=Something went wrong. Please try again later.
boxnetVerifyFailedParentFolder=Could not verify the Box parent folder path. Please check the parent folder path and try again.
boxnetVerifyPersonalFolderCustomNameBadNames=The expression contains invalid characters. Names must be 255 characters or less.  Names not supported by Box are those that contain non-printable ascii, / or \\, names with leading or trailing spaces and the special names "." and ".." (period or two periods)
boxnetVerifyEmptyEmail=Please provide a service account email address.
boxnetVerifyValidServiceAccountUser=The specified service account user could not be found. Please provide a valid email address for a currently existing Box user.
boxnetVerifyActiveServiceAccountUser=The specified service account user is inactive. Please reactivate user or provide a different Box account emaill address.


docuSignVerifyFailedCredentials=Oops, API credentials check failed; please verify these are set correctly
echosignVerifyFailed=Could not verify the Echosign api key; please confirm that is is correct
netSuiteVerifyFailed=Could not verify the NetSuite credentials, please confirm that they are set correctly
successfactorsVerifyFailed=Could not verify the SuccessFactors username, password, and region; please confirm that these are set correctly
webexVerifyFailed=Could not verify the WebEx username and password; please confirm that these are set correctly. {0}
sendwordnowVerifyFailedCredentials=Could not verify the Send Word Now credentials. Please check these are set correctly.

yammerVerifyFailed=Could not connect to Yammer API, please check your Auth Token and Secret
coupaVerifyFailed=Could not connect to the Coupa API, please check your API Endpoint and Key

invalidUserName=Invalid User name.  Allowed characters are A-Z, a-z, 0-9 and _.
invalidEmail=User name must be in the form of an email address (e.g. bob@nowhere.com)
invalidFirsLastName=Invalid value.  Name can contain Alphanumeric characters, space and "."
app.webex.verify.failed=Could not verify the WebEx administrator login and password; please confirm that these are set \
  correctly

invalidUrl=A complete URL must be specified (e.g. <b>http://www.mycompany.com</b>)

settings.needsAtLeastOneLink=You must specify at least one link to appear on users' home pages
settings.notUniqueActiveAppInstanceLabelForTypeWithinOrg=An active {0} instance with the label "{1}" already exists.
apps.generic_app.no_protocols=You must select a sign-on mode to use for this application
apps.generic_app.sso_not_configureable=Single sign-on is not configurable for this application
apps.generic_app.sso_saml_no_cert=You must upload an encryption certificate to use SAML 2.0 as a Sign On Mode for this application
apps.generic_app.sso_saml_no_signature_cert=You must upload a signature certificate to use SAML 2.0 as a Sign On Mode for this application
apps.generic_app.swa_not_allowed_policy=Secure Web Authentication cannot be selected because there is a policy rule which requires re-authentication.

apps.generic_app.saml.enable_slo=Enable Single Logout
apps.generic_app.saml.ip.slo=Identity Provider Single Logout URL:
apps.generic_app.saml.slo=SAML Single Logout
apps.generic_app.saml.slo.enabled=Enabled
apps.generic_app.saml.slo.disabled=Disabled
apps.generic_app.saml.encryption_cert=Encryption Certificate
apps.generic_app.saml.iframe_not_supported=Cannot view/change certificate filename because your browser doesn't support frames.
apps.generic_app.saml.relayState=Please enter RelayState in the 'Default RelayState' field and not as part of the Single sign on URL

app.wizard.saml.enable_slo=Enable Single Logout
app.wizard.saml.enable_slo_tooltip=Enable SAML Single Logout.
app.wizard.saml.enable_slo_description=Allow application to initiate Single Logout
app.wizard.saml.slo_url=Single Logout URL
app.wizard.saml.slo_url_tooltip=The location where the logout response will be sent.
app.wizard.saml.slo_issuer_tooltip=The issuer for the service provider.
app.wizard.saml.signature_cert=Signature Certificate
app.wizard.saml.signature_cert_tooltip=Determines the public key certificate used to verify the digital signatures.

 # Test app settings
app.test_app.verify.failed = TEST APP VERIFY FAILED
test.generic.app.admin.pattern=Generic App Test: Admin does not follow pattern
test.generic.app.userName.pattern=Generic App Test: Username Does not follow pattern

app.google.userNamePatternError=Usernames should be in the form of an email and should include your Google domain name

edition.error.unsupported_sign_on_mode = {0} uses sign-on mode {1}
edition.error.user_management_enabled = {0} ({1}) has provisioning enabled
edition.error.app_admin = {0} ({1}) is an app admin - only super admins are allowed
edition.error.org_admin = {0} ({1}) is an org admin - only super admins are allowed
edition.error.custom_el_username = {0} ({1}) is an app with a custom el username
edition.error.user_limit_reached = Cannot create user.  Maximum number of users has been reached.
edition.error.app_limit_reached = Cannot create application instance. Maximum number of instances has been reached.
edition.error.import_app_user_limit_reached = Cannot complete import. Maximum number of {0} app users exceeded.
edition.error.import_app_group_limit_reached = Cannot complete import. Maximum number of {0} app groups exceeded.
edition.error.import_app_group_user_member_limit_reached = Cannot complete import. Maximum number of {0} app group members exceeded.
edition.error.import_custom_object_limit_reached = Cannot complete import. Maximum number of {0} custom objects exceeded.
edition.error.sms_in_use = Cannot remove SMS_SERVICE because it is in use as {0}.
edition.error.policy_framework_in_use = Cannot remove POLICY_FRAMEWORK because policy rules are configured.
edition.error.mfa_policy_in_use = Cannot remove MFA_POLICY because policy rules requiring multifactor are configured.

feature.error.validation_failed = Cannot toggle Feature: {0}

# Platform federated SSO errors
security.saml20.no_config=SAML 2.0 has not been configured
security.saml20.not_configured_for_sp_initiated_login=SAML 2.0 has not been configured properly.  The Identity Provider's Login URL was not specified.
security.saml20..signing_failed=Could not sign the SAML 2.0 request.  Most likely the signing certificate is no longer valid.
platform.partner.sso.unknown_protocol={0} does not match the request URI for a known protocol
security.saml20.no_saml_response=The incoming request did not have a SAMLResponse parameter
security.saml20.invalid_signature=The digital signature in the SAML response did not validate with the Identity Provider's certificate
security.saml20.insufficient_signature_algorithm=The digital signature algorithm used in the SAML response does not meet the minimum requirements. Required "{0}", but received "{1}".
security.saml20.no_signatures_present=The SAML response was not signed
security.saml20.unexpected_signature_location=The SAML response signature exists but is in the wrong location. Expected in "{0}", found in "{1}".
security.saml20.user_id_attribute_not_found=The SAML assertion did not contain the user id attribute {0}
security.saml20.no_attribute=The SAML assertion did not contain attribute "{0}"
security.saml20.no_value_for_attribute=The SAML assertion did not contain a value for attribute "{0}"
security.saml20.invalid_stored_credential=Could not load the Identity Provider's certificate
security.saml20.invalid_response=The incoming message is not a valid SAMLResponse
security.saml20.invalid_idp_certificate=The Identity Provider certificate is invalid
security.saml20.status_not_success=The status of the SAML response was not success
security.saml20.no_assertions=The SAML response contained no assertions
security.saml20.multiple_assertions=The SAML response contained multiple assertions
security.saml20.unable_to_decrypt_encrypted_assertion=Failed to decrypt encrypted assertion
security.saml20.response_issuer_does_not_match=The Issuer in the SAML response did not match the \
  Issuer configured for the Identity Provider.
security.saml20.response_in_response_to_does_not_match=The attribute InResponseTo {0} in the SAML response did not match any \
  SAML request id previously sent to the Identity Provider.
security.saml20.assertion_id_replayed=The SAML Assertion ID has been replayed.
security.saml20.assertion_issuer_does_not_match=The Issuer in the SAML assertion did not match the \
  Issuer configured for the Identity Provider.
security.saml20.assertion_subject_null=The SAML response does not have Subject in the assertion
security.saml20.assertion_issuer_format=The SAML Issuer format must be omitted or have the value 'urn:oasis:names:tc:SAML:2.0:nameid-format:entity'
security.saml20.subject_confirmation.invalid_method=The SAML response did not have at least one SubjectConfirmation element with a method of 'urn:oasis:names:tc:SAML:2.0:cm:bearer'
security.saml20.no_subject_confirmations=The SAML response did not have at least one SubjectConfirmation element
security.saml20.assertion_subject_nameid_null=The SAML response does not have NameId in the assertion
security.saml20.conditions.not_yet_active=The current time is before the time-range specified in the Assertion Conditions
security.saml20.conditions.expired=The current time is after the time-range specified in the Assertion Conditions
security.saml20.not_in_audience=The Identity Provider specified Conditions, but did not designate us \
  as the target for these conditions.  Found "{0}", expected "{1}"
security.saml20.missing_recipient=The recipient specified in the SubjectConfirmation did not match our \
  service provider entity id.  Found "{0}", expected "{1}"
security.saml20.subject_confirmation.not_yet_active=The current time is before the time range specified in the Assertion's SubjectConfirmationData
security.saml20.subject_confirmation.expired=The current time is after the time range specified in the Assertion's SubjectConfirmationData
security.saml20.not_a_response=The incoming message is a {0}, which is not a valid SAML Response
security.saml20.missing_response=The SAML Response is blank or missing
security.saml20.invalid_text=The incoming message could not be parsed
security.saml20.invalid_xml=The incoming message is not valid XML
security.pki.invalid_certificate=The uploaded certificate is not valid
security.pki.certificate_expired=The uploaded certificate has expired

# WS-Trust errors
security.wstrust.assertion_parse=Could not parse SAML assertion
security.wstrust.assertion_unmarshall=Could not unmarshall SAML assertion

notUniqueWithinOrg.partnerCustomer.externalId=Another customer is already registered with this alias
notUniqueWithinOrg.partnerCustomer.name=Another customer is already registered with this name

mfa.policy_config.acceptable_factors_missing=Multifactor authentication is enabled for your org, please select at least one acceptable factor
mfa.policy_config.acceptable_factors_missing_app_mfa=Multifactor authentication is enabled for at least one app sign on policy, please select at least one acceptable factor
mfa.policy_config.invalid_gateway_ip=Could not parse the given ip addresses, please verify that the format is correct
mfa.policy_config.vip.no_cert=You must upload a certificate to enable Symantec VIP.
mfa.policy_config.select_group=Please select a valid group

network.config.invalid_ips=Could not parse the given ip addresses, please verify that the format is correct

authfactor.generic.error.credentials_already_up_to_date=Credentials are already up to date.

authfactor.vip_factor.error=There was an error with Symantec VIP Authentication.  Contact your admin if this problem persists.
authfactor.vip_factor.error.cred_id_format=Credential ID should be alphanumeric and between 4 and 40 characters.
authfactor.vip_factor.error.cred_id_not_found=Credential ID not found
authfactor.vip_factor.error.security_code_format=The Security Code should be 6 digits.
authfactor.vip_factor.error.invalid_security_code=The Security Code did not match the expected value. Please try again.
authfactor.vip_factor.error.unsupported_cred_type=The VIP Service does not support this credential type
authfactor.vip_factor.error.vip_service_unavailable=The VIP Service is temporarily unavailable
authfactor.vip_factor.error.bad_cred_state=Bad Credential State
authfactor.vip_factor.error.jurisdiction_hash=The jurisdiction hash for this credential is empty or does not match your account
authfactor.vip_factor.error.disabled_cred=Operation not allowed on a disabled credential
authfactor.vip_factor.error.locked_cred=Operation not allowed on a locked credential
authfactor.vip_factor.error.new_cred=Operation not allowed on a new credential
authfactor.vip_factor.error.inactive_cred=Operation not allowed on an inactive credential
authfactor.vip_factor.error.revoked_cred=Credential ID has been revoked
authfactor.vip_factor.error.invalid_user=Invalid Symantec VIP username
authfactor.vip_factor.error.no_binding=No binding exists between user and credential
authfactor.vip_factor.error.invalid_user_status=Your Symantec VIP account is in invalid state

vip.upload.error=There was an error reading the key store that was uploaded.  Check the file and password and try again.
vip.upload.error.rejected=The certificate was not accepted by the Symantec VIP Service.

desktop_sso.invalid_validators_configuration=Invalid validators configuration
desktop_sso.iwa_sso_config.url_format_mismatch=Validation failed because not all IWA redirect URLs are correct. Example: http://iwaserver/IWA1
desktop_sso.iwa_sso_config.ip_format_mismatch=Validation failed because IP addresses entered are invalid.
desktop_sso.iwa_sso_config.version_mismatch=Validation failed because not all IWA versions have proper format. Example: 1.6.5
desktop_sso.iwa_sso_config.invalid_id=Could not find IWA SSO Configuration associated with provided id
desktop_sso.iwa_sso_config.invalid_priority=Validation failed because no Primary IWA Web Application detected
desktop_sso.iwa_sso_config.duplicated_name=Validation failed because IWA Web Application names are not unique
desktop_sso.iwa_sso_config.duplicated_url=Validation failed because IWA Web Application redirect URLs are not unique
desktop_sso.iwa_sso_config.blank_name=Validation failed because not all IWA Web Application names are set
desktop_sso.iwa_sso_config.blank_ips=Validation failed because gateway IPs list is blank
desktop_sso.iwa_sso_config.empty_network_zones=Validation failed because network zones list is empty
desktop_sso.iwa_sso_config.blank_global_redirect=Validation failed because the Global Redirect URL is not set
desktop_sso.iwa_sso_config.invalid_global_redirect=Validation failed because the Global Redirect URL is not valid

desktop_sso.iwa_sso_config.last_tested.never=Never
desktop_sso.iwa_sso_config.last_tested.no_ad_agent=None
desktop_sso.iwa_sso_config.last_tested.less_then_minute=Less then a minute ago
desktop_sso.iwa_sso_config.last_tested.minutes_ago={0} minute(s) ago
desktop_sso.iwa_sso_config.last_tested.hours_ago={0} hours(s) ago
desktop_sso.iwa_sso_config.default_offline_message=The IWA Agent is not responding
desktop_sso.iwa_sso_config.old_iwa_version=1.6.4 or older
desktop_sso.iwa_sso_config.status.unknown=No AD Agent could verify IWA SSO status
desktop_sso.iwa_sso_config.status.offline=IWA Agent is offline
desktop_sso.iwa_sso_config.status.backup=Backup IWA Agent
desktop_sso.iwa_sso_config.status.primary=Primary IWA Agent
desktop_sso.iwa_sso_config.redirect_url_changed=Redirect URL changed from {0} to {1}.
desktop_sso.iwa_sso_config.redirect_url_cannot_be_blank=Redirect URL cannot be blank.
desktop_sso.iwa_sso_config.name_changed=Name changed from {0} to {1}.
desktop_sso.iwa_sso_config.name_cannot_be_blank=Name cannot be blank.
desktop_sso.iwa_sso_config.invalid.zones=Invalid zones Json found.
desktop_sso.iwa_sso_config.status_changed=Status changed from {0} to {1}.
desktop_sso.iwa_sso_config.version_changed=Version changed from {0} to {1}.
desktop_sso.iwa_sso_config.agent_enabled=Agent enabled.
desktop_sso.iwa_sso_config.agent_disabled=Agent disabled.

# Inbound SAML forms
doesNotMatchPattern.UIInboundSAMLEndpointMediation.alias=Invalid alias, allowed characters are a-z (lowercase)
doesNotMatchPattern.ApiInboundSAMLEndpointMediation.alias=Invalid alias, allowed characters are a-z (lowercase)
doesNotMatchPattern.InboundSAMLTrust.name=Invalid name, allowed characters are a-z (lowercase)
updateInboundSAMLEndpointNameNotAllowed=Invalid name, updating existing name is not supported

# IDP messages
idp.error.name.required=The Identity Provider name is required.
idp.error.name.invalid=Invalid name, only alphanumeric characters are allowed.
idp.error.saml.metadata.download.idp.id=Could not find an Identity Provider with the specified id.
idp.error.client_id.empty=Client Id cannot be empty
idp.error.client_secret.empty=Client Secret cannot be empty
idp.error.status.invalid=The Identity Provider has an invalid status.

# IDP Admin UI messages
idp.config.name=Name
idp.config.type=Type
idp.config.add_facebook=Add Facebook
idp.config.add_google=Add Google
idp.config.add_linkedin=Add LinkedIn
idp.config.add_microsoft=Add Microsoft
idp.config.add_saml=Add SAML 2.0 IdP
idp.config.accountMode=Account Mode
idp.config.profileMaster=Profile Master
idp.config.protocolType=Protocol
idp.config.groups=Groups
idp.config.managing.groups=This IdP is managing users in the following groups:
idp.config.add=Add Identity Provider
idp.config.downloadOktaCertificate=Download Okta Certificate
idp.config.edit=Edit Identity Provider
idp.config.update=Update Identity Provider
idp.config.delete=Delete Identity Provider
idp.config.delete.confirmation=Are you sure you want to delete Identity Provider {0}?
idp.config.delete.error=Could not delete the selected Identity Provider {0}.
idp.config.dialog.name=Name
idp.config.dialog.idpType=Type
idp.config.dialog.idp.transform_expression=Transformation Expression
idp.config.dialog.usernameTransform=Transform username
idp.config.dialog.usernameTransformHelpText=Specifies how to construct the subject's username from the SAML assertion using an Okta Expression Language transform of attributes defined in the IdP User Profile.
idp.config.dialog.socialUsernameTransformHelpText=Specifies how to construct the subject's username using an Okta Expression Language transform of attributes defined in the Idp User Profile.
idp.config.dialog.usernameMatchRule=Authenticate if username matches
idp.config.dialog.usernameMatchCriteria=Username Matching Criteria
idp.config.dialog.usernameMatchRuleHelpText=Specifies what attribute(s) of existing users in Okta are compared to the transformed username to determine whether the authentication response is for a new or existing user. Choose the user attribute to match against the transformed username.
idp.config.dialog.noMatchFound=If no match is found
idp.config.dialog.noMatchFoundHelpText=Specifies the action for authentication responses that do not match an existing user in the Okta organization.
idp.config.dialog.usernameFilter=Filter username
idp.config.dialog.usernameFilterHelpText=Optional regular expression pattern used to filter transformed usernames to prevent the IdP from authenticating unintended or privileged users.
idp.config.dialog.usernameFilterPatternExplainText=Users will only be authenticated if transform username matches the regular expression pattern
idp.config.dialog.idpSettings.social=Social Provider Settings
idp.config.dialog.idpSettings.saml=SAML Protocol Settings
idp.config.dialog.idpSettings.authenticationSettings=Authentication Settings
idp.config.dialog.idpSettings.provisioningSettings=Provisioning Settings
idp.config.dialog.idpSettings.jitSettings=JIT Settings
idp.config.dialog.credentialsSettings=Credentials Settings
idp.config.dialog.credentials.client_id=Client Id
idp.config.dialog.protocolSettings=Protocols
idp.config.dialog.scopes=Scopes
idp.config.dialog.scopes_tool_tip=OAuth scopes to request from the social IdP
idp.config.dialog.scopes_help={0} Scopes
idp.config.dialog.callout=Callout
idp.config.dialog.disabled=Disabled
idp.config.dialog.automatic=Automatic
idp.config.dialog.jit_policy=Provisioning Policy
idp.config.dialog.jit_callout_url=Provisioning Callout URI
idp.config.dialog.jit_callout_binding=Provisioning Callout Binding
idp.config.dialog.jit_callout_help_text=Specifies whether JIT creation of users should be automatic, disabled, or delegated out to an external application
idp.config.dialog.account_link_action=Account Link Policy
idp.config.dialog.account_link_help_text=Specifies whether account linking should be automatic or delegated out to an external application
idp.config.dialog.account_link_url=Account Link Callout URI
idp.config.dialog.account_link_binding=Account Link Callout Binding
idp.config.dialog.account_link_group_options=Auto-Link Restrictions
idp.config.dialog.account_link.group_assignments_help_text=Restrict auto-linking based on whether the Okta user is a member of any of the specified groups
idp.config.dialog.additional_auth_params=Additional Auth Params
idp.config.dialog.authorization_binding=Authorization URL Binding
idp.config.dialog.authorization_url=Authorization URL
idp.config.dialog.credentials.client_secret=Client Secret
idp.config.dialog.token_binding=Token URL Binding
idp.config.dialog.token_url=Token URL
idp.config.dialog.socialsettings.title={0} Settings
idp.config.dialog.idpSettings.saml.issuer=IdP Issuer URI
idp.config.dialog.idpSettings.saml.issuerHelpText=Issuer URI of the Identity Provider.  This value is usually the SAML Metadata EntityID of the IdP EntityDescriptor.
idp.config.dialog.idpSettings.saml.loginUrl=IdP Single Sign-On URL
idp.config.dialog.idpSettings.saml.loginUrlHelpText=The binding-specific IdP Authentication Request Protocol endpoint that receives SAML AuthnRequest messages from Okta.
idp.config.dialog.idpSettings.saml.logoutUrl=IdP Logout URL
idp.config.dialog.idpSettings.saml.audience=Audience
idp.config.dialog.idpSettings.saml.signAuthnRequest=Request Signature
idp.config.dialog.idpSettings.saml.signAuthnRequestHelpText=Specifies whether to sign SAML AuthnRequest messages that are sent from Okta.
idp.config.dialog.idpSettings.saml.httpBinding=Request Binding
idp.config.dialog.idpSettings.saml.destination=Destination
idp.config.dialog.idpSettings.saml.destinationHelpText=The value of the destination in the SAML Authentication Request. Leave it empty to exclude it.
idp.config.dialog.idpSettings.saml.httpBindingHelpText=The SAML Authentication Request Protocol binding used by Okta to send SAML AuthnRequest messages to the IdP.
idp.config.dialog.idpSettings.saml.requestSignatureAlgorithm=Request Signature Algorithm
idp.config.dialog.idpSettings.saml.requestSignatureAlgorithmHelpText=Specifies the signature algorithm used to sign SAML AuthnRequest messages sent to the IdP.
idp.config.dialog.idpSettings.saml.responseSignatureAlgorithm=Response Signature Algorithm
idp.config.dialog.idpSettings.saml.responseSignatureAlgorithmHelpText=Specifies the minumum signature algorithm when validating SAML assertions issued by the IdP.
idp.config.dialog.idpSettings.saml.responseSignatureScope=Response Signature Verification
idp.config.dialog.idpSettings.saml.responseSignatureScopeHelpText=Specifies the required signatures when validating SAML assertions issued by the IdP.
idp.config.dialog.idpSettings.saml.maxClockSkew=Max Clock Skew
idp.config.dialog.idpSettings.saml.maxClockSkewHelpText=The maximum clock skew used to validate the SubjectConfirmationData NotOnOrAfter condition of assertions issued by the IdP.
idp.config.dialog.idpSettings.saml.acsUrlPreference=Okta Assertion Consumer Service URL
idp.config.dialog.idpSettings.saml.acsUrlPreferenceHelpText=Specifies whether to use a trust-specific assertion consumer service URL or one that is shared across the organization.
idp.config.dialog.jitSettings.redirectOktaSignin=Redirect to Okta sign-in page
idp.config.dialog.jitSettings.createUsers=Create new user (JIT)
idp.config.dialog.jitSettings.groupPolicy=Group Policy
idp.config.dialog.jitSettings.groupAttributeName=SAML Attribute Name
idp.config.dialog.jitSettings.groupAttributeNameHelpText=The name of a SAML attribute in assertions from the IdP whose values represent group memberships.  The attribute values are compared to the Group Filter whitelist and matching values will result in a group assignment for the user during JIT.
idp.config.dialog.jitSettings.groupAssignmentSettings=Group Assignments
idp.config.dialog.jitSettings.groupAssignmentSettingsHelpText=Specifies the behavior of group assignments during provisioning.
idp.config.dialog.jitSettings.groupFilter=Group Filter
idp.config.dialog.jitSettings.groupFilterHelpText=Security whitelist that determines which groups the IdP can dynamically assign to users to prevent the IdP from assigning unintended or privileged groups in your Okta organization.
idp.config.dialog.jitSettings.groupFilterExplain=Select which groups the Idp is allowed to manage.
idp.config.dialog.jitSettings.none=None
idp.config.dialog.jitSettings.append=Add user to missing groups
idp.config.dialog.jitSettings.sync=Full sync of groups
idp.config.dialog.jitSettings.specificGroups=Assign to specific groups
idp.config.dialog.groupAssignments=Specific Groups
idp.config.dialog.setAsProfileMaster=Profile Master
idp.config.dialog.setAsProfileMasterHelpText=Determines if the IdP should act as a source of truth for user profile attributes.  The IdP must be priortized with other Profile Masters if the user is assigned to additional apps or directories that are also Profile Masters.  See Profile Mastering documenation for more information.
idp.config.dialog.updateAttributes=Update attributes for existing users
idp.config.dialog.signAuthnRequest=Sign SAML Authentication Requests
idp.config.dialog.response=Response
idp.config.dialog.assertion=Assertion
idp.config.dialog.responseOrAssertion=Response or Assertion
idp.config.dialog.sha1=SHA-1
idp.config.dialog.sha256=SHA-256
idp.config.dialog.instance=Trust-specific
idp.config.dialog.org=Organization (shared)

idp.config.dialog.file.uploaderHelpText=The PEM or DER encoded public key certificate of the Identity Provider used to verify SAML message and assertion signatures.
idp.config.dialog.file.uploaderText=IdP Signature Certificate
idp.config.dialog.learnMore=Expression Language Documentation
idp.config.dialog.allowUsernames=Only allow usernames that match defined RegEx Pattern
idp.config.dialog.defaultIdp=Default IdP
idp.config.dialog.enterExpression=Enter expression or pick from list...
idp.config.dialog.idpSettings.saml.chooseUserAttribute=Choose the user attribute to match against the transformed username.

idp.config.activate.failed=The Identity Provider could not be activated.
idp.config.deactivate.failed=The Identity Provider could not be deactivated.
idp.config.configure=Configure
idp.config.configure.idp=Configure Identity Provider

idp.config.dialog.idpsettings.username=Okta Username
idp.config.dialog.idpsettings.email=Email
idp.config.dialog.idpsettings.usernameOrEmail=Okta Username or Email

idp.config.download.metadata=Download metadata
idp.config.audience.uri=Audience URI
idp.config.assertion.consumer.service=Assertion Consumer Service URL
idp.config.saml.metadata.file=SAML metadata
idp.config.saml.saml20=SAML 2.0
idp.config.saml.samlCreateExplain=Uses the SAML protocol to log users into the app. This is a better option than SWA, if the app supports it.

idp.config.clientRedirectUri.href=Redirect URI
idp.config.authorize.href=Authorize URL
idp.setup={0} is not configured until you complete the setup instructions.
idp.viewSetupHelp=View Setup Instructions

idp.config.active=Active
idp.config.inactive=Inactive
idp.config.activate=Activate
idp.config.deactivate=Deactivate

idp.config.generalSettings=General Settings

idp.config.oidc.oidc=OpenID Connect
idp.config.oidc.oidcCreateExplain=Uses the OpenID Connect protocol to log users into an app you've built.
idp.config.oidc.wizard.title.create=Create OpenID Connect Integration
idp.config.oidc.wizard.appName=Application Name
idp.config.oidc.wizard.appType=Application Type
idp.config.oidc.wizard.appType.web=Web
idp.config.oidc.wizard.appType.browser=Single Page App (SPA)
idp.config.oidc.wizard.appType.native=Native
idp.config.oidc.wizard.appLogo=Application Logo
idp.config.oidc.wizard.redirectUris=Redirect URIs
idp.config.oidc.wizard.redirectUrisHelpText=URI where Okta will send OAuth responses.
idp.config.oidc.wizard.optional=(Optional)
idp.config.oidc.configure=Configure OpenID Connect
idp.config.oidc.wizard.addAnother=Add Another
idp.config.oidc.enterUri=Enter a URI

idp.config.oidc.infoboxHelp=Certain apps may require additional configuration by Okta support. If you need help with this integration, contact Okta support at support@okta.com
idp.config.oidc.logoPart1=The image must
idp.config.oidc.logoPart2=Be a png, jpg, or gif file.
idp.config.oidc.logoPart3=Have dimensions less than 1400x400px.
idp.config.oidc.logoPart4=Be less than 100k in size.

idp.config.oidc.oauthClientId=Client ID
idp.config.oidc.oauthClientSecret=Client Secret
idp.config.oidc.oauthClientIdHelpText=Public identifier for the client that is required for all OAuth flows.
idp.config.oidc.oauthClientSecretHelpText=Secret used by the client to exchange an authorization code for a token. This must be kept confidential! Do not include it in apps which cannot keep it secret, such as those running on a client.
idp.config.oidc.tokenAuthMethod=Client Authentication
idp.config.oidc.tokenAuthMethod.PKCE=Proof Key for Code Exchange (PKCE)
idp.config.oidc.tokenAuthMethod.secret=Client Secret
idp.config.oidc.tokenAuthMethod.PKCEText=Require a proof-of-possession key ("code verifier") when redeeming an authorization code grant for an access token.
idp.config.oidc.tokenAuthMethod.secretText=PKCE is stronger mechanism for binding the authorization code to the client than just client secret and prevents code interception for native applications.
idp.config.oidc.removeOpenIdConnect=Remove OpenID Connect

idp.config.oidc.error.redirect_urls_invalid=Invalid URIs.

idp.config.oidc.settings=OAuth 2.0 Settings
idp.config.oidc.settings.allowedGrantTypes=Allowed Grant Types
idp.config.oidc.settings.allowedGrantTypes.code=Authorization Code
idp.config.oidc.settings.allowedGrantTypes.implicit=Implicit
idp.config.oidc.settings.allowedGrantTypes.password=Password
idp.config.oidc.settings.allowedGrantTypes.refreshToken=Refresh Token
idp.config.oidc.settings.redirectUris=Redirect URIs
idp.config.oidc.settings.claims=Claims
idp.config.oidc.settings.groupClaim=Groups Claim
idp.config.oidc.settings.groupClaim.helpText=Filters the list of Okta group memberships sent as a user's "Groups" claim.
idp.config.oidc.settings.groupClaim.startsWith=Starts With
idp.config.oidc.settings.groupClaim.equals=Equals
idp.config.oidc.settings.groupClaim.contains=Contains
idp.config.oidc.settings.groupClaim.regex=Regex
idp.config.oidc.settings.clientCredentials=Client Credentials
idp.config.oidc.settings.clientSecretRegenerated=New Client Secret Generated!
idp.config.oidc.settings.generateClientSecret=Generate New Client Secret
idp.config.oidc.settings.enterAUri=Enter a URI
idp.config.oidc.settings.addRedirectUri=Add URI
idp.config.oidc.settings.removeRedirectUri=Delete
idp.config.oidc.settings.loginInitiatedBy=Login Initiated By
idp.config.oidc.settings.loginInitiatedBy.app=App Only
idp.config.oidc.settings.loginInitiatedBy.oktaOrApp=Either Okta or App
idp.config.oidc.settings.loginFlow=Login Flow
idp.config.oidc.settings.loginFlow.oidcSpec=Redirect to app to initiate login (OIDC Compliant)
idp.config.oidc.settings.loginFlow.oktaRecommended=Send ID Token directly to app (Okta Simplified)
idp.config.oidc.settings.appVisibility=Application Visibility
idp.config.oidc.settings.appVisibility.web=Display application icon to users
idp.config.oidc.settings.appVisibility.mobile=Display application icon in the Okta Mobile app
idp.config.oidc.settings.initiateLoginUri=Initiate Login URI
idp.config.oidc.settings.scopes=Scopes
idp.config.oidc.settings.scopes.profile=Profile
idp.config.oidc.settings.scopes.email=Email
idp.config.oidc.settings.scopes.address=Address
idp.config.oidc.settings.scopes.phone=Phone
idp.config.oidc.settings.scopes.groups=Groups
idp.config.oidc.settings.none=None
idp.config.oidc.settings.allowPasswordHelpText=Determines if the client can authenticate with resource owner password credentials. Only use this if other options are not available.
idp.config.error.provisioning_and_linking_disabled=The Provisioning Policy and Account Link Policy cannot both be disabled.
idp.config.oidc.settings.keyRotation=Automatic Signing Key Rotation
idp.config.oidc.settings.keyRotation.helpText=If you disable this setting, it is strongly recommended that you change the signing key periodically through the API.
idp.config.oidc.settings.keyRotation.disabled=Disabled
idp.config.oidc.settings.keyRotation.enabled=Enabled

# IDP API messages
idp.attribute.name.required=The IDP instance name is required.
idp.attribute.issuer.required=The IDP issuer is required.
idp.attribute.username.template.required=The username transform is required.
idp.attribute.user.matchtype.required=The user match type is required.
idp.attribute.name.immutable=The IDP instance name cannot be changed.
idp.error.duplicate.name=There is already an IDP instance with the same name.
idp.error.missing_endpoints=The protocol.endpoints object cannot be left blank.
idp.error.missing_endpoint=The protocol.endpoints.sso object cannot be left blank.
idp.error.missing_url_or_binding=The {0} object must have a url and binding.
idp.error.missing_url=The {0} object must have a url.
idp.error.missing_credentials=The protocol.credentials object cannot be left blank.
idp.error.missing_trust=The protocol.credentials.trust object cannot be left blank.
idp.error.missing_format=The policy.subject.format object cannot be left blank.
idp.error.missing_provisioning_action=The policy.provisioning.action object cannot be left blank.
idp.error.invalid_provisioning_action=The policy.provisioning.action object does not support the value CALLOUT.
idp.error.missing_algorithms=The protocol.algorithms object cannot be left blank.
idp.error.invalid_groups_action=The provisioning.groups.action object was invalid for this IDP type.
idp.error.client_credentials=The protocol.credentials.client.client_id and protocol.credentials.client.client_secret cannot be left blank.
idp.error.auth_params_serialization=The protocol.endpoints.authorization.params could not be serialized.
idp.error.callout_auth_scheme.basic=The BASIC authorization scheme requires the 'username' and 'password' attributes.
idp.error.callout_auth_scheme.bearer=The BEARER authorization scheme requires the 'token' attribute.
idp.error.callout_auth_scheme.not_set=The callout authorization scheme must be one of ['basic', 'bearer', 'custom'].
idp.error.callout_auth_scheme.serialization=The {0} callout authorization data could not be serialized.
idp.error.usernameFilter.invalid=The username filter is not a valid regular expression.
idp.error.group.not.found=The specified group id was not found: {0}.
idp.error.cert.notFound=Could not find IDP certificate with kid={0}.
idp.error.account.mode=The account mode must be "JIT" when profile mastering is enabled.
idp.error.cert.invalid.parameter=The IDP certificate JWK has an invalid {0}.
idp.error.cert.x5c.required=The IDP certificate JWK must have the x5c certificate chain.
idp.error.cert.x5c.expired==The IDP certificate JWK has an expired certificate.
idp.attribute.idpSettings.required=The IDP settings cannot be null.
idp.error.type.invalid_type=The IDP has an invalid type.
idp.error.validation.usernameTemplate=Invalid username transform.
idp.error.code.social_transaction_wrong_state=This operation is not allowed because the transaction is in the {0} state.
idp.error.acsPreferenceInvalidWithNonuniqueIssuer = Unable to use the shared Assertion Consumer Service URL because another trust has the same Issuer URI.
idp.error.nonuniqueIssuerBreaksSharedAcsForAnotherEndpoint = Another trust has the same Issuer URI and relies on its uniqueness for the organization-wide assertion consumer URL.
idp.error.provisioning_and_linking_disabled=The policy.provisioning.action and policy.accountLink.action cannot both have the value DISABLED.


# IDP Settings messages
idp.settings.title=Identity Provider Settings
idp.settings.authentication.title=Authentication
idp.settings.authentication.defaultIdp.title=Default Identity Provider for SP-Initiated SAML.
idp.settings.defaultIdp=Default Identity Provider
idp.settings.defaultIdp.explainText=All unauthenticated users will be redirected to this endpoint for authentication.
idp.settings.sso.customErrorPage=Login Error Page
idp.settings.sso.useDefaultErrorPage=Use the default Okta error page
idp.settings.sso.useCustomErrorPage=Use a custom error page
idp.settings.sso.redirectUrl=Error Page URL

#### IDP Error Messages ###
# OAuth 2.0 Spec Error Codes
idp.error.code.unauthorized_client=The client is not authorized to request an authorization code using this method.
idp.error.code.access_denied=The resource owner or authorization server denied the request.
idp.error.code.unsupported_response_type=The authorization server does not support obtaining an authorization code using this method.
idp.error.code.unsupported_response_mode=The authorization server does not support the requested response mode.
idp.error.code.invalid_scope=The requested scope is invalid, unknown, or malformed.
idp.error.code.server_error=The authorization server encountered an unexpected condition that prevented it from fulfilling the request.
idp.error.code.temporarily_unavailable=The authorization server is currently unable to handle the request due to a temporary overloading or maintenance of the server.
idp.error.code.invalid_client=Invalid client
idp.error.code.invalid_token=The token is invalid.
idp.error.code.invalid_grant=Invalid grant
idp.error.code.invalid_request=Invalid request
# OpenID
idp.error.code.login_required=The client specified not to prompt, but the user is not logged in.
idp.error.code.insufficient_scope=The access token does not provide the required scopes.
# General OAuth Validation
idp.error.code.feature_not_enabled=The requested feature is not enabled in this environment.
idp.error.code.missing_client_credentials=No client credentials found.
idp.error.code.multiple_client_credentials=Cannot supply client credentials in both the Authentication header and the request-body.
idp.error.code.invalid_basic_auth_creds=Found Authentication header but was not valid client credentials.
# Authorize/Token Endpoint
idp.error.code.invalid_client_id=Invalid value for 'client_id' parameter.
idp.error.code.unknown_idp=Identity provider is not valid
idp.error.code.illegal_redirect_uri=Illegal value for 'redirect_uri' parameter.
idp.error.code.invalid_client_id_redirect_uri_response_type=Invalid combination of client-id, redirect-url and response-type
idp.error.code.invalid_state=The authentication request has an invalid 'state' parameter.
idp.error.code.invalid_nonce=The authentication request has an invalid 'nonce' parameter.
idp.error.code.invalid_prompt=Invalid value for 'prompt' parameter.
idp.error.code.pkce_missing_challenge=PKCE code challenge is required when the token endpoint authentication method is NONE.
idp.error.code.pkce_missing_verifier=PKCE code verifier is required when the token endpoint authentication method is NONE.
idp.error.code.pkce_verification_failed=PKCE verification failed.
idp.error.code.pkce_unsupported_code_challenge_method=PKCE code challenge method is not supported.
idp.error.code.id_token_not_created=Failed to create the id_token.
idp.error.code.no_existing_session=Client specified prompt=none but had no existing session.
idp.error.code.user_not_assigned=User is not assigned to the client application.
# UserInfo
idp.error.code.access_token_missing=The access token is missing.
idp.error.code.access_token_in_query=The access token cannot be presented in a query string.
idp.error.code.access_token_duplicate=The access token cannot be specified in both the Authorization header and the request-body.
idp.error.code.insufficient_scope_openid=The access token must provide access to openid scope.
# Social Auth
idp.error.code.invalid_social_state=The social identity provider returned an invalid state back to Okta.
idp.error.code.get_social_profile_error=Could not fetch social profile.
idp.error.code.social_transaction_expired=Social transaction expired.
idp.error.code.failed_username_transform=Unable to process the username transform.
idp.error.code.user_match_error=Could not match social profile to an Okta user.
idp.error.code.user_link_error=Error in linking or finding a linked user.
idp.error.code.invalid_user_status_error=User status is invalid.
idp.error.code.login_failed=Login failed.
idp.error.code.jit_disabled=User creation was disabled.
idp.error.code.jit_denied=User creation was denied by the callout service.
idp.error.code.link_disabled=User linking was disabled.
idp.error.code.link_denied_group=User linking was denied because the user is not in any of the specified groups.
idp.error.code.link_denied_callout=User linking was denied by the callout service.
idp.error.code.mismatched_user_in_cache_and_session=Invalid session.
idp.error.code.invalid_social_token=Could not acquire access token from authorization code.
idp.error.code.invalid_callout_response=The callout service returned an invalid response.
idp.error.code.invalid_cache_key=Invalid value for the 'okta_key' parameter passed to the server.
idp.error.code.user_canceled_request=User canceled the social login request.
# OIDC Sign On
idp.error.code.idp_initated_flow_disabled=IdP-initiated login is disabled for this client.
idp.error.code.missing_initiate_login_uri=initiate_login_uri is missing.
idp.error.code.missing_redirect_uri=redirect_uri is missing.
# OAuth/OIDC Tokens Service
idp.error.code.access_token_invalid=The access token is invalid.
idp.error.code.access_token_expired=The access token has expired.
idp.error.code.access_token_revoked=The access token has been revoked.
idp.error.code.access_token_timestamp_invalid=The access token timestamp is invalid.
idp.error.code.id_token_invalid=The id token is invalid.

#TODO: delete this message in OKTA-73519
idp.error.code.internal_schema_error=Encountered an error while bootstrapping the Identity Provider.
##### Deprecated, remove in the future ######
idp.error.code.invalid_client_credentials=Invalid client credentials.
idp.error.code.pre_req_features_not_enabled=Required features are not enabled for this functionality.
#############################################

# rightscale messages
RightscaleVerifyFailed=Could not verify the Rightscale api username, password and id; please confirm that these are set \
  correctly
app.rightscale.api.error.validate=Failed to validate Rightscale API credentials
app.rightscale.api.error.download.groups=Failed to download group information from Rightscale
app.rightscale.api.error.push.profile=Failed to push user profile to Rightscale. {0}
app.rightscale.api.error.create.user=Failed to create new user in Rightscale. {0}
app.rightscale.api.error.get.users=Failed to download users from Rightscale. {0}
app.rightscale.api.error.login=Failed to login to Rightscale. {0}
app.rightscale.api.error.download.users=Failed to download users from Rightscale. {0}
app.rightscale.api.error.idp=Failed to find okta in the list of IDPs from Rightscale. Instead, using {0}

#
# Dropbox
#
dropboxVerifyFailed=Could not connect to Dropbox API, please check your OAuth Token and Secret. {0}
app.dropbox.api.error.validation=Unable to validate Dropbox API configuration. {0}
app.dropbox.api.error.check.user=Unable to check for user on Dropbox. {0}
app.dropbox.api.error.download.users=Unable to download Dropbox users. {0}
app.dropbox.api.error.import.profile=Unable to import user profile from Dropbox. Note that this feature will not work for users who are only INVITED.
app.dropbox.api.error.push.profile=Unable to push user profile to Dropbox. {0}
app.dropbox.api.error.deactivation=Unable to deactivate Dropbox user. {0}
app.dropbox.api.error.create.user=Unable to create Dropbox user. {0}
app.dropbox.api.error.push.password.update=Unable to update password for the given Dropbox user. Note that this feature will not work for users who are only INVITED. {0}
app.dropbox.api.error.query=Unable to query Dropbox API. {0}
app.dropbox.api.error.rateLimit.exceeded=Rate limit exceeded for Dropbox. {0}
app.dropbox.api.error.set.user.permissions=Unable to set permissions for user {0}:{1}

app.dropbox.api.message.email.in.use=Email is already reserved for another user
app.dropbox.api.message.group.already.deleted=This group has been deleted
app.dropbox.api.message.group.already.exists=Group with such name already exists
app.dropbox.api.message.set.profile.disallows=User is in the "invited" state. A user profile cannot be edited until the user is in the "active" state
app.dropbox.api.message.user.not.on.team=User does not exist or not yet activated
app.dropbox.api.message.user.not.on.this.team=The provided email address is associated with a user that is already a member of or invited to another team
app.dropbox.api.message.user.on.another.team=User is already on another team. The provided email address is associated with a user that is already a member of or invited to another team
app.dropbox.api.message.user.already.on.team=The provided email address is associated with a user who is already a member of or invited to the team
app.dropbox.api.message.team.licence.limit=The Dropbox for Business organization has no available licenses
app.dropbox.api.message.remove.last.admin=Cannot remove the admin permission of the last admin

#
# HipChat
#
hipchatVerifyFailed=Could not connect to Hipchat API, please check your API Token
app.hipchat.api.error.validation=Unable to validate Hipchat API configuration. {0}
app.hipchat.api.error.check.user=Unable to check for user on Hipchat. {0}
app.hipchat.api.error.download.users=Unable to download Hipchat users. {0}
app.hipchat.api.error.import.profile=Unable to import user profile from Hipchat. {0}
app.hipchat.api.error.push.profile=Unable to push user profile to Hipchat. {0}
app.hipchat.api.error.deactivation=Unable to deactivate Hipchat user. {0}
app.hipchat.api.error.reactivation=Unable to reactivate Hipchat user. {0}
app.hipchat.api.error.create.user=Unable to create Hipchat user. {0}
app.hipchat.api.error.push.password=Unable to update password for the given Hipchat user. {0}
app.hipchat.api.error.query=Unable to query Hipchat API. {0}
app.hipchat.rateLimit.exceeded=Rate limit exceeded for Hipchat {0}

#
# VeevaVault
#
veevaVaultLoginFailed=Could not verify the Veeva Vault administrator login and password; please confirm that these are set correctly.
app.veeva_vault.api.error.binding.user=Failed to bind with Veeva Vault. {0}
app.veeva_vault.api.error.download.custom.objects = Could not download custom user data for your Veeva Vault instance. {0}
app.veeva_vault.api.error.download.users=Failed to download users from Veeva Vault. {0}
app.veeva_vault.api.error.create.new.user=Failed to create new user ({0}) for Veeva Vault. {1}
app.veeva_vault.api.error.check.user.exists=Failed to verify a user ({0}) exists from Veeva Vault. {1}
app.veeva_vault.api.error.push.profile.update=Failed to push a profile to a user ({0}) to Veeva Vault. {1}
app.veeva_vault.api.error.import.user.profile=Failed to download a user''s profile ({0}) from Veeva Vault. {1}
app.veeva_vault.api.error.deactivate.user=Failed to deactivate user ({0}) from Veeva Vault. {1}
app.veeva_vault.api.error.reactivate.user=Failed to reactivate user ({0}) from Veeva Vault. {1}
app.veeva_vault.api.error.validation=Failed to validate your Admin credentials. {0}
app.veeva_vault.api.error.get.keys.by.user.id=Failed to fetch user. {0}
app.veeva_vault.api.error.security.policy.validation.failed=Security Policy is required field. Please select any value

#
# Org settings
#
org.sessionLifetime.error=Session lifetime must be between {0} minute and {1} hours.
org.plugin.group.not.found=Group not found. Group might have been deleted.
org.parentOrg.validation=Org has already been designated a child org and cannot also be a parent.

#
# User errors
#
user.resetPassword.error.status = Password reset is not allowed in the user's current status
user.expirePassword.error.status = Password expire is not allowed in the user's current status
user.resetPassword.error.loginType = Password reset is not supported for the user's login type
user.expirePassword.error.loginType = Password expire is not supported for the user's login type
user.forgotPassword.error.status = Forgot password is not allowed in the user's current status
user.forgotPassword.error.loginType = Forgot password is not supported for the user's login type
user.unlockAccount.error.status = Unlock account is not allowed in the user's current status
user.unlockAccount.error.loginType = Unlock account is not supported for the user's login type
user.error.loginType = This operation is not supported for the user's login type
user.error.policy = You do not have permission to perform this operation.

#
# App user errors
#
appuser.edit.error.creds = Username and password are managed by administrator for this application
appuser.edit.error.login = Username is managed by administrator for this application

#
# Jive 6.0
#
jive60LoginFailed=Could not verify the Jive administrator login and password; please confirm that these are set correctly.
app.jive60.api.error.api.validation=Failed to validate Admin credentials. {0}
app.jive60.api.error.auth=Error authenticating against Jive: {0}
app.jive60.api.error.check_user_exists=Error while verifying if user {0} exists on Jive: {1}
app.jive60.api.error.create_user=Error while creating Jive user {0}: {1}
app.jive60.api.error.deactivate_user=Error while deactivating {0} (Jive): {1}
app.jive60.api.error.reactivate_user=Error while reactivating {0} (Jive): {1}
app.jive60.api.error.import_user_profile=Error while trying to import Jive user profile for {0}: {1}
app.jive60.api.error.push_profile_update=Error while trying to push Jive profile update for {0}: {1}
app.jive60.api.error.push_password_update=Error pushing Jive password for {0}: {1}
app.jive60.api.error.upsert_group=Error while creating Jive security user group {0}: {1}
app.jive60.api.error.upsert_group_duplicate=Jive user group already exists: {0}. {1}
app.jive60.api.error.delete_group=Error while deleting Jive security user group {0}: {1}
app.jive60.api.error.update_group_membership=Error while update Jive security user group membership for group {0}: {1}
app.jive60.api.error.download_users=Error while downloading all users from Jive: {0}
app.jive60.api.error.generic=Jive API error: {0}

#
# Jive 4.5
#
jive45LoginFailed=Could not verify the Jive administrator login and password; please confirm that these are set correctly.
app.jive45.api.error.api.validation=Failed to validate Admin credentials. {0}
app.jive45.api.error.auth=Error authenticating against Jive: {0}
app.jive45.api.error.check_user_exists=Error while verifying if user {0} exists on Jive: {1}
app.jive45.api.error.create_user=Error while creating Jive user {0}: {1}
app.jive45.api.error.deactivate_user=Error while deactivating {0} (Jive): {1}
app.jive45.api.error.reactivate_user=Error while reactivating {0} (Jive): {1}
app.jive45.api.error.import_user_profile=Error while trying to import Jive user profile for {0}: {1}
app.jive45.api.error.push_profile_update=Error while trying to push Jive profile update for {0}: {1}
app.jive45.api.error.push_password_update=Error pushing Jive password for {0}: {1}
app.jive45.api.error.upsert_group=Error while creating Jive security user group {0}: {1}
app.jive45.api.error.upsert_group_duplicate=Jive user group already exists: {0}. {1}
app.jive45.api.error.delete_group=Error while deleting Jive security user group {0}: {1}
app.jive45.api.error.update_group_membership=Error while update Jive security user group membership for group {0}: {1}
app.jive45.api.error.download_users=Error while downloading all users from Jive: {0}
app.jive45.api.error.generic=Jive API error: {0}

#
# Evernote Business
#
evernoteBusinessVerifyFailed=Could not connect to Evernote Business API, please check your authentication Token
app.evernote_business.api.error.validation=Unable to validate Evernote API configuration. {0}
app.evernote_business.api.error.deactivation=Unable to deactivate Evernote user. {0}
app.evernote_business.api.error.create.user=Unable to create Evernote user. {0}
app.evernote_business.api.error.create.user.limit.reached=Unable to create Evernote user. You have reached your maximum number of users.

createSAMLDocInvalidAppName=The app does not exist or you do not have permission to create documentation for this app.
orgAppVersionInvalidAppURL=Invalid URL.

#
# Generic app
#
appLoginFailed=Cannot connect. Please ensure all details are set correctly.
verificationFailed=Verification failed: {0}
app.api.error.api.validation=Failed to validate Admin credentials: {0}
app.api.error.auth=Error authenticating: {0}
app.api.error.user.not_found=User {0} was not found in {1}
app.api.error.user.not_found_or_deleted=User {0} was not found because user may have been deleted in the application
app.api.error.group.not_found=Group {0} was not found in {1}
app.api.error.user.more_than_one_with_same_id = More than one user was found for ID: {0}
app.api.error.group.more_than_one_with_same_id = More than one group was found for ID: {0}
app.api.error.check_user_exists=Error while verifying if user {0} exists: {1}
app.api.error.create_user=Error while creating user {0}: {1}
app.api.error.create_pending_user=Error while creating pending user {0}: {1}
app.api.error.activate_user=Error while activating user {0}: {1}
app.api.error.deactivate_user=Error while deactivating user {0}: {1}
app.api.error.reactivate_user=Error while reactivating user {0}: {1}
app.api.error.import_user_profile=Error while trying to import user profile for {0}: {1}
app.api.error.import_user_by_id=Error while trying to import user by id {0}: {1}
app.api.error.push_profile_update=Error while trying to push profile update for {0}: {1}
app.api.error.push_password_update=Error pushing password for {0}: {1}
app.api.error.upsert_group=Error while creating user group {0}: {1}
app.api.error.group_name_long_length=Group name is too long (max value is {1} chars): {0}
app.api.error.upsert_group_duplicate=User group already exists: {0}. {1}
app.api.error.delete_group=Error while deleting user group {0}: {1}
app.api.error.update_group_membership=Error while updating user group membership for group {0}: {1}
app.api.error.add_group_membership=Error while adding user(s) to group {0}: {1}
app.api.error.remove_group_membership=Error while removing user(s) from group {0}: {1}
app.api.error.download_users=Error while downloading all users: {0}
app.api.error.download_groups=Error while downloading all groups: {0}
app.api.error.download_memberships=Error while downloading users for group {0}: {1}
app.api.error.download_custom_objects=Error while downloading custom objects: {0}
app.api.error.download_schema_enum_values=Error while downloading schema enum values: {0}
app.api.error.get_group_by_id=Error while trying to get the group {0} with the externalId {1} and id {2}: {3}
app.api.error.generic=API error: {0}
app.api.error.rate.limit.exceeded=API rate limit exceeded. {0}
app.api.error.empty_password=User password cannot be empty
app.api.error.download_app_schema=Error while downloading app schemas: {0}
app.api.error.unexpected_response_status=Unexpected response status from server: {0}. Expected status: {1}
app.api.error.incorrect_email=Email address cannot be blank and should have correct format {0}
application.provision.integration.call_api=Call external application API

rate.limit.exceeded.exception.detailed=Please try again after {0} sec


#
# Key
#
key.api.error.create.too.many.keys=Could not create a new key. Reached key store limit.
key.api.error.create.validity.years.out.of.range=Validity years out of range. It should be 2 - 10 years

#
# Connector
#
app.connector.validate.api.creds.failed=Credential validation failed
app.connector.generic.failure=Connector failure
app.connector.agent.reactivate_failed_missing_token=Cannot reactivate the agent because the token has been removed. You must delete and re-install the agent.

#
# Syncplicity
#
syncplicityLoginFailed=Verification failed: {0}

#
# Bloomfire
#
app.bloomfire.api.error.login.failed=Could not verify the Bloomfire administrator login and password; please confirm that these are set correctly.
app.bloomfire.api.error.api.validation=Failed to validate Admin credentials. {0}
app.bloomfire.api.error.check_user_exists=Error while verifying if user {0} exists in Bloomfire
app.bloomfire.api.error.create_user=Error while creating Bloomfire user {0}: {1}
app.bloomfire.api.error.download_users=Error while downloading all users from Bloomfire: {0}
app.bloomfire.api.error.generic=Bloomfire API error: {0}

#
# CornerStone
#
app.cornerstone.api.error.api.validation=Failed to validate the admin credentials against CornerStone On Demand
app.cornerstone.api.error.auth=Error authenticating against CornerStone On Demand
app.cornerstone.api.error.init=Failed to init CornerStone WebServices API
app.cornerstone.api.error.api.check_user_exists=Failed to verify if user {0} exists on CornerStone On Demand: {1}
app.cornerstone.api.error.api.password_push=Failed to push the password to CornerStone On Demand for user {0}: {1}
app.cornerstone.api.error.api.create_user=Failed to create user {0} in CornerStone On Demand: {1}
app.cornerstone.api.error.api.push_profile=Failed to update profile in CornerStone On Demand for user {0}: {1}
app.cornerstone.api.error.api.import_profile=Failed to import profile from CornerStone On Demand for user {0}: {1}
app.cornerstone.api.error.api.reactivate_user=Failed to reactivate user {0} in CornerStone On Demand: {1}
app.cornerstone.api.error.api.deactivate_user=Failed to deactivate user {0} in CornerStone On Demand: {1}
app.cornerstone.api.error.auth.unknown.host=Failed to connect to CornerStone On Demand. Please make sure that the CornerStone Organization Name has been entered correctly while configuring the General Settings

#
# SU pages
#
superuser.org.parentOrg.insufficientPermissions=Insufficient permissions to mark or unmark an org as a parent.
superuser.botnet.config.modification.no.changes=No configuration changes found.
superuser.botnet.config.modification.empty.value=The value {0} cannot be empty.
superuser.botnet.config.modification.invalid.datatype.value=The value {0} is not a valid {1}
superuser.botnet.config.modification.invalid.datatype.value.format=The value {0} is not a valid {1}, expected format was {2}

superuser.appversions.views.saml.allow_slo=Allow Single Logout
superuser.appversions.views.saml.single_logout_url=Single Logout URL

#
# ExactTarget
#
exacttargetLoginFailed=Verification failed: {0}
app.exacttarget.api.error.check_user_exists=Error while verifying if user exists on ExactTarget. {0}
app.exacttarget.api.error.create_user=Error while creating ExactTarget user. {0}
app.exacttarget.api.error.deactivate_user=Error while deactivatinguser in ExactTarget. {0}
app.exacttarget.api.error.reactivate_user=Error while reactivating user in ExactTarget. {0}
app.exacttarget.api.error.import_user_profile=Error while trying to import ExactTarget user profile. {0}
app.exacttarget.api.error.push_profile_update=Error while trying to push ExactTarget profile update. {0}
app.exacttarget.api.error.push_password_update=Error while trying to push ExactTarget password update. {0}
app.exacttarget.api.error.download_users=Error while downloading all users from ExactTarget. {0}
app.exacttarget.api.error.get_account=Error while retrieving account from ExactTarget. {0}
app.exacttarget.api.error.init=Error while client initialization. {0}
app.exacttarget.api.error.generic=ExactTarget API error: {0}

# Bloomfire
#
app.bloomfire.sso.error.user_not_extracted=Failed to extract user from SignOnRequest
app.bloomfire.sso.error.api_key_empty=API Key is required for SignOn request

# Appature
#
app.appature.sso.error.allowed_accounts.empty=Allowed accounts regex is required
app.appature.sso.error.groups.empty=Groups regex is required
app.appature.sso.error.allowed_accounts.invalid_regex=Allowed accounts regex is malformed
app.appature.sso.error.groups.invalid_regex=Groups regex is malformed

#
# Benetrac
#
app.benetrac.sso.error.site_id.empty=SiteID is required
app.benetrac.sso.error.partner_id.empty=PartnerID is required

## Okta OAuth 2.0 error messages
oauth.invalid_request.grant_type_required=A grant_type must be provided in the request.
oauth.invalid_request.code_required=A code must be provided in the request.
oauth.invalid_request.session_token_required=A session_token must be provided in the request.
oauth.invalid_request.client_id_required=A client_id must be provided in the request.
oauth.invalid_request.response_type_required=A response_type must be provided in the request.
oauth.invalid_request.token_not_found=This code is invalid or a processing error occurred.
oauth.invalid_request.token_expired=The token is expired.
oauth.invalid_request.token_status=The token is in the wrong state.
oauth.invalid_request.illegal_redirect=An illegal redirect_uri was provided.
oauth.invalid_client.client_not_found=The client_id was not recognized.
oauth.invalid_client.client_not_permitted=The client is not allow to use this method.
oauth.unsupported_grant_type=The grant type in the request is not supported.
oauth.unauthorized_client.wrong_client_for_token=The client id does not match the expected value for the designated token.
oauth.unsupported_response_type=The response type contained in the request is not supported.
oauth.unsupported_flow.consent=All flows which require consent from the user are currently disabled.
oauth.invalid_org=The Okta org to which you are making the oauth request is invalid.
oauth.service_unavailable=Service not available.

app.ldap.password.reset.timeout=Unable to change your password at this time. Please try again or contact your administrator.
app.ldap.password.reset.succeeded=Password reset succeeded.
app.ldap.password.reset.failed=Password reset failed.
app.ldap.password.reset.systemic.error=Unable to change your password at this time.  Please try again or contact your administrator.
app.ldap.password.reset.constraint.error=Your new password does not meet your password policy requirements (e.g. minimum length, complexity, or history).
app.ldap.password.reset.invalid.old.password=Your old password is not valid.  Try again with the correct password.
app.ldap.password_reset.old_new_passwords_equal=Your new password must not be the same password as your old password
app.ldap.password_reset.old_password_empty=You must enter your current password before you can change your password
app.ldap.password_reset.new_password_empty=You must enter your new password before you can change your password
app.ldap.password_reset.new_confirm_password_empty=You must repeat your new password before you can change your password
app.ldap.password_reset.passwords_do_not_match=Your new password must match your repeated password.
app.ldap.password_reset.attribs_not_set=Cannot perform password change. Please ensure that you have provided valid value for 'Password Attribute' field in your application settings.
app.ldap.password_reset.restriction.error=Unable to update the password. The value provided for the new password does not meet the length, complexity, or history requirements of the domain.
permission_reporting.disabled=The OPs team has disabled the permission reporting service with JMX.

app.ldap.password.change.timeout=Unable to change your password at this time. Please try again or contact your administrator.
app.ldap.password.change.systemic.error=Unable to change your password at this time.  Please try again or contact your administrator.
app.ldap.password.change.succeeded=Password change succeeded.
app.ldap.password.change.failed=Password change failed due to following reason : {0}

#
# MOVEit DMZ
#
moveit_dmz.error.too.long.username.or.email=MOVEit DMZ username or email null or too long for Okta user {0}. Username: {1}; email: {2}


## Samanage
app.samanage.api.error.login.failed=Could not verify the SAManage administrator login and password; please confirm that these are set correctly.
app.samanage.api.error.long_group_name=Group name is too long (max length is 50 chars): {0}
app.samanage.api.error.incorrect.attribute=User {0} has incorrect attribute(s).

#
# Egnyte
#
app.egnyte.username.validation.failure={0}. Please make sure that the Username matches Egnyte user naming convention. Username: {1}
app.egnyte.auth.type.validation.failure=Please make sure that you selected correct Authentication Type for user {0}
app.egnyte.rate.limiting.exceeded=Rate limit exceeded for Egnyte. {0}


#DUO
duo.invalid_host=Unable to validate your Duo integration configuration.  Check that your API hostname is correct.
duo.invalid_keys=Your Duo secret or integration key is not valid.
duo.config_error=Unable to validate your Duo integration configuration: {0}
duo.usernameNormalization.oktaUsername=Okta Username
duo.usernameNormalization.email=Email
duo.usernameNormalization.samAccountName=SAM Account Name

# MIM
core.mim.apns.csr_signing_failed=Unable to sign APNS CSR
core.mim.apns.keystore_load_failed=Error when loading APNS keystore
core.mim.apns.cert_chain_load_failed=Error while loading certs for APNS push request
core.mim.apns.csr_output_error=Error while downloading APNS CSR
core.mim.apns.apns_cert_error=Error during APNS cert upload
core.mim.apns.empty_cert_file=Attempted upload of empty APNS cert file
core.mim.multiple_mdm_config=Changing APNS configuration is currently disallowed
core.mim.min.ios.version=Minimum iOS version required {0}.
core.mim.apns.no_private_key=No matching private key generated
core.mim.apns.no_matching_key=There is no matching key more recent than the current APNS cert.  Check that you used the correct CSR.
core.mim.command.generic.json_failed=Unable to marshal command to JSON
core.mim.command.bulk_add.response=Successfully pushed commands to {0} devices. Failed to push commands to {1} devices.
core.mim.safe.license.cannot_load=Cannot load SAFE license key
core.mim.nativemobileapps.error=Error while fetching native mobile apps: {0}
core.oem.command.already_queued=Action on device already in queue or in progress
core.oem.command.device_already_locked=Device is already locked and cannot be locked again
core.mim.apns.crt.success.title=Apple Certificate is set up. The certificate expires on {0}
core.mim.apns.crt.success.description=Renew your certificate any time using the steps below. We\'ll remind you when the date gets closer.
core.mim.apns.crt.expiring.title=Renew your Apple certificate below
core.mim.apns.crt.expiring.description=Your certificate expires on {0}. Once the certificate expires, you can\'t send commands to currently enrolled Apple devices or let new devices enroll until you renew the certificate.

core.mim.configuredmobileapps.id.missing=Required ConfiguredMobileApp id is missing
core.mim.configuredmobileapps.id.not_found=Failed to find ConfiguredMobileApp using id provided: {0}

core.mim.hostedApps.invalidManifestRequest=Invalid manifest request

cors.origins_error.bad_origins=One or more of the URLs is not valid.
cors.proxy.unknown_referrer=The referrer of the request does not match any of the configured endpoints.

antiPhishingWhitelistedUrl.url_error.bad_url=One or more of the URLs is not valid.
antiPhishingWhitelistedUrl.url_error.max_url=A maximum of 10 URLs can be whitelisted.
# Android for Work
core.mim.afw.invalid_package_id_exception=We can't find the app in Google play for work.
core.mim.afw.setup_exception=Failed to bind domain with Google. Check that your domain and token are correct.
core.mim.afw.not_setup_exception=Android for Work was not setup yet. Please setup Android for Work before trying again.

# hosted app
core.mim.hosted_app.invalid_device_type_exception=You can only upload an {0} app below. To upload a new non-{0} app, close this window and then edit your existing app.
core.mim.hosted_app.hosted_app_not_wizard_app_exception=Error trying to associate an uploaded mobile app with an app not created by the app wizard
core.mim.hosted_app.hosted_app_exception=Error occurred during hosted app metadata extraction
core.mim.hosted_app.aws_exception=Error occurred during hosted app metadata extraction
core.mim.hosted_app.invalid_app_icon=Your .ipa file doesn't contain an icon. An icon is required to help your users recognize the app.
core.mim.hosted_app.invalid_enterprise_provision=Your .ipa file doesn't have a valid enterprise provisioning profile.
core.mim.hosted_app.enterprise_provision_expired=Your enterprise provisioning profile has expired.
core.mim.hosted_app.hosted_mobile_app_image_exception=Error trying to upload and store extracted icon from uploaded app
core.mim.hosted_app.aws_delete_exception=Error occurred while deleting AWS objects.

#
# Roambi
#
roambi.api.error.deactivate_user.confirmation=Error while activating user: confirmation failed
roambi.api.error.reactivate_user.confirmation=Error while deactivating user: confirmation failed
roambi.api.error.auth.unexpected.response=Unexpected authentication response. HTTP status: {0}
roambi.api.error.auth.empty.code=Authentication failure: received 'code' parameter is empty
roambi.api.error.auth.empty.account.response=Authentication failure: Failed to get account info - response is empty

#
# Litmos
#
app.litmos.group.push.group_name_too_long=The length of the name of your group is {0}, but Litmos allows only {1}.
app.litmos.import.rate_limit_exceeded=API rate limit exceeded. If you see this error too often or it blocks you, contact Litmos to increase API calls limit for your organization

# Smartsheet
smartsheet.api.error.token.verification.failed=Authentication failed : {0}
smartsheet.api.error.invalid.token=Invalid API Token.
smartsheet.api.error.not.system.admin=Provided API Access Token has no system admin privileges.
smartsheet.api.error.not.group.admin=Provided API Access Token has no group admin privileges.
smartsheet.api.error.not.licensed.viewer=User must be a licensed sheet creator to be a resource viewer or group administrator.
smartsheet.rate.limit.exceeded=Rate limit exceeded for Smartsheet. {0}
smartsheet.bad.response=Incorrect response body for Bad Request error received.
smartsheet.unauthorized.response=Incorrect response body for Unauthorized error received.
smartsheet.forbidden.response=Incorrect response body for Forbidden error received.
smartsheet.not.found.response=Incorrect response body for Not Found error received.
smartsheet.unsupported.response=Improperly formatted or unsupported request made.
smartsheet.rate.limit.response=Incorrect response body for Rate Limit Exceeded error received.

# GitHub
github.api.error.empty_oauth_token=OAuth token is empty. Please refresh it on Provisioning tab
github.api.error.user_not_found=User {0} does not exist in GitHub. Please check username or create user manually
github.api.error.rate_limit.reset_date=Unable to get rate limit reset date [{1}] from Response for GitHub {0}
github.api.error.rate_limit.remaining=Unable to get rate limit remaining queries [{1}] from Response for GitHub {0}
github.api.error.not_admin_user=Current API account does not have admin permissions for the organization {0}
github.api.error.not_a_member_of_the_org=Current API user is not a member of the organization {0}

#
# Huddle
#
huddle.company_id.validation.failure=Company Id not specified.
huddle.rate.limit.exceeded=You have exceeded rate limit ({0} calls per hour) for your client ID. Retrying after {1}

##---Org Access Policy
orgaccesspolicy.sessionLifeTime=Session lifetime
orgaccesspolicy.sendEmailForNewDeviceEnabled=Unknown device notification email
orgaccesspolicy.rememberMeEnabled="Remember Me" checkbox on sign in
orgaccesspolicy.showLockoutFailures=Show lockout failures
orgaccesspolicy.smsForgotPasswordEnabled=Allow SMS for self-service operations (such as reset password or unlock account)
orgaccesspolicy.selfServiceUnlockEnabled=Users can unlock account with self-service
orgaccesspolicy.smsForgotPassword.enableFeature=Please contact Okta customer support to enable SMS.
orgaccesspolicy.selfServiceUnlock.enableFeature=Please contact Okta customer support to enable self-service unlock.
orgaccesspolicy.activationTokenExpirationHours=Activation emails are valid for
orgaccesspolicy.readonly.field.value.enabled=Enabled
orgaccesspolicy.readonly.field.value.notenabled=Not Enabled
##---/Org Access Policy

#
# PagerDuty
#
app.pagerduty.api.auth.error.invalid.admin.username=Incorrect admin username: {0}
app.pagerduty.api.auth.error.invalid.admin.role=User provided is not admin or owner. Provided user role is {0}
app.pagerduty.api.auth.error.invalid.api.key=API key provided is invalid
app.pagerduty.api.push.profile.update.unexpected.status=Unexpected status response while updating user {0}: {1}. 200 is expected
app.pagerduty.api.deactivate.user.unexpected.status=Unexpected status response while deleting user {0}: {1}. 204 is expected
app.pagerduty.api.find.user.many.users=More than one user was found with given username {0}
app.pagerduty.api.get.admin.id.failure=Failed to get admin user ID for username {0}
app.pagerduty.api.admin.id.null=Admin user ID is null

#
# Administration User Profile Assigned Applications UI
#
profile.apps.assignedapp.page.title=Assigned Applications
profile.apps.unassignedapp.page.title=Unassigned Applications
profile.apps.assignapps.label=Assign Applications
profile.apps.cancelassignapps.label=Cancel
profile.apps.attribute.option.empty=None available
profile.apps.add.assignment.modal.title=Assign Application
profile.apps.add.assignment.modal.ok=Assign App
profile.apps.edit.assignment.modal.title=Edit Application Assignment
profile.apps.bookmarkapp.assignment.modal.subtitle={0} is in bookmark mode. Username or password are not required because no authentication occurs.
profile.apps.delete.assignment.modal.title=Unassign Application
profile.apps.delete.assignment.modal.subtitle=Are you sure you want to unassign {0} from {1}?
profile.apps.assigned.update.message={0} {1} assigned to the user
profile.apps.assigned.update.plural=applications are
profile.apps.assigned.update.single=application is
profile.apps.unassigned.empty.subtitle=Click {0} Add Application {1} to configure an application and assign it to people.
profile.apps.assigned.list.empty.title=No apps assigned to this user.
profile.apps.assigned.unassign.confirm.success=Application has been unassigned
profile.apps.unassigned.button.assign=Assign
profile.apps.unassigned.button.assigned=Assigned
profile.apps.unassigned.list.error=An error occurred in searching assignable apps.
profile.apps.unassigned.bookmark.error=Something went wrong, please try again later.
profile.apps.datalist.header.application=Application
profile.apps.datalist.header.assignment=Assignment & App Username
profile.apps.section.title.general=GENERAL
profile.apps.section.title.personal=PERSONAL
profile.apps.section.title.entitlements=ENTITLEMENTS
profile.apps.entitlement.use.default=Use default
profile.apps.entitlement.not.mapped=Not mapped
profile.apps.entitlement.override.default=Override default

#
# Administration User Profile Device UI
#
profile.device.devicesListWrapper.deprovisionHeader=Deprovisioning Device
profile.device.devicesListWrapper.deprovisionText=Selecting the "Deprovision" button will prompt you to deprovision a user&rsquo;s device.\
  This will simply remove any company managed application and content from the user&rsquo;s\
  mobile device without affecting their personal content and applications.
profile.device.devicesListWrapper.factoryHeader=Factory Reset
profile.device.devicesListWrapper.factoryText=Selecting the "Factory Reset" button will prompt you reset the user&rsquo;s\
  device to its factory settings. All content and\
  applications will be deleted from the device.
profile.device.empty.title=No enrolled devices.
profile.device.empty.subtitle=Enroll a device through Okta Mobile.

#
# Administrator Roles Admin UI
#
administrators.administrator=Administrator
administrators.super=Super
administrators.org=Organization
administrators.app=Application
administrators.readonly=Read Only
administrators.mobile=Mobile
administrators.user=User
administrators.add.admin=Add Administrator
administrators.view.permissions=View Permissions Info
administrators.add=Add Administrator
administrators.edit=Edit Administrator
administrators.update=Update Administrator
administrators.grant.role.to=Grant administrator role to
administrators.roles=Administrator roles
administrators.super.admin=Super Administrator
administrators.org.admin=Organization Administrator
administrators.app.admin=Application Administrator
administrators.user.admin=User Administrator
administrators.readonly.admin=Read Only Administrator
administrators.mobile.admin=Mobile Administrator
administrators.user.permissions=User Admin Permissions
administrators.application.permissions=Application Permissions
administrators.can.administer.all=Can administer all applications
administrators.can.administer.specific=Can administer specific applications
administrators.can.administer.all.groups=Can administer all users
administrators.can.administer.specific.groups=Can administer users in specific groups
administrators.num.apps={0} apps
administrators.num.groups={0} groups
administrators.administering.following=Administering the following applications:
administrators.administering.users.in.groups=Administering users in the following groups:
administrators.revoke.administrator.privileges=Revoke Administrator Privileges
administrators.revoke.confirmation=Are you sure you want to revoke all administrator privileges from {0}?
administrators.revoke.success=Successfully revoked administrator privileges from {0}
administrators.revoke.error=Could not revoke administrator privileges from {0}
administrators.select.at.least.one.app=At least one application must be selected
administrators.select.at.least.one.group=At least one group must be selected


# Vpn settings
#
vpnsettings.networksettings=See {0}network settings{1} for configuration information.
vpnsettings.tooltip=The message to be displayed when the user is prompted to start their VPN.
vpnsettings.vpn_required_notification=VPN Required Notification
vpnsettings.vpn_notification=VPN Notification
vpnsettings.messages=Messages
vpnsettings.helpUrl=Optional Help URL
vpnsettings.helpUrl.tooltip=The optional URL will appear after the message.
vpnsettings.input_length=message: Maximum length is 1024 characters.
vpnsettings.empty_input=message: Cannot have an empty message.
vpnsettings.not_found=No VpnSettings found.

vpnsettings.disabled=Disabled
vpnsettings.anywhere=Anywhere
vpnsettings.onNetwork=On Network
vpnsettings.offNetwork=Off Network
vpnsettings.zoneIn=Inside Any Zones
vpnsettings.zoneOut=Outside of All Zones

#
# Admin App Instance Assignment UIs Shared Text
#
appinstance.assign=Assign
appinstance.assign.confirm.button=Confirm Assignment
appinstance.assigned=Assigned
appinstance.assigned.update.message={0} {1} assigned to the app.
appinstance.unassign.confirm.content=Are you sure you want to unassign {0} from {1}?
appinstance.activate.fail=Failed to activate instance
appinstance.deactivate.fail=Failed to deactivate instance
appinstance.delete.fail=Failed to delete instance
appinstance.saved=Settings saved!

#
# Admin App Instance UI for general page
#
appinstance.general.appembedlink.login.header=Application Login Page
appinstance.general.appembedlink.login.description=If someone who is not authenticated attempts to access this \
  application, they will be redirected to a default login page or one that can be customized. An application level \
  setting will override default URL settings.
appinstance.general.appembedlink.login.enabled=Use a custom login page for this application.
appinstance.general.appembedlink.login.url=Login page URL
appinstance.general.appembedlink.login.disabled=Use the default organization login page.
appinstance.general.appembedlink.error.header=Application Access Error Page
appinstance.general.appembedlink.error.description=If someone who is not assigned to the application attempts to use \
  an embed link, they will be redirected to a default error page or one that can be customized. An application level \
  setting will override default URL settings.
appinstance.general.appembedlink.error.enabled=Use a custom error page for this application
appinstance.general.appembedlink.error.url=Error page URL
appinstance.general.appembedlink.error.disabled=Use the error page setting on the {0}global settings{1} page
appinstance.general.selfService.provisioningApp.noTemplate.enable.error=Provisioning app={0} should have at-least one active approval flow template to enable self service.

#
# Admin App Instance UI for Provisioning
#
appinstance.provisioning.dashboard.mappings.header=Profile Attributes & Mappings
appinstance.provisioning.dashboard.mappings.title=User Attributes
appinstance.provisioning.dashboard.mappings.explain=Add, import, and remove attributes from {0} user profiles.
appinstance.provisioning.dashboard.mappings.button=Edit Attributes
appinstance.provisioning.dashboard.approvalWorkflow.title=Configure Approval
appinstance.provisioning.dashboard.approvalWorkflow.status=Approval is {0}
appinstance.provisioning.dashboard.approvalWorkflow.explain=Configure an approval workflow for {0} access requests.
appinstance.provisioning.dashboard.approvalWorkflow.button=Configure Approval
appinstance.provisioning.approvalWorkflow.modal.status.label=Approval
appinstance.provisioning.approvalWorkflow.modal.required.label=Required
appinstance.provisioning.approvalWorkflow.modal.not.required.label=Not Required
appinstance.provisioning.approvalWorkflow.modal.appRequest.steps.label=Send app requests to
appinstance.provisioning.approvalWorkflow.modal.approveAction.label=If request is approved
appinstance.provisioning.approvalWorkflow.modal.denyAction.label=If request is denied
appinstance.provisioning.approvalWorkflow.modal.timeoutPeriod.label=Approver must respond within
appinstance.provisioning.approvalWorkflow.modal.timeoutAction.label=If request expires
appinstance.provisioning.approvalWorkflow.modal.email.requester=Send email to requester
appinstance.provisioning.approvalWorkflow.modal.email.approvers=Send email to approvers
appinstance.provisioning.approvalWorkflow.modal.email.custom=Send email to others...
appinstance.provisioning.approvalWorkflow.modal.email.custom.placeholder=Enter email addresses
appinstance.provisioning.approvalWorkflow.modal.approveInfo.message=Assign the app and provision an account according to your provisioning options.
appinstance.provisioning.approvalWorkflow.modal.approveInfo.options=Provisioning Options
appinstance.provisioning.approvalWorkflow.modal.steps.empty.title=No approvers added
appinstance.provisioning.approvalWorkflow.modal.steps.empty.subtitle=Search for a user to add an approval step.
appinstance.provisioning.approvalWorkflow.modal.steps.user.search.placeholder=Enter approver's name
appinstance.provisioning.approvalWorkflow.modal.steps.column.step=Step
appinstance.provisioning.approvalWorkflow.modal.steps.column.approver=Approver
appinstance.provisioning.approvalWorkflow.modal.steps.approver.type.user=Users
appinstance.provisioning.approvalWorkflow.modal.steps.approver.type.group=Groups
appinstance.provisioning.approvalWorkflow.modal.steps.approver.type.expression=Expression
appinstance.provisioning.approvalWorkflow.modal.steps.column.entitlements=Entitlements
appinstance.provisioning.approvalWorkflow.modal.steps.column.entitlements.tooltip=Choose whether an approver can view or edit a user's account attributes or if the attributes should be hidden.
appinstance.provisioning.approvalWorkflow.modal.steps.entitlements.option.hide=Hidden
appinstance.provisioning.approvalWorkflow.modal.steps.entitlements.option.read=Read
appinstance.provisioning.approvalWorkflow.modal.steps.entitlements.option.write=Write
appinstance.provisioning.approvalWorkflow.modal.steps.maximum.error=No more than {0} approvers are allowed
appinstance.provisioning.approvalWorkflow.modal.timeoutAction.1week.label=1 Week
appinstance.provisioning.approvalWorkflow.modal.timeoutAction.30days.label=30 Days
appinstance.provisioning.approvalWorkflow.modal.timeoutAction.custom.label=Custom time period
appinstance.provisioning.approvalWorkflow.modal.timeoutAction.weeks.label=Weeks
appinstance.provisioning.approvalWorkflow.modal.timeoutAction.days.label=Days
appinstance.provisioning.approvalWorkflow.modal.timeoutAction.value.error=Request expiration {0} is not a valid number
appinstance.provisioning.approvalWorkflow.modal.infobox.warning.approval=Approval is required to use self service for this app.  Disabling approval will also disable self service.
appinstance.provisioning.attributesTable.header.oktaAttribute=Okta Attribute
appinstance.provisioning.attributesTable.header.attribute=Attribute
appinstance.provisioning.attributesTable.header.attributeType=Attribute Type
appinstance.provisioning.attributesTable.header.value=Value
appinstance.provisioning.attributesTable.header.applyMappingOn=Apply Mapping On
appinstance.provisioning.attributesTable.view.notMapping.tooltip=This attribute is required. Add a mapping to prevent provisioning failures
appinstance.provisioning.attributesTable.imported.attributes.table.title=Imported Attributes
appinstance.provisioning.attributesTable.provisioned.attributes.table.title=Provisioned Attributes
appinstance.provisioning.attributesTable.provisioned.unmapped.attributes.warning.title=One or more required attributes is missing a mapping. Add mappings for these attributes to prevent provisioning failures:
appinstance.provisioning.attributesTable.view.sign.on.link=Sign On settings
appinstance.provisioning.attributesTable.view.configureInSignOn=Configured in <a href="#tab-signon">Sign On settings</a>
appinstance.provisioning.attributesTable.view.not.mapped=Not mapped
appinstance.provisioning.attributesTable.view.show.unmapped.attributes=Show Unmapped Attributes
appinstance.provisioning.attributesTable.view.hide.unmapped.attributes=Hide Unmapped Attributes
appinstance.provisioning.attributesTable.view.apply.mapping.on.create.and.update=Create and update
appinstance.provisioning.attributesTable.view.apply.mapping.on.create.only=Create only
appinstance.provisioning.attributesTable.view.mapping.value.personal.label=Personal
appinstance.provisioning.attributesTable.view.mapping.value.entitlement.label=Entitlement
appinstance.provisioning.attributesTable.view.edit.attributes.button=Edit Attributes
appinstance.provisioning.mapping.type.attribute=Attribute
appinstance.provisioning.mapping.type.expression=Expression
appinstance.provisioning.mapping.type.fixedvalue=Fixed Value
appinstance.provisioning.mapping.profile.label=Profile
appinstance.provisioning.mapping.type.label=Mapping type
appinstance.provisioning.mapping.attribute.label=Attribute
appinstance.provisioning.mapping.expression.label=Expression
appinstance.provisioning.mapping.pushstatus.nopush.label=Do not map
appinstance.provisioning.mapping.pushstatus.push.label=Apply mapping on user create and update
appinstance.provisioning.mapping.pushstatus.pushonly.label=Apply mapping on user create only
appinstance.provisioning.mapping.pushstatus.push.disable.okta=Option requires Profile Master to be enabled
appinstance.provisioning.mapping.pushstatus.pushonly.disable.okta=Options not available when Profile Master is enabled
appinstance.provisioning.mapping.pushstatus.pushonly.disable.app=Option requires Update User Attributes to be enabled
appinstance.provisioning.mapping.dialog.title=Edit Mapping
appinstance.provisioning.mapping.dialog.button.save=Saving Mapping
appinstance.provisioning.mapping.source.title=Source
appinstance.provisioning.mapping.target.title=Target
appinstance.provisioning.mapping.expression.reference=Expression Language Reference
appinstance.provisioning.reapply.mapping.success=Applying mappings job has initiated
#
# Provisioning API
#
appinstance.provisioning.api.not.supported=Provisioning is not supported.
appinstance.provisioning.api.feature.not.supported=Feature {0} is not supported.
appinstance.provisioning.api.not.authorized=Not authorized.
appinstance.provisioning.api.invalid.settings=Invalid feature settings.

#
# Admin App Instance UI for User(s) Assignment
#
appinstance.userassignment.empty.title=No users found
appinstance.userassignment.assigned.person=Person & Username
appinstance.userassignment.assigned.status=Status
appinstance.userassignment.assigned.unassign.error=User can not be unassigned.
appinstance.userassignment.assigned.unassign.confirm.title=Unassign User
appinstance.userassignment.assigned.unassign.confirm.success=User has been unassigned.
appinstance.userassignment.assigned.unassign.default.username=the user
appinstance.userassignment.assigned.update.plural=people are
appinstance.userassignment.assigned.update.single=person is
appinstance.userassignment.assign.title=Assign {0} to People
appinstance.userassignment.assign.empty.subtitle=User doesn't exist or is already assigned this app
appinstance.userassignment.assign.button=Assign to People
appinstance.userassignment.assign.bookmarkapp.subtitle=The app is in bookmark mode. Username or password is not required because no authentication occurs.
appinstance.userassignment.assign.user.confirm=Confirm Assignment
appinstance.userassignment.edit.title=Edit User Assignment
appinstance.userassignment.user.status.staged=Pending activation
appinstance.userassignment.user.status.active=Active
appinstance.userassignment.user.status.recovery=Password reset
appinstance.userassignment.user.status.provisioned=Password reset
appinstance.userassignment.user.status.deprovisioned=Deactivated
appinstance.userassignment.user.status.lockedout=Locked out
appinstance.userassignment.user.status.passwordexpired=Password expired
appinstance.userassignment.user.status.suspended=Suspended
appinstance.userassignment.assigned.reset.synced.password.success=New password generated and syncing to the app.
appinstance.userassignment.assigned.reset.synced.password.failure=Failed to generate and sync new password: {0}
appinstance.userassignment.assigned.reset.synced.password.label=Reset password
appinstance.userassignment.assigned.reset.synced.password.explain.text=Randomly generated via app
appinstance.userassignment.assigned.reset.synced.password.explain.link=provisioning
appinstance.userassignment.user.comparewithapp.button=Audit Accounts
appinstance.userassignment.user.comparewithapp.error=Compare With App job error. Please try again later.
appinstance.userassignment.user.comparewithapp.result.title=Audit Accounts
appinstance.userassignment.user.comparewithapp.result.okta.subtitle=User assigned app
appinstance.userassignment.user.comparewithapp.result.app.title=App
appinstance.userassignment.user.comparewithapp.result.app.subtitle=Account found
appinstance.userassignment.user.comparewithapp.result.inokta=Only in Okta
appinstance.userassignment.user.comparewithapp.result.inokta.desc=These users are assigned the app<br>in Okta but don\'t have accounts. These may<br>be incomplete <a href=\"/admin/tasks\">tasks</a> to provision them.
appinstance.userassignment.user.comparewithapp.result.inboth=In both
appinstance.userassignment.user.comparewithapp.result.inboth.desc=These users have been<br>assigned and properly provisioned.<br>They are good to go.
appinstance.userassignment.user.comparewithapp.result.inapp=Only in app
appinstance.userassignment.user.comparewithapp.result.inapp.desc=These may be rogue accounts.<br>The users should either be deprovisioned<br>in the app or assigned it in Okta.
appinstance.userassignment.user.comparewithapp.result.download=Download detailed report

#
# Admin App Instance UI for Group(s) Assignment
#
appinstance.groupassignment.assign.button=Assign to Groups
appinstance.groupassignment.empty.title=No groups found
appinstance.groupassignment.assigned.person=Person & Username
appinstance.groupassignment.assigned.status=Status
appinstance.groupassignment.assigned.unassign.confirm.title=Unassign Group
appinstance.groupassignment.assigned.unassign.confirm.success=Group {0} has been unassigned.
appinstance.groupassignment.assigned.unassign.default.groupname=the group
appinstance.groupassignment.assigned.update.plural=groups are
appinstance.groupassignment.assigned.update.single=group is
appinstance.groupassignment.assign.title=Assign {0} to Groups
appinstance.groupassignment.assign.empty.subtitle=Group doesn't exist or is already assigned this app
appinstance.groupassignment.assign.button=Assign to Groups
appinstance.groupassignment.assign.bookmarkapp.subtitle=The app is in bookmark mode. Username or password is not required because no authentication occurs.
appinstance.groupassignment.edit.title=Edit Group Assignment


#
# Admin App Instance UI for Assignments Tab
#
appinstance.assignments.button.assign=Assign
appinstance.assignments.button.assign.to.people=Assign to People
appinstance.assignments.filter.people=People
appinstance.assignments.filter.groups=Groups
appinstance.assignments.people.column.assignment=Person
appinstance.assignments.people.column.type=Type
appinstance.assignments.people.column.type.group=Group
appinstance.assignments.people.column.type.user=Individual
appinstance.assignments.people.empty.title=No users found
appinstance.assignments.groups.column.priority=Priority
appinstance.assignments.groups.column.assignment=Assignment
appinstance.assignments.groups.empty.title=No groups found
appinstance.assignments.sidebar.selfservice.title=Self Service
appinstance.assignments.sidebar.approval.title=Approval
appinstance.assignments.sidebar.approval.on=on
appinstance.assignments.sidebar.approval.off=off
appinstance.assignments.sidebar.approval.button=Configure Approval
appinstance.assignments.sidebar.manage.requests.title=App Requests
appinstance.assignments.sidebar.manage.requests.button=Manage Requests
appinstance.assignments.sidebar.pending.norequest=No requests pending
appinstance.assignments.sidebar.pending.requests=pending requests
appinstance.assignments.sidebar.self.service.enable.message=You need to enable self service globally before you can use it for this app.
appinstance.assignments.sidebar.self.service.org.managed.apps.message=You need to enable self service for org managed apps before you can use self service for this app.
appinstance.assignments.sidebar.self.service.org.enable.message=You need to enable self service for this app to display it in the app catalog.
appinstance.assignments.sidebar.go.to.self.service.link.message=Go to self service settings
appinstance.assignments.pending.requests.modal.title=Manage Pending Requests
appinstance.assignments.pending.requests.modal.column.requester=Requester
appinstance.assignments.pending.requests.modal.column.nextapprover=Next Approver
appinstance.assignments.pending.requests.modal.column.expiresin=Request Expires In
appinstance.assignments.pending.requests.modal.column.history=Request History
appinstance.assignments.pending.requests.action.requested=requested
appinstance.assignments.pending.requests.action.approved=approved
appinstance.assignments.pending.requests.action.notresponded=has not responded
appinstance.assignments.pending.requests.resend.message=Are you sure you want to resend this app request to <label>{0}</label>?
appinstance.assignments.pending.requests.resend.message.group=Are you sure you want to resend this app request to <label>{0}</label>? This will send email to {1} users.
appinstance.assignments.pending.requests.resend.button=Send Email
appinstance.assignments.pending.requests.resend.button.goback=Send and Go Back
appinstance.assignments.pending.requests.resend.success=Approval email has been resended to {0}
appinstance.assignments.pending.requests.resend.error=There is error occurred when resending email to {0}
appinstance.assignments.pending.requests.delete.message=Are you sure you want to delete this request? You can still assign this app to <label>{0}</label> manually.
appinstance.assignments.pending.requests.delete.button=Delete
appinstance.assignments.pending.requests.delete.button.goback=Delete and Go Back
appinstance.assignments.pending.requests.delete.success=Pending request has been deleted successfully.
appinstance.assignments.pending.requests.delete.error=There is error occurred when deleting pending request.
#
# Admin App Instance Header UI
#
appinstance.header.infomessage.title=This Google Apps Integration was created for Android for Work - editing this Integration is disabled
appinstance.header.infomessage.firstline=To edit your Android for Work settings, go to Mobile Policies:
appinstance.header.infomessage.buttons.policies=Go to Mobile Policies
appinstance.header.infomessage.buttons.back=Back to Applications
#
# Admin App Instance UI for Sign On Tab
#
appinstance.signon.preview.userPicker.placeholder=Enter an Okta user to preview this mapping
appinstance.signon.preview.error=Something went wrong

#
# Admin App Instance Group Push UI
#
grouppush.groupSelector.placeholder=Enter a group to push...
grouppush.groupSelector.suggestion.emptyDescription=No description

#
# Admin Group UI for App(s) Assignment
#
group.appassignment.empty.title=No App to Show
group.appassignment.assign.title=Assign apps to {0}
group.appassignment.assign.empty.subtitle=All of the apps under the search terms are assigned to the group or try a new search.
group.appassignment.assign.extraInfo.header=Extra info is needed to assign this app to a group.
group.appassignment.assign.extraInfo.body=The attributes below will apply to all people assigned to this group.
group.appassignment.edit.title=Edit App Assignment
group.appassignment.assign.property.error=One or more properties have been deleted. Refresh the page to view the updated assignment.

#
# O-Form Custom
#
oform.custom.save.goBack=Save and Go Back
oform.custom.cancel.goBack=Cancel and Go Back
oform.custom.save.andAdd=Save and Add Another

#
# o-form components
#
oform.baseselect.noresults=No matches
oform.baseselect.searching=Searching...
oform.baseselect.ajax_error=Loading failed
oform.baseselect.short_input=Please enter 1 or more characters
oform.baseselect.reset=Reset
oform.groupselect.short_input=Enter a group name
oform.groupselect.placeholder=Select a group...
oform.groupselect.add=Add
oform.groupselect.no_description=No description

#
# simple modal
#
simplemodal.done=Done
simplemodal.ok=Ok
simplemodal.close=Close

#
# Jasmine Mock Values
#
jasmine.test.title=My Title
jasmine.test.subtitle=My Subtitle
jasmine.test.label=My Label
jasmine.test.sublabel=My Sulabel
jasmine.test.tooltip=My Tooltip
jasmine.test.explain=My Explain
jasmine.test.placeholder=My Placeholder

# Okta Training
#
servicecloud.training = Training
servicecloud.oktaTraining = Okta Training
servicecloud.getTraining = Watch in-depth videos or sign up for instructor led classes.

#
#  Admin Devices UI
#
devices.devicename=Device Name
devices.devicename.and.user=Device Name & User
devices.serialnumber=Serial Number
devices.devicetype=Device Type
devices.platformAndType=Platform & Type
devices.status=Status
devices.user=User
device.action=Actions
device.action.title=Device Actions
device.action.notSupported=Not supported by this device
devices.enrollment=Enrollment
devices.devices=Devices
devices.users=Users
devices.deprovision.button=Deprovision
devices.configureomm=Configure Okta Mobility Management
devices.deprovision.confirm.title=Deprovision Mobile Devices
devices.deprovision.confirm.text=Are you sure you want to deprovision {0} device(s)?
devices.deprovision.confirm.hint=IMPORTANT: Once deprovisioned, this action will wipe the user's device of any company managed applications without touching any of the user's personal information.
devices.deprovision.confirm.button=Deprovision
devices.last.reported=Last Reported
devices.actions=Actions

devices.unenroll.button.hover=Deprovision device
devices.unenroll.confirm.title=Confirm Deprovision
devices.unenroll.confirm.text=Are you sure you want to deprovision {0}\'s {1} {2}?
devices.unenroll.confirm.hint.title=Deprovision an {0} device
devices.unenroll.confirm.hint.text=The device will no longer be managed and all managed apps will be removed (the Okta Mobile app remains). This does not remove the user's personal data.
devices.unenroll.confirm.hint.lock.sent.title=If you deprovision this device you won't be able to wipe it
devices.unenroll.confirm.hint.lock.sent.text=You previously issued a remote lock for this device. Once you deprovision the device it's no longer managed, so if the device was lost or stolen you won't be able to wipe it.

devices.status.jailbroken=Jailbroken/Rooted
devices.status.jailbroken.description=Total number of devices that are jailbroken or rooted.
devices.status.unencrypted=Unencrypted
devices.status.unencrypted.description=Total number of devices that are unencrypted or encryption is unknown.

devices.wipe.button=Wipe
devices.wipe.button.hover=Wipe device
devices.wipe.confirm.title=Confirm Wipe
devices.wipe.confirm.text=Are you sure you want to wipe {0}\'s {1} {2}?
devices.wipe.confirm.hint.title=This deletes everything on the device, including personal data like photos and text messages, and cannot be undone.

devices.factoryreset.button=Factory Reset
devices.factoryreset.confirm.title=Factory Reset Devices
devices.factoryreset.confirm.text=Are you sure you want to do a factory reset on the device?
devices.factoryreset.confirm.hint=IMPORTANT: This action will delete all device contents and reset the device to the original factory settings.
devices.factoryreset.confirm.button=Erase Device

device.status.encrypted=Encrypted

device.remotelock.button=Remote Lock
device.remotelock.confirm.title=Remote Lock Device
device.remotelock.confirm.text=Are you sure you want to do a remote lock on this device?
device.remotelock.confirm.hint=IMPORTANT: This action will lock this device remotely and display the message and phone number provided?
device.remotelock.message.label=Message
device.remotelock.phone.label=Phone Number
device.remotelock.confirm.button=Remote Lock Device

# Reset passcode on android device
device.resetpasscode.button=Reset Passcode
device.resetpasscode.confirm.title=Reset Device Passcode
device.resetpasscode.confirm.text=Are you sure you want to reset the passcode on this device?
device.resetpasscode.confirm.hint=IMPORTANT: This action will reset the passcode to the value entered below. Please communicate the new passcode to the owner of the device.
device.resetpasscode.confirm.button=Reset Passcode

# Clear passcode on ios device
device.clearpasscode.button=Clear Passcode
device.clearpasscode.confirm.title=Clear Passcode
device.clearpasscode.confirm.text=Are you sure you want to do a clear passcode on this device?
device.clearpasscode.confirm.hint=This action will remove the passcode requirements and unlock the device.

devices.filter.enrollmentstatus=Status
devices.filter.enrollmentstatus.all=All
devices.filter.enrollmentstatus.any=Any
devices.filter.enrollmentstatus.enrolled=Enrolled
devices.filter.enrollmentstatus.deprovisioned=Deprovisioned
devices.filter.enrollmentstatus.inactive=Inactive
devices.filter.activity=Device Activity
devices.filter.activity.any=Any
devices.filter.activity.enrolled.recent=Enrolled within 30 days
devices.filter.activity.deprovisioned.recent=Deprovisioned within 30 days
devices.filter.activity.inactive.recent=Inactive for 30 days
devices.filter.security=Device Security
devices.filter.security.any=Any
devices.filter.security.rooted=Jailbroken/rooted
devices.filter.jailbroken=Filter jailbroken/rooted devices
devices.filter.os=OS
devices.filter.activity.title=30 Day Activity
devices.filter.security.title=Security
devices.filter.os.title=OS



device.deprovision.confirm.title=Deprovision Mobile Device
device.deprovision.confirm.text=Are you sure you want to deprovision this device?
device.factoryreset.confirm.title=Factory Reset Device
device.factoryreset.confirm.text=Are you sure you want to do a factory reset on this device?

device.lock.sent.header.status.text=Remote lock command sent - waiting for the device to execute it
device.wipe.sent.header.status.text=Wipe command sent - waiting for the device to execute it
device.lock.executed.header.status.text=Remote locked
device.lock.issued=Remote lock issued
device.wipe.view.passcode.title=View Wipe Passcode
device.wipe.view.passcode.subtitle=After the device is wiped it's locked with this passcode:
device.lock.view.passcode.title=View Remote Lock Passcode
device.lock.view.passcode.subtitle=Remote lock passcode:
device.wipe.confirm.content=This deletes everything on the device, including personal data and, cannot be undone.
device.wipe.confirm.subtitle=Are you sure you want to wipe this device?
device.wipe.confirm.title=Confirm Wipe
device.wipe.confirm.save=Wipe Device
device.wipe.sent.confirm.subtitle=A wipe command was sent with this passcode:
device.wipe.sent.confirm.title=Wipe Command Sent
device.confirm.close=Close
device.confirm.passcode.later=You can view this passcode later.
device.remote.lock.confirm.content=Are you sure you want to remote lock this device?
device.remote.lock.confirm.title=Confirm Remote Lock
device.remote.lock.confirm.save=Remote Lock
device.lock.sent.confirm.subtitle=A remote lock command was sent with this passcode:
device.lock.sent.confirm.title=Remote Lock Command Sent
device.wipe.executed.header.status.text= Deprovisioned via wipe
device.status.wipe.pending=Wipe pending
device.status.lock.pending=Lock pending
device.status.locked=Locked

#
# CrashPlan Pro
#
app.crashplanpro.api.rest.unexpected_response_status=Unexpected response status from server: {0}. Expected status: {1}
app.crashplanpro.api.invalid_set_of_roles=Current API account (username: {0}) does not have required roles to do API calls. It should have one of these roles: {1}
app.crashplanpro.api.auth.invalid_login_url=Invalid login URL specified.
app.crashplanpro.api.user_not_found=User cannot be found in CrashPlan. {0}
app.crashplanpro.api.user_has_invalid_fields=User has invalid fields, please verify and try again. {0}
app.crashplanpro.api.ambiguous_search_results_by_user=Ambiguous search results. There are more than one user with same username was found. Username: {0}

#
# AppUser
#
appuser.grouporigin.explain=set by <a href="{0}" target="_blank">{1} group</a>
appuser.credential.explain=Visit the app\'s <a href="{0}" target="_blank" class="text-link">sign-on options</a> to modify

#
# Groups Page UI
#
groups.tab=All
groups.group.created=Group "{0}" Created!
groups.group.source=Source
groups.group.name=Name
groups.users=People
groups.apps=Apps
groups.dirs=Directories
groups.add.group=Add Group
groups.add.group.subtitle=Add groups so you can quickly perform actions across large sets of people.
groups.group.name.placeholder=Enter a name for this group...
groups.group.description.placeholder=Enter a description for this group...
groups.group.description=Group Description

#
# Groups Rules UI
#
groups.rules.tab=Rules
groups.rules.empty.title=No rules added
groups.rules.empty.subtitle={0}Add a rule{1} to automate group memberships
groups.rules.rule=Rule
groups.rules.status=Status
groups.rules.actions=Actions
groups.rules.rule.exclude=Exclude
groups.rules.rule.assignTo=Assign to
groups.rules.rule.add=Add Rule
groups.rules.rule.edit=Edit Rule
groups.rules.rule.save=Save Rule
groups.rules.rule.delete=Delete Rule
groups.rules.rule.tooltip.none.edit=Deactivate this rule to edit it
groups.rules.rule.tooltip.invalid.edit=This rule is invalid and cannot be edited. You can delete this rule.
groups.rules.rule.tooltip.none.delete=Deactivate this rule to delete it
groups.rules.rule.name=Name
groups.rules.rule.active=Active
groups.rules.rule.activate=Activate
groups.rules.rule.activate.subtitle=Rule will evaluate once on all users and then trigger on subsequent user profile updates
groups.rules.rule.inactive=Inactive
groups.rules.rule.deactivate=Deactivate
groups.rules.rule.definition.title=RULE definition
groups.rules.rule.definition.assign.placeholder=Select a group...
groups.rules.rule.options.title=OPTIONS
groups.rules.rule.excludeUsers.label=Exclude users
groups.rules.rule.excludeGroups.label=Exclude groups
groups.rules.rule.condition.userAttribute.type=User attribute
groups.rules.rule.condition.groupMembership.type=Group membership
groups.rules.rule.condition.conjunction.if.label=If
groups.rules.rule.condition.conjunction.and.label=And
groups.rules.rule.condition.conjunction.then.label=Then
groups.rules.rule.condition.userAttribute.equals=Equals
groups.rules.rule.condition.userAttribute.equals.naturalLanguage={0} equals {1}
groups.rules.rule.condition.userAttribute.startsWith=Starts with
groups.rules.rule.condition.userAttribute.startsWith.naturalLanguage={0} starts with {1}
groups.rules.rule.condition.userAttribute.contains=Contains
groups.rules.rule.condition.userAttribute.contains.naturalLanguage={0} contains {1}
groups.rules.rule.condition.userAttribute.name.placeholder=Select an attribute...
groups.rules.rule.condition.userAttribute.value.placeholder=Enter a value
groups.rules.rule.condition.groupMembership.isOfAny=Any of
groups.rules.rule.condition.groupMembership.value.placeholder=Enter a group...
groups.rules.rule.condition.groupMembership.isOfAny.naturalLanguage=user is a member of any of
groups.rules.rule.condition.validation.error=Condition is required
groups.rules.rule.builder.label=Expression Builder
groups.rules.rule.editor.label=Expression Editor
groups.rules.rule.editor.placeholder=Enter an expression...
groups.rules.rule.delete.removeUsers.label=Are you sure you want to delete this rule?
groups.rules.rule.delete.removeUsers.placeholder=Remove users from assigned groups
groups.rules.rule.delete.removeUsers.explain=If selected, this option will remove users from groups assigned by this rule. This will affect ALL users assigned by this rule and cannot be undone.
groups.rules.rule.delete.success=Rule {0} deleted
groups.rules.rule.activate.fail=Failed to activate the rule
groups.rules.rule.deactivate.fail=Failed to deactivate the rule
groups.rules.rule.add.success=Rule {0} added
groups.rules.rule.edit.success=Rule {0} updated
groups.rules.rule.preview.userPicker.placeholder=Enter an Okta user to preview this rule
groups.rules.rule.preview.error=We found some errors. Please review the form and make corrections.
groups.rules.rule.preview.match=User matches rule
groups.rules.rule.preview.notmatch=User doesn\'t match rule
groups.rules.rule.invalid.label=Invalid
groups.rules.rule.invalid.tooltip=This rule is invalid and deleting it won’t affect your group memberships.
groups.rules.rule.showFewerUsers=Show fewer users
groups.rules.rule.showOtherUser={0} other user
groups.rules.rule.showOtherUsers={0} other users

# Admin Group UI
#
group.row.assign=Assign
group.row.assigned=Assigned
group.confirm.delete.message=Are you sure you want to remove {0} from this group?
group.confirm.delete.title=Unassign App
group.picker.placeholder=Type group to add...
group.noprofile.modal.message=There are no {0} user attributes that can be set at a group level. You can edit an individual's {1} user attributes under the People tab for {2}.

#
# Admin User Profile
#
user.profile.button.disconnect = Disconnect
user.profile.modal.important = Important
user.profile.modal.unlock = Unlock
user.profile.button.disconnect_from_profile_master = Disconnect from {0}
user.profile.button.suspend = Suspend
user.profile.button.unsuspend = Unsuspend
user.profile.button.activate = Activate
user.profile.button.deactivate = Deactivate
user.profile.button.reset_password = Reset Password
user.profile.button.reset_mfa = Reset Multifactor
user.profile.button.unlock_account = Unlock Account
user.profile.button.more_actions = More Actions
user.profile.button.title.suspend = Suspend Person
user.profile.button.title.unsuspend = Unsuspend Person
user.profile.modal.activate.title = Activate Person
user.profile.modal.activate.header = Are you sure you want to activate {0}?
user.profile.modal.activate.content_part_one = An activation email will be sent to this person informing \
    them that their account is now active. You can edit the content of these emails on the
user.profile.modal.activate.content_part_two = page.
user.profile.modal.activate.customize_email = customize email
user.profile.modal.change_profile_master.title = Disconnect User Profile from {0}
user.profile.modal.change_profile_master.header = Are you sure you want to disconnect {0} from Active Directory?
user.profile.modal.change_profile_master.content_part_one = This user will not be able to authenticate with their \
  {0} password once their profile is disconnected.
user.profile.modal.change_profile_master.content_part_two = Reset the user's password to email \
  a link to set an Okta password.
user.profile.modal.change_profile_master.content_part_three = This user does not have an Okta password and can only \
  authenticate via an Identity Provider once their profile is disconnected.
user.profile.modal.change_profile_master.content_part_four = This user can continue to authenticate with their \
  existing Okta password once their profile is disconnected.
user.profile.modal.change_profile_master.content_part_five = Would you like to reset the user's password?
user.profile.modal.change_profile_master.content_part_six = Reset password now · recommended
user.profile.modal.change_profile_master.content_part_sevel = Don't reset password
user.profile.modal.clear_sessions.title = Clear User Sessions
user.profile.modal.clear_sessions.prompt = Are you sure you want to clear sessions for {0}?
user.profile.modal.clear_sessions.explain = Clearing sessions will sign out the user from any active session across all their devices.
user.profile.modal.clear_sessions.submit = Clear Sessions
user.profile.modal.clear_sessions.success = User sessions cleared
user.profile.modal.deactivate.title = Deactivate Person
user.profile.modal.deactivate.header = Are you sure you want to deactivate {0}?
user.profile.modal.deactivate.content = : Once deactivated, this person cannot sign-in to Okta to access their \
  applications. You can always reactivate this person's account at a later time, \
  but they will have to reset their password.
user.profile.modal.reset_password.title = Reset Password
user.profile.modal.reset_password.subtitle = Are you sure you want to reset {0}'s password?
user.profile.modal.reset_password.content_part_one = A password reset link is sent to this user's primary
user.profile.modal.reset_password.content_part_two = and secondary
user.profile.modal.reset_password.content_part_three = email address; the password is not automatically reset. \
  The password reset link will expire {0} after it is sent.
user.profile.modal.reset_password.content_part_four = Reset Password Link
user.profile.modal.reset_password.content_part_five = A temporary password will be created for the account and \
  shown to you. The account will be marked as expired so that the user will \
  be required to change the password when they login.
user.profile.modal.reset_password.content_part_six = Temporary Password
user.profile.modal.reset_password.cycle_password = This user is assigned apps for which password cycle is enabled, so \
  random passwords will be generated to those apps when the user's Okta password is reset.
user.profile.modal.reset_password.cycle_password.read_only = This user is assigned apps for which password cycle is enabled. \
  However, random passwords will not be generated to those apps during read-only mode when the user's Okta password is reset.
user.profile.modal.temp_password.subtitle = Temporary password generated.
user.profile.modal.temp_password.content_part_one = Generated password is a one-time password. \
  User account will be marked as expired.
user.profile.modal.temp_password.content_part_two = The temporary account password is:
user.profile.modal.unlock_account.title = Unlock Person
user.profile.modal.unlock_account.content = : Once unlocked, this person can sign-in to Okta to access \
  their applications.
user.profile.tombstone = Tombstone Username
user.profile.tombstone.header = Tombstone username
user.profile.tombstone.content = Tomestoning a username will add a unique value to the username. Only do this if you need to reuse this username for a new user.
user.profile.tombstoned.header = Username is tombstoned
user.profile.tombstoned.content = This username has been tombstoned. Active the user to change their username.
user.profile.tombstone.dialog.label = Are you sure you want to tombstone {0} ({1})?
user.profile.tombstone.dialog.description = Only do this if you need to reuse the username for a new user. This action cannot be undone.
user.profile.form.title = Attributes

#
# Admin Profile Editor
#
universal-directory.title=Profile Editor
universal-directory.tab.profiles=Profiles
universal-directory.tab.mappings=Profile Mappings
universal-directory.profiles.variablename=Variable name
universal-directory.profiles.displayname=Display name
universal-directory.callout.header=Learn about Universal Directory
universal-directory.callout.goToDocumentation=Go to Documentation
universal-directory.callout.content=Universal Directory allows you to store employee, partner, and customer profiles in Okta, generating a user-based, single source of truth. Using Profile Editor, you can extend and customize user and app-specific profiles, as well as transform and map attributes between profiles.  All of these features provide robust provisioning support.
universal-directory.callout.watchVideo=Watch Video
universal-directory.localApp.attribute.explain=Local app attributes are only stored in Okta and not created in {0}.

universal-directory.profiles.filter.all=All
universal-directory.profiles.filter.app=Apps
universal-directory.profiles.filter.directory=Directories
universal-directory.profiles.filter.idp=Identity Providers
universal-directory.profiles.filter.empty.title=No apps added
universal-directory.profiles.column.profile=Profile
universal-directory.profiles.column.action=Actions
universal-directory.profiles.profile.edit=Profile
universal-directory.profiles.mappings.edit=Mappings
universal-directory.profile.detail.backbutton=Back to profiles

#
# Admin Profile Editor - Profiles
#
universal-directory.profiles.attribute.sidebar.empty=No custom attributes added.
universal-directory.profiles.empty.title=Choose a profile to view its attributes.
universal-directory.profiles.empty.subtitle=Profiles can be customized to enhance the user data <br> Okta exchanges with your apps and directories.
universal-directory.profiles.schemas.header=Attributes
universal-directory.profiles.schemas.toolbar.button.add=Add an attribute manually.
universal-directory.profiles.profile.form.save=Save Profile
universal-directory.profiles.profile.form.save.success=Profile {0} is saved.
universal-directory.profiles.profile.form.name.tooltip=The variable name is used to refer to this profile in mappings and custom expressions when you need to full qualify an attribute.
universal-directory.profiles.profile.master=Profile master priority
universal-directory.profiles.profile.master.tooltip=Profile master list.
universal-directory.profiles.profile.master.config.link=Update profile masters configuration
universal-directory.profiles.attribute.form.title.tooltip=This display name is used as a human readable label when the attribute appears in the UI.
universal-directory.profiles.attribute.form.name.tooltip=The variable name is used to refer to this attribute in profile mappings and expressions.
universal-directory.profiles.attribute.form.externalname=External name
universal-directory.profiles.attribute.form.externalname.tooltip=The external name is the name of the attribute in the IdP assertion or profile API such as a SAML attribute name.
universal-directory.profiles.attribute.form.externalnamespace=External namespace
universal-directory.profiles.attribute.form.externalnamespace.tooltip=The external namespace is used to refer to the namespace in the external system.
universal-directory.profiles.attribute.form.displaytype=Data type
universal-directory.profiles.attribute.form.displaytype.string.range=Attribute Length
universal-directory.profiles.attribute.form.displaytype.nonstring.range=Attribute Range
universal-directory.profiles.attribute.form.minval.placeholder=min
universal-directory.profiles.attribute.form.maxval.placeholder=max
universal-directory.profiles.attribute.form.required=Attribute required
universal-directory.profiles.attribute.form.displayscope=Scope
universal-directory.profiles.attribute.form.attributeType=Attribute type
universal-directory.profiles.attribute.form.attributeType.explain=Most attributes are personal. Only select entitlement if you want to set the value of this attributeat a group level.
universal-directory.profiles.attribute.form.attributeType.personal=Personal
universal-directory.profiles.attribute.form.attributeType.entitlement=Entitlement
universal-directory.profiles.attribute.form.union.display=Group Priority
universal-directory.profiles.attribute.form.union.tooltip=When users belong to multiple groups, this setting determines whether to use group priority when setting values for array attributes or whether to combine values across groups.
universal-directory.profiles.attribute.form.union.enable.display=Use Group Priority
universal-directory.profiles.attribute.form.union.disable.display=Combine values across groups
universal-directory.profiles.attribute.form.mutability=Mutability
universal-directory.profiles.attribute.form.userpermission=User permission
universal-directory.profiles.attribute.enduser.permission.hide=Hide
universal-directory.profiles.attribute.enduser.permission.readonly=Read Only
universal-directory.profiles.attribute.enduser.permission.readwrite=Read-Write
universal-directory.profiles.attribute.master=Master priority
universal-directory.profiles.attribute.master.inherit=Inherit from profile master
universal-directory.profiles.attribute.master.oktamastered=Inherit from Okta
universal-directory.profiles.attribute.master.override=Override profile master
universal-directory.profiles.attribute.master.tooltip=By default, attributes are managed by your Profile Masters. You can override this default by choosing to master an attribute in Okta or define an Attribute specific master.
universal-directory.profiles.attribute.master.add=Add Master
universal-directory.profiles.attribute.form.add=Add Attribute
universal-directory.profiles.attribute.form.save=Save Attribute
universal-directory.profiles.attribute.edit=Edit Profile
universal-directory.profiles.attribute.delete.title=Delete Attribute
universal-directory.profiles.attribute.delete.subtitle=Are you sure you want to delete {0}?
universal-directory.profiles.attribute.delete.save=Delete Attribute
universal-directory.profiles.attribute.delete.success=Attribute {0} deleted
universal-directory.profiles.attribute.form.add.subtitle=Local app attributes are only stored on Okta and not created in {0}. Use local attributes if you plan to add the attribute to {1} or only want to store the mapped value in Okta.

#
# Admin Profile Editor - Profile Schema List
#
universal-directory.profiles.schemalist.displayname=Display Name
universal-directory.profiles.schemalist.variablename=Variable Name
universal-directory.profiles.schemalist.datatype=Data Type
universal-directory.profiles.schemalist.attributetype=Attribute Type
universal-directory.profiles.schemalist.filtersheader=FILTERS
universal-directory.profiles.schemalist.button.addattribute=Add Attribute
universal-directory.profiles.schemalist.button.mapattributes=Map Attributes


#
# Admin Profile Editor - Profile Mappings
#
universal-directory.mappings.appslist.edit=Edit Mappings
universal-directory.mappings.sourceinput.label.expression=Expression
universal-directory.mappings.sourceinput.label.empty=Add mapping
universal-directory.mappings.sourceinput.placeholder=Choose an attribute or enter an expression...
universal-directory.mappings.username.appToOkta.explain=Use default username setting for Okta user
universal-directory.mappings.username.oktaToAd.explain=Use default common name setting for {0}
universal-directory.mappings.username.oktaToApp.explain=Use default username setting for {0}
universal-directory.mappings.typeahead.footer.expressionsHelpText=Expressions allow you to write code to transform property values
universal-directory.mappings.typeahead.footer.expressionsLinkText=Expression Language Reference
universal-directory.mappings.sourceinput.expression.label=Expression
universal-directory.mappings.sourceinput.empty.label=Add mapping
universal-directory.mappings.save=Save Mappings
universal-directory.mappings.save.success.prompt.title=Mappings saved!
universal-directory.mappings.save.success.prompt.subtitle=Do you want to apply these mappings to all users with this profile?
universal-directory.mappings.save.success.prompt.managerAssistant.subtitle=There were no changes to the mappings, but you may want to update Manager and Assistant information. Apply the mappings to all users with this profile?
universal-directory.mappings.apply=Apply updates now
universal-directory.mappings.apply.cancel=Don't apply updates
universal-directory.mappings.apply.success=Reapply mappings job started
universal-directory.mappings.preview.placeholder=Enter an Okta user to preview their mappings...
universal-directory.mappings.preview.exit=Exit Preview

#
# Plugins SuperUser UI
#
plugins.by.browser=Plugins by Browser
plugins.version.number=Version Number
plugins.lifecycle=Life Cycle
plugins.release.date=Release Date
plugins.orgs=Orgs
plugins.browser.type=Browser Type
plugins.browsers=Browsers
plugins.change.org.assignments=Change Org Assignments
plugins.assign.plugin.version=Assign this plugin version to Organization
plugins.browser.ie9=Internet Explorer
plugins.browser.firefox=Firefox
plugins.browser.safari=Safari
plugins.browser.chrome=Chrome
plugins.browser.shared.js=Shared JS

# Clarizen
app.clarizen.api.error.no_admin_rights=Provided credentials does not contain administrator permissions
app.clarizen.api.error.rate_limit.exceeded=Rate limit exceeded for Clarizen. {0}

#
# Adobe Creative Cloud
#
adobe_cc.api.error.create.user.incorrect_domain=Cannot create accounts outside of your domain {0}
adobe_cc.api.error.auth_src_code.decryption=Auth Src Code is invalid

# GoodData
#
gooddata.api.error.user.not.admin=Specified user is not a domain admin.
gooddata.api.error.project.assignment.failed=Failed to assign user to project {0}
gooddata.api.error.project.not.found=Project {0} not found
gooddata.api.error.incorrect.roles.count=Incorrect roles count for user {0}: only zero or one role per project should be selected
gooddata.api.error.ratelimit.help.text=You may contact GoodData support to check if API rate limit can be increased

# Adobe CQ
app.adobe_cq.api.error.response_format=Server response has invalid format

# BlueJeans
app.bluejeans.api.error.email_already_taken=E-mail {0} is already in use in BlueJeans application. Please contact BlueJeans support in order to add it to your Enterprise

# Admin App - Acoount Settings
# Email Notifications
email.notifications.title = Email Notifications
email.notifications.subtitle = Select the email notifications that you want to receive.
email.notifications.account.subtitle = System Notifications
email.notifications.company.subtitle = Okta Communications

#
# Admin UI - SignInPageSettings
#
signin.title=Sign-In Page
signin.subtitle=You can change the heading, labels, and customize help links on your users\' sign-in page.
signin.section.heading=Heading
signin.label.signin=Sign In
signin.section.fields=Username & Password Fields
signin.label.username=Username label
signin.label.username.inline=Username info tip
signin.label.password=Password label
signin.label.password.inline=Password info tip
signin.section.help.links=Customized Help Links
signin.label.forgotten.password=Forgotten password
signin.label.forgotten.password.url=Forgotten password URL
signin.label.unlock.account=Unlock account
signin.label.unlock.account.url=Unlock account URL
signin.label.help=Okta help
signin.label.help.url=Okta help URL
signin.label.custom1=Custom link 1 text
signin.label.custom1.url=Custom link 1 URL
signin.label.custom2=Custom link 2 text
signin.label.custom2.url=Custom link 2 URL
signin.reset=Reset values
#- SignInPageSettings

#
# Admin UI - Settings - Appearance
#
signin.config.title=Sign-In Configuration
signin.config.subtitle=Enable the new Okta Sign-In Page and custom background.
signin.config.widget.label=New Sign-In Page
signin.config.bgimage.label=Sign-In Background Image
signin.config.bgimage.upload=Upload Image
signin.config.bgimage.tooltip=The image must be a png, jpg, or gif file, and be less than 2MB in size.


#
# Notifications
#
notifications = Notifications
notifications.date = Date
notifications.message = Message
notifications.actions = Actions
notifications.newmessage.button = Send New Message
notifications.newmessage.title = Send a Message to Your End Users
notifications.newmessage.label = Short message
notifications.newmessage.limit = {0} characters remaining
notifications.newmessage.over = {0} characters over
notifications.newmessage.send = Send to Everyone
notifications.explanation.title = Send a message to your end users
notifications.explanation.description = You can write a message that appears automatically on your end users' Okta Home page. End users can return to review old messages at any time.
notifications.delete = Delete Message
notifications.delete.question = Are you sure you want to delete this message?
notifications.delete.warning = If you delete this message, your users cannot refer back to it in their message history.
notifications.delete.ok = Delete
notifications.list.empty = You haven't sent any messages.
#- Notifications

#
# BaseModel Validation
#
model.validation.field.blank = The field cannot be left blank
model.validation.field.wrong.type = The field is of the wrong type
model.validation.field.invalid = The field has an invalid value
model.validation.field.value.not.allowed = The field value is not allowed
model.validation.field.array.minItems = The array does not have enough items
model.validation.field.array.unique = The array can only have unique values
model.validation.field.too.long = This field cannot exceed {0} characters
#- BaseModel Validation


#
# User Profile validation error messages (for UPDATE_FROM_MASTER_FAILED event)
#
blank.config.email = Email should not be blank
blank.config.firstName = First name should not be blank
blank.config.lastName = Last name should not be blank
doesNotMatchPattern.config.email = Email should be properly formatted
doesNotMatchPattern.config.secondemail = Secondary email should be properly formatted
notUniqueWithinObject.config.email = Email and secondary email should not be the same

#
#  Okta org
#
app.okta_org2org.user_management.error.download_app_schema=Error occured while downloading app schema
app.okta_org2org.user_management.error.download_user_type=Error occured while downloading user type
app.okta_org2org.user_management.error.parse_schema=Error occured while parsing user app schema
app.okta_org2org.user_management.error.schema.property.not.exist=Json field={0} does not exist for object={1}

#
# BambooHR app
#
bamboohr.api.error.parsing.create.user.response=Failed to parse create employee response. {0}
bamboohr.api.error.list.for.group.is.null=List not found in BambooHR instance: {0}
bamboohr.api.error.download_app_schema=Error while downloading application schema: {0}

#
# Roles Assignment API
#
role.api.target.apps.too_many_records = The number of app targets is too large.
role.api.target.groups.too_many_records = The number of group targets is too large.

#
# HTTP
#
http.post=HTTP POST
http.redirect=HTTP REDIRECT

#
# Email
#
email.name=email

#
# Admin UI - Security|Multi-Factor|Factor Types
#
mfa.factorTypes.acceptableFactors=Acceptable factors
mfa.factorTypes.configure=Configure
mfa.factorTypes.duoSecurity=Duo Security
mfa.factorTypes.edit=Edit
mfa.factorTypes.enablePushNotification=Enable Push Notification
mfa.factorTypes.requireTouchIdForOktaVerify=Require TouchId for Okta Verify
mfa.factorTypes.factorType=Factor Type
mfa.factorTypes.factorTypes=Factor Types
mfa.factorTypes.googleAuthenticator=Google Authenticator
mfa.factorTypes.multi_factor=Multifactor Policies
mfa.factorTypes.oktaVerify=Okta Verify
mfa.factorTypes.rsa=RSA SecurID
mfa.factorTypes.on_PremMFA=On-Prem MFA
mfa.factorTypes.promptUsersToUpgrade=Prompt users to upgrade
mfa.factorTypes.securityQuestion=Security Question
mfa.factorTypes.smsAuthentication=SMS Authentication
mfa.factorTypes.voiceCallAuthentication=Voice Call Authentication
mfa.factorTypes.subtitle=Factor types are used when signing into Okta or a specific application. MFA is not enabled until you add an Okta or app sign on policy.
mfa.factorTypes.symantecVIP=Symantec VIP

#
# Admin UI - Security|Multi-Factor|On-Prem
#
mfa.onprem.hostname.label=Hostname
mfa.onprem.sharedSecret.label=Shared secret
mfa.onprem.authPort.label=Authentication port
mfa.onprem.addAgent=Add New Agent
mfa.onprem.usernamerule.custom = Custom
mfa.onprem.usernamerule.email = Email
mfa.onprem.usernamerule.emailPrefix = Email prefix
mfa.onprem.usernamerule.oktaUsername = Okta username
mfa.onprem.usernamerule.oktaUsernamePrefix = Okta username prefix
mfa.onprem.usernamerule.explain = Format default usernames based on a custom expression
mfa.onprem.confirm.warnBox={0} is already configured. There can only be a single agent configured at a time.
mfa.onprem.confirm.question=Are you sure you want to enable {0}?
mfa.onprem.confirm.question.explain=IMPORTANT: Once {0} is enabled, the {1} agent configurations will no longer be valid and will be disabled.
# On-Prem specifics
mfa.onprem.title=On-Prem Multifactor Authentication Settings
mfa.onprem.provider.label=Provider name
mfa.onprem.usernameRule.label=Provider username format
mfa.onprem.disabled.message=On-Prem MFA is not enabled.
mfa.onprem.enable=Enable On-Prem MFA
mfa.onprem.disable=Disable On-Prem MFA
mfa.onprem.help.configure=Configure your On-Prem MFA settings.
mfa.onprem.factor.custom=Custom
# RSA Specifics
mfa.rsa.title=RSA SecurID Settings
mfa.rsa.usernameRule.label=RSA username format
mfa.rsa.disabled.message=RSA SecurID is not enabled.
mfa.rsa.enable=Enable RSA SecurID
mfa.rsa.disable=Disable RSA SecurID
mfa.rsa.help.configure=Configure your RSA SecurID settings.

#
# Admin UI - Security|Policies|Password
#
policies.mobile.toolbar.addPolicy=Add New Mobile Policy
policies.mobile.afw.register.addDomainExplain=Android for Work will share settings with this Google Apps integration.
policies.mobile.toolbar.addDevicePolicy=Add Device Policy
policies.mobile.afw.title=Step {0} of {1}: {2}

policies.mobile.afw.selectDomain.title=Select the Google Apps Instance

policies.mobile.afw.register.title=Enter Android for Work token
policies.mobile.afw.register.domain.label=Your company\'s domain
policies.mobile.afw.register.token.label=Your Google token
policies.mobile.afw.register.token.explain=Learn how to generate a token
policies.mobile.afw.register.samlButton=View Setup Instructions
policies.mobile.afw.register.token.error=There was an error confirming this token with Google. Make sure your domain is correct and try entering your Google token again. If that doesn\'t work, try creating a new Google token.
policies.mobile.afw.register.appCreation.appLabel=Google Apps (Android for Work)
policies.mobile.afw.register.appCreation.error.default=Google app creation failed.
policies.mobile.afw.register.appCreation.error.duplicate=An active Google Apps instance with the label \"Google Apps (Android for Work)\" already exists.

policies.mobile.afw.oktaProvision.title=Create Google accounts for your users
policies.mobile.afw.oktaProvision.label=Google account creation
policies.mobile.afw.oktaProvision.option.enable=Okta will automatically create Google accounts
policies.mobile.afw.oktaProvision.option.disable=I\'ll create the Google accounts
policies.mobile.afw.oktaProvision.explain.enable=To enable this option:
policies.mobile.afw.oktaProvision.button.enable=Authenticate with Google
policies.mobile.afw.oktaProvision.explain.disable=Note: A user can\'t enroll without a Google account.
policies.mobile.afw.oktaProvision.error=Click the "Authenticate with Google" button. This opens a popup where you need to choose your Google account and then allow Okta access.

policies.mobile.afw.authenticate.title=Choose an authentication method
policies.mobile.afw.authenticate.label=Users will authenticate with...
policies.mobile.afw.authenticate.option.saml=SAML (Recommended)
policies.mobile.afw.authenticate.option.passwordPush=Their Okta password
policies.mobile.afw.authenticate.option.userCredential=A password that I set
policies.mobile.afw.authenticate.help.saml=SAML is convenient for your users, but needs extra configuration:
policies.mobile.afw.authenticate.help.okta=The user\'s Okta password will get pushed to Google.
policies.mobile.afw.authenticate.help.other=Since you\'re creating each Google account, you can set their password when you create the account in Google
policies.mobile.afw.authenticate.saml2.error=App update failed. Please try editing later.

policies.mobile.afw.info.title=Understand the Google Apps Integration
policies.mobile.afw.info.header.line1=Android for Work builds on your Google Apps integration.
policies.mobile.afw.info.header.line2=This means 2 things for you:
policies.mobile.afw.info.1.title=Each Android for Work user needs a Google account
policies.mobile.afw.info.1.content=Each user needs a Google account in order to enroll in Android for Work. Before you add someone to an Android for Work policy, make sure they have a Google account.
policies.mobile.afw.info.2.title=Users authenticate with their Google Apps credentials
policies.mobile.afw.info.2.content=Users need to authenticate with Google when they enroll in Android for Work. They\'ll use the same sign on mode and credentials you set up for Google Apps.

policies.mobile.afw.register.deactiveAppsConfirm.title=Android for Work is set up
policies.mobile.afw.register.deactiveAppsConfirm.content.title=Android for Work is set up, but your Android apps are suspended until you approve their permissions
policies.mobile.afw.register.deactiveAppsConfirm.content.subtitle=As part of Android for Work, you need to approve each Android app's permissions. Your organization was using {0} Android apps - your users can't install them until you approve their permissions.
policies.mobile.afw.register.deactiveAppsConfirm.save=Approve App Permissions
policies.mobile.afw.success.notification=Android for Work setup completed

policies.mobile.toolbar.afwSetup=Android for Work Setup
policies.mobile.toolbar.afwDropdown.edit=Edit Settings
policies.mobile.toolbar.afwDropdown.viewSAML=View SAML Setup Instructions
policies.mobile.toolbar.afwDropdown.remove=Remove Android for Work
policies.mobile.afwRemove.confirm.title=Confirm Removal
policies.mobile.afwRemove.confirm.saveButton=Remove
policies.mobile.afwRemove.confirm.text=Are you sure you want to remove Android for Work?
policies.mobile.afwRemove.confirm.hintTitle={0} devices use Android for Work
policies.mobile.afwRemove.confirm.hintText=If you remove Android for Work these devices will no longer be managed and their work container will be deleted. The Okta Mobile app and all managed apps will be removed.
policies.mobile.afwRemove.confirm.hintText.bold=This does not remove the user's personal data.
policies.mobile.afwRemove.successText=Android for Work is removed
policies.mobile.afwRemove.failText=Unregister failed, please try again later.
policies.mobile.apnsCert.title=Apple Certificate Setup

policies.oktaSign_on.toolbar.addPolicy=Add New Okta Sign-on Policy
policies.mfa.toolbar.addPolicy=Add Multifactor Policy
policies.password.delete.dialog.msg=Are you sure you want to delete this policy?
policies.password.delete.dialog.title=Delete Policy
policies.password.dialog.save.createPolicy=Create Policy
policies.password.dialog.save.updatePolicy=Update Policy
policies.password.dialog.title.addPolicy=Add Policy
policies.password.dialog.title.editPolicy=Edit Policy
policies.password.form.accountUnlockedAfter=Account is automatically unlocked after
policies.password.form.allowSMSSelfService=Allow SMS
policies.password.form.appliesTo=Applies to
policies.password.form.assignToGroups=Add group
policies.password.form.characters=characters
policies.password.form.complexityRequirements=Complexity requirements
policies.password.form.days=days
policies.password.form.daysBeforePasswordExpires=days before password expires
policies.password.form.doesnotContainUsername=Does not contain part of username
policies.password.form.enforcePasswordHistory=Enforce password history for last
policies.password.form.error.charCount = Field value should be between {0} and {1} characters
policies.password.form.lockout=Lock out
policies.password.form.lockoutAfter=Lock out user after
policies.password.form.unlock=Unlock
policies.password.form.unlockUsersOktaAndAD=Unlock users in Okta and Active Directory
policies.password.form.unlockUsersOkta=Unlock users in only Okta
policies.password.form.lowerCaseLetter=Lower case letter
policies.password.form.minimumLength=Minimum length
policies.password.form.minimumPasswordAge=Minimum password age is
policies.password.form.minutes=minutes
policies.password.form.number=Number (0-9)
policies.password.form.passwordAge=Password age
policies.password.form.passwordExpiresAfter=Password expires after
policies.password.form.passwordADRequirementsInfo=Important: set the Minimum length and Complexity requirements to match your Active Directory password requirements. These requirements are displayed to the user when they reset their password through Okta and help ensure their password complies.
policies.password.form.passwords=passwords
policies.password.form.policyName=Policy name
policies.password.form.policyDescription=Policy description
policies.password.form.promptUser=Prompt user
policies.password.form.resetUnlockEmailsValidFor=Reset/Unlock recovery emails are valid for
policies.password.form.securityAnswerComplexity=Security answer complexity
policies.password.form.selfServiceOps = Self-service operations
policies.password.form.showLockoutFailures=Show lock out failures
policies.password.form.symbol=Symbol (e.g., !@#$%^&*)
policies.password.form.unsuccessfulAttempts=unsuccessful attempts
policies.password.form.upperCaseLetter=Upper case letter
policies.password.form.sectionTitle.accountRecovery=Account Recovery
policies.password.form.sectionTitle.authProviders=Authentication Providers
policies.password.form.sectionTitle.passwordSettings=Password Settings
policies.password.form.tooltip.description=Description
policies.password.form.tooltip.policyName=TIP: Describe what this policy does
policies.password.rule.access.change=change
policies.password.rule.access.reset=reset
policies.password.rule.access.unlock=unlock
policies.password.rule.dialog.authProviderIs=And authentication provider is
policies.password.rule.dialog.okta=Okta
policies.password.rule.dialog.activeDirectory=Active Directory
policies.password.rule.dialog.changePassword=change password
policies.password.rule.dialog.performSelfServiceReset=perform self-service password reset
policies.password.rule.dialog.performSelfServiceUnlock=perform self-service account unlock
policies.password.rule.dialog.theUserCan=The user can
policies.password.rule.expander.location=Location
policies.password.rule.expander.changePassword=Change Password
policies.password.rule.expander.performSelfServiceReset=Self-Service Password Reset
policies.password.rule.expander.performSelfServiceUnlock=Self-Service Account Unlock
policies.password.rule.header.access=Access
policies.password.rule.header.actions=Actions
policies.password.rule.header.priority=Priority
policies.password.rule.header.provider=Provider
policies.password.rule.header.ruleName=Rule Name
policies.password.rule.header.status=Status
policies.password.select.options.days=days
policies.password.select.options.disabled=Disabled
policies.password.select.options.enabled=Enabled
policies.password.select.options.hours=hours
policies.password.select.options.minutes=minutes
policies.password.toolbar.addPolicy=Add New Password Policy
policies.password.validation.groups=Please assign policy to at least one group
policies.tab.compliance=Compliance
policies.tab.mobile=Mobile
policies.tab.oktaSign_on=Okta Sign-on
policies.tab.password=Password
policies.tab.wifiConfig=Wifi Config
policies.wifiConfig.toolbar.addPolicy=Add New Wifi Config Policy
policies.tab.vpnConfig=VPN Config
policies.vpn.delete=Are you sure you want to delete this policy?


# Device lock modal MDM
model.validation.mobile.deviceLock.pin.invalid="Invalid pin for remote lock"

#
# Admin - Application Mobile
#
mobile.mobileclientassignments.header=Mobile Access
mobile.mobileclientassignments.nativeApp.list.help.title=Add native apps that you developed
mobile.mobileclientassignments.nativeApp.list.help.content=Okta doesn\'t have native apps for {0}, but you can add iOS or Android apps that you developed.
mobile.mobileclientassignments.nativeApp.list.title=Native Applications
mobile.mobileclientassignments.nativeApp.list.empty.title=No native apps
mobile.mobileclientassignments.nativeApp.list.empty.subtitle=You can add native apps that you developed
mobile.mobileclientassignments.nativeApp.column.deployed=Deployed
mobile.mobileclientassignments.nativeApp.column.notDeployed=Not Deployed

mobile.mobileclientassignments.nativeApp.add.label=Add Native App
mobile.mobileclientassignments.nativeApp.add.title.ios=iOS App
mobile.mobileclientassignments.nativeApp.add.title.ipad=iPad App
mobile.mobileclientassignments.nativeApp.add.title.iphone=iPhone App
mobile.mobileclientassignments.nativeApp.add.title.android=Android App
mobile.mobileclientassignments.nativeApp.add.subtitle.hasUniversal=You\'ve already added a Universal iOS App.
mobile.mobileclientassignments.nativeApp.add.subtitle.hasIPhoneAndIPad=You\'ve already added an iPhone and an iPad App.
mobile.mobileclientassignments.nativeApp.add.subtitle.ipad=You\'ll upload your iPad app to Okta.
mobile.mobileclientassignments.nativeApp.add.subtitle.iphone=You\'ll upload your iPhone app to Okta.
mobile.mobileclientassignments.nativeApp.add.subtitle.ios=You\'ll upload your iOS app to Okta.
mobile.mobileclientassignments.nativeApp.add.subtitle.noAfWPolicy=You need to enable Android for Work to upload an Android app.
mobile.mobileclientassignments.nativeApp.add.subtitle.hasAndroid=You\'ve already added an Android app.
mobile.mobileclientassignments.nativeApp.add.subtitle.android=You\'ll link to an Android app in your Google Play Developer account.

mobile.mobileclientassignments.nativeApp.delete.notify.success={0} has been deleted successfully
mobile.mobileclientassignments.nativeApp.delete.notify.error=Could not delete {0}. Please try again later

mobile.mobileclientassignments.nativeApp.form.section.preconfigure=Preconfigure
mobile.mobileclientassignments.nativeApp.form.managedAppConfig.label=Managed app config
mobile.mobileclientassignments.nativeApp.form.managedAppConfig.expander.show=Show keys
mobile.mobileclientassignments.nativeApp.form.managedAppConfig.expander.add=Add keys
mobile.mobileclientassignments.nativeApp.form.managedAppConfig.expander.hide=Hide keys
mobile.mobileclientassignments.nativeApp.form.managedAppConfig.explain.boxEMM=Automatically configured
mobile.mobileclientassignments.nativeApp.form.managedAppConfig.explain.noAfW=<a href="/admin/access/new-policies/mobile" target="_blank">Set up Android for Work</a> to enable this
mobile.mobileclientassignments.nativeApp.form.managedAppConfig.explain.android.noConfig=Not supported by this app
mobile.mobileclientassignments.nativeApp.form.managedAppConfig.explain.android.hasConfig.single={0} key supported
mobile.mobileclientassignments.nativeApp.form.managedAppConfig.explain.android.hasConfig.plural={0} keys supported
mobile.mobileclientassignments.nativeApp.form.managedAppConfig.explain.android.autoConfiguredEAS=Automatically configured if Exchange Active Sync is enabled
mobile.mobileclientassignments.nativeApp.form.managedAppConfig.explain.iOS.noConfig=No keys added
mobile.mobileclientassignments.nativeApp.form.managedAppConfig.explain.iOS.hasConfig=Keys added
mobile.mobileclientassignments.nativeApp.form.distribution.installFromAppStore.full=Users can install the app from the company app store
mobile.mobileclientassignments.nativeApp.form.distribution.installFromAppStore.summary=Available in company app store

# Managed App Config
mobile.mobileclientassignments.nativeApp.form.managedappconfig.active=On
mobile.mobileclientassignments.nativeApp.form.managedappconfig.inactive=Off
mobile.mobileclientassignments.nativeApp.form.managedappconfig.add=Add Another
mobile.mobileclientassignments.nativeApp.form.managedappconfig.error.emptyKey=Configuration field keys cannot be blank
mobile.mobileclientassignments.nativeApp.form.managedappconfig.error.invalidValue=Configuration field values cannot be blank or not match their type (ex. an integer field must have a number value)
mobile.mobileclientassignments.nativeApp.form.managedappconfig.error.duplicatedKey=Configuration field names cannot match
mobile.mobileclientassignments.nativeApp.form.managedappconfig.error.invalidInteger=Configuration field values do not match their type (ex. an integer field must have a number value)

# Exchange Active Sync
mobile.mobileclientassignments.eas.settings.profileName.error.blankValue=Profile Name must not be blank

# iOS
mobile.mobileclientassignments.nativeApp.form.appLocation.label=Where is the app located?
mobile.mobileclientassignments.nativeApp.form.appLocation.current=Use the current app
mobile.mobileclientassignments.nativeApp.form.appLocation.new=I\'ll upload it
mobile.mobileclientassignments.nativeApp.form.uploadedFileInfo.subtitle={0} uploaded on {1}
mobile.mobileclientassignments.nativeApp.form.uploader.label=App binary file ({0})
mobile.mobileclientassignments.nativeApp.form.uploader.error.fileSizeExceeded=Error during app upload: file sizes greater than {0}MB are not currently supported.
mobile.mobileclientassignments.nativeApp.form.distribution.promptToInstall.full=Prompt users to install the app on enrollment (iOS 7+)
mobile.mobileclientassignments.nativeApp.form.distribution.promptToInstall.summary=Prompt to install
mobile.mobileclientassignments.nativeApp.form.distribution.manageIfInstalled.full=If a user already has the app, enable them to make it a managed app from the company app store (iOS 9+)
mobile.mobileclientassignments.nativeApp.form.distribution.manageIfInstalled.summary=Manage existing installation

# Android
mobile.mobileclientassignments.nativeApp.form.packageId.label=App Package ID
mobile.mobileclientassignments.nativeApp.form.packageId.tooltip=Upload your app to your Google Play Developer account and then copy your Package ID here. <a href="http://developer.android.com/distribute/tools/promote/linking.html" target="_blank">Learn more about uploading your app and finding your Package ID.</a>
mobile.mobileclientassignments.nativeApp.form.packageId.placeholder=Enter your package ID
mobile.mobileclientassignments.nativeApp.form.packageId.config=Configure App
mobile.mobileclientassignments.nativeApp.form.packageId.edit=Edit Package ID
mobile.mobileclientassignments.nativeApp.form.section.permissions=Permissions
mobile.mobileclientassignments.nativeApp.form.installPermissions.label=Install permissions
mobile.mobileclientassignments.nativeApp.form.installPermissions.tooltip=As part of Android for Work, you need to approve an Android app's permissions before deploying it to your users.
mobile.mobileclientassignments.nativeApp.form.installPermissions.reapprove.warning=You previously approved this app, but it added new permissions. Users can\'t install the app until you approve the new permissions.
mobile.mobileclientassignments.nativeApp.form.installPermissions.approval=I approve the install permissions (Required)
mobile.mobileclientassignments.nativeApp.form.runTimePermissions.label=Run time permissions
mobile.mobileclientassignments.nativeApp.form.runTimePermissions.tooltip=Not all apps will honor these run time permissions settings. Instead, all run time permissions will be approved regardless of your settings.
mobile.mobileclientassignments.nativeApp.form.runTimePermissions.quickPick.options.none=None
mobile.mobileclientassignments.nativeApp.form.runTimePermissions.quickPick.options.prompt=Ask the user to approve them
mobile.mobileclientassignments.nativeApp.form.runTimePermissions.quickPick.options.allow=Approve all
mobile.mobileclientassignments.nativeApp.form.runTimePermissions.quickPick.options.deny=Deny all
mobile.mobileclientassignments.nativeApp.form.runTimePermissions.quickPick.options.customize=Customize
mobile.mobileclientassignments.nativeApp.form.runTimePermissions.quickPick.explain=This app requests {0}
mobile.mobileclientassignments.nativeApp.form.runTimePermissions.options.prompt=Ask the user to approve
mobile.mobileclientassignments.nativeApp.form.runTimePermissions.options.allow=Approve
mobile.mobileclientassignments.nativeApp.form.runTimePermissions.options.deny=Deny
mobile.mobileclientassignments.nativeApp.form.distribution.silentInstall.full=Silently install the app (AfW)
mobile.mobileclientassignments.nativeApp.form.distribution.silentInstall.summary=Silent install (AfW)
mobile.mobileclientassignments.nativeApp.form.error.deployWithoutApproval=To save the app, you need to approve the install permissions.

# Hosted Mobile App
mobile.mobileclientassignments.nativeApp.form.title.add=Upload Mobile App
mobile.mobileclientassignments.nativeApp.form.title.edit={0} Settings
mobile.mobileclientassignments.nativeApp.form.section.settings=Settings
mobile.mobileclientassignments.nativeApp.form.save.error.title=Upload failed because of a problem with your .ipa file
mobile.mobileclientassignments.nativeApp.form.uploading=Uploading App...
mobile.mobileclientassignments.nativeApp.form.warning.title=You can only upload an {0} app below (since you've already uploaded an {1} app)
mobile.mobileclientassignments.nativeApp.form.distribution.label=Distribution
mobile.mobileclientassignments.nativeApp.form.section.deploy=Deploy
mobile.mobileclientassignments.nativeApp.form.deploy.label=Ready to deploy?
mobile.mobileclientassignments.nativeApp.form.deploy.placeholder=Make this app available to users
mobile.mobileclientassignments.nativeApp.form.deploy.delete.warning.permanent = Deleting your app is permanent
mobile.mobileclientassignments.nativeApp.form.deploy.delete.warning.store = The app will be removed from your company\'s app store.
mobile.mobileclientassignments.nativeApp.form.deploy.delete.warning.uninstall = This does not uninstall the app from your users\' devices.
mobile.mobileclientassignments.nativeApp.form.deploy.warning=The app will be removed from your company\'s app store. This does not uninstall the app from your users\' devices.
mobile.mobileclientassignments.nativeApp.form.emmbox.isSelected.label = Box for EMM
mobile.mobileclientassignments.nativeApp.form.emmbox.isSelected.tooltip = In your Box account, you can choose to support only Box for EMM. This disables the regular version of Box, and only allows managed devices using Android for Work to access Box.
mobile.mobileclientassignments.nativeApp.form.emmbox.publicId.tooltip=Obtain your Public ID from your Box Customer Success Manager (CSM).
mobile.mobileclientassignments.nativeApp.form.emmbox.publicId.label=Box Public ID
mobile.mobileclientassignments.nativeApp.form.emmbox.prefill.label=Prefill username
mobile.mobileclientassignments.nativeApp.form.emmbox.prefill.placeholder=Prefill the username on the Box signin screen
mobile.mobileclientassignments.nativeApp.form.deployWithoutPublicId=To deploy the app, you need to fill in the Box Public ID
mobile.appConfig.header=Managed Application Configurations
mobile.appConfig.list.header.key=Key
mobile.appConfig.list.header.value=Value
mobile.appConfig.list.header.learn=(Learn about <a target="_blank" href="https://support.okta.com/help/articles/Knowledge_Article/Managed-Application-Configurations#ELForManagedAppConfiguration">expressions</a>)

#
# UltiPro app
#
ultipro.api.error.wrong_base_url=Incorrect WS Base URL: {0}
ultipro.api.error.property_for_group_not_found=User attribute [{0}]   used for groups is not found in app schema
ultipro.api.error.empty_phone=Work phone cannot be blank


#
# Admin UI - Directory|People|Person|Reset Multifactor
#

person.resetMfa.title = Reset Multifactor Authentication
person.resetMfa.subtitle = Select authentication factor(s) to reset. This will wipe away the credentials \
      for all configured factors and allow users to set up their factors again.
person.resetMfa.submit = Reset Selected Factors
person.resetMfa.submit.all = Reset All
person.resetMfa.warning = Please select at least one factor to reset
person.resetMfa.confirm = Factors have been reset for this user
person.resetMfa.error = An error has occurred and {0} could not be reset
person.resetMfa.errorAll = One or more factors could not be reset
person.resetMfa.nofactors = No factors are currently set up for this user

#
# Create SAML Integration (create new app, select SAML)
#
samlWizard.attributeStatements.title=Attribute Statements (optional)
samlWizard.attributeStatements.linkText=LEARN MORE

# All things Yubikey
mfa.yubikey.user = User
mfa.yubikey.viewReport = View Report
mfa.yubikey.serialNumber = Serial Number
mfa.yubikey.uploadDate = Upload Date
mfa.yubikey.lastEnrolled = Last Enrolled
mfa.yubikey.config.uploadButton = Upload Seed File
mfa.yubikey.config.unassigned = Unassigned
mfa.yubikey.config.uploadLabel = Upload Yubikey Seed File
mfa.yubikey.config.revokeLabel = Revoke Yubikey Seed
mfa.yubikey.config.revokePlaceholder = Enter Yubikey serial number
mfa.yubikey.config.revokeButton = Find Yubikey
mfa.yubikey.config.upload.success = File uploaded!
mfa.yubikey.config.upload.error = File uploaded with errors
mfa.yubikey.config.delete = Delete Yubikey
mfa.yubikey.config.delete.explain = Deleting this Yubikey will remove it from the database.
mfa.yubikey.config.confirmDeleted = Yubikey successfully removed from the database
mfa.yubikey.config.keysAdded = {0} Yubikeys successfully added
mfa.yubikey.config.keysFailed = {0} Yubikeys failed to be added
mfa.yubikey.config.keysSkipped = {0} Yubikeys were skipped; please try again later
mfa.yubikey.config.serialNotFound = Yubikey serial number not found
mfa.yubikey.config.serialNotFound.detail = The Yubikey seed does not exist
mfa.yubikey.config.nothingAdded = No new Yubikey seed added to database
mfa.yubikey.config.nothingAdded.detail = Seeds are either duplicates or not applicable.
mfa.yubikey.config.fileSize.error = The file size is too big. Please check the file type and formatting.
mfa.yubikey.lastUpdated = Last Updated
mfa.yubikey.status = Status
mfa.yubikey.lastVerified = Last Used

#Trusted Orign page
origins.filter.all=All Origins
origins.filter.cors=CORS
origins.filter.redirect=Redirect


#Trusted Origins API-related messages
origin.name_already_exists = Origin with name [{0}] already in use
origin.origin_already_exists = Origin with value [{0}] already in use
origin.bad_origin = Origin value [{0}] is not valid. Error : [{1}]
origin.bad_origin_with_query = Origin value [{0}] should not have query [{1}]
origin.bad_origin_with_path = Origin value [{0}] should not have path [{1}]

# Security > API > Trusted Origin
origin.name_already_exists = Origin with same name already in use
origin.origin_already_exists = Origin with same value already in use
origin.bad_origin = Origin value is not valid
origin.delete = Delete Origin
origin.delete.explain = Are you sure you want to delete this origin?
origin.delete.confirm = Origin has been deleted
origin.name.placeholder = Company logout page
origin.type.cors = CORS
origin.type.cors.explain = Selecting 'CORS' enables the origin URL to access Okta APIs from Javascript.
origin.type.redirect = Redirect
origin.type.redirect.explain = Selecting 'Redirect' points users to the origin URL during logout.
trustedOrigins = Trusted Origins
name = Name
type = Type
actions = Actions
originURL = Origin URL
origin.originURL.tooltip = Input origin URL for Okta API access or custom page redirect.
addOrigin = Add Origin
addOrigins = Add Origins
addOrigins.explain = Add Origin URLs to redirect users to custom screens or enable browser-based applications to access Okta APIs from Javascript (CORS).

# Security > Networks and Geographies
zones.page.title = Network zones
zones.addZone = Add Zone
zones.iprange = IP Range
zones.iprange.explain = Create zones by IP ranges
zones.trustedProxy = Trusted Proxy
zones.showAll=See All
zones.showLess=Show Less
zones.geolocation = Location
zones.geolocation.explain = Create zones by country and region
zones.forms.title.addIpRange = Add IP Range Zone
zones.forms.title.editIpRange = Edit IP Range Zone
zones.forms.title.addLocationRange = Add Location Zone
zones.forms.title.editLocationRange = Edit Location Zone
zones.forms.label.zoneName = Zone Name
zones.forms.label.country = Country
zones.forms.label.region = State/Region (Optional)
zones.forms.label.regionLoading = Loading...
zones.forms.label.addAnotherLocation = Add Another Location
zones.forms.label.zoneDescription = Zone Description
zones.forms.label.gateways = Public Gateway IPs
zones.forms.explain.gateways = Add your current IP address
zones.forms.label.trustedProxies = Trusted Proxy IPs
zones.forms.tooltip = Separate entries with a new line or comma. Use CIDR notation or separate IPs in a range with a dash.<br> Example: 127.0.0.1, 192.168.0.0/24<br> 192.168.0.1-192.168.0.254
zones.forms.label.zscalerIp = Add Zscaler IP Addresses.
zones.forms.label.addAnother = Add Another
zones.forms.label.createZone = Create Zone
zones.forms.title.delete = Delete Zone
zones.forms.explain.delete = Are you sure you want to delete this zone?
zones.forms.explain.proxies=ZScaler proxy addresses can be found <a target="_blank" href="https://ips.zscaler.net/cenr">here</a>

# Filter titles for the people page
people.filters.everyone.title = Everyone
people.filters.activated.title = Activated
people.filters.pending.title = Pending Activation
people.filters.passwordReset.title = Password Reset
people.filters.passwordExpired.title = Password Expired
people.filters.deactivated.title = Deactivated
people.filters.lockedOut.title = Locked out
people.filters.last30.title = Added in last 30 days
people.filters.suspended.title = Suspended
people.create.userLimitReached=Cannot create user.  Maximum number of users has been reached.
people.create.button=Add Person
people.create.success=Person added!
people.create.modal.title=Add Person
people.create.modal.firstName=First name
people.create.modal.lastName=Last name
people.create.modal.login=Username
people.create.modal.login.placeholder=Must be an email
people.create.modal.email=Primary email
people.create.modal.secondEmail=Secondary email
people.create.modal.secondEmail.subtitle=(optional)
people.create.modal.groups=Groups
people.create.modal.groups.subtitle=(optional)
people.create.modal.groups.nogroups=You haven\'t added any <a class="link-text" href="/admin/groups" target="_blank">groups</a>
people.create.modal.groups.failure=User was added, but could not be assigned to these groups. Try assigning this user to groups from their <a class="link-text" href="/admin/user/profile/view/{0}#tab-groups" target="_blank">user profile</a> at a later time.
people.create.modal.activate=Send user activation email now
people.create.modal.activate.tooltip=When selected, the new user activation email is sent to this person and their account status changes from pending to active.
people.create.modal.save=Add Person
people.create.modal.saveAndAdd=Save and Add Another

#
# Facebook at work
#
app.facebook_at_work.error.manager_not_found_in_facebook={0}. Manager with email {1} does not exist in Facebook At Work and will not be set for this user.
